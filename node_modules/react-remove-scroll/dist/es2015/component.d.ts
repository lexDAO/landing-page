import * as React from 'react';
export declare const getTouchY: (event: React.TouchEvent<Element>) => number;
export interface IRemoveScrollProps {
    noIsolation?: boolean;
    forwardProps?: boolean;
    enabled?: boolean;
    className?: string;
    removeScrollBar?: boolean;
    shards?: Array<React.RefObject<any> | HTMLElement>;
}
export declare class RemoveScroll extends React.Component<IRemoveScrollProps> {
    static classNames: {
        fullWidth: string;
        zeroRight: string;
    };
    static defaultProps: {
        enabled: boolean;
        removeScrollBar: boolean;
    };
    private static stack;
    private shouldPreventQueue;
    private touchStart;
    private ref;
    componentDidMount(): void;
    componentWillUnmount(): void;
    componentDidUpdate(oldProps: IRemoveScrollProps): void;
    enable(): void;
    disable(): void;
    shouldCancelEvent(event: any, parent: HTMLElement): boolean;
    shouldPrevent: (event: any) => void;
    shouldCancel: (name: string, delta: number, target: any, should: boolean) => void;
    scrollTouchStart: (event: any) => void;
    scrollWheel: (event: any) => void;
    scrollTouchMove: (event: React.TouchEvent<HTMLDivElement>) => void;
    render(): JSX.Element;
}
