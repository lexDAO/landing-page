{"ast":null,"code":"\"use strict\";\n\nimport _classCallCheck from \"/Users/kerp/Documents/GitHub/landing-page/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kerp/Documents/GitHub/landing-page/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nvar _permanentCensorErrors = false;\nvar _censorErrors = false;\nvar LogLevels = {\n  debug: 1,\n  \"default\": 2,\n  info: 2,\n  warning: 3,\n  error: 4,\n  off: 5\n};\nvar _logLevel = LogLevels[\"default\"];\nimport { version } from \"./_version\";\nvar _globalLogger = null;\n\nfunction _checkNormalize() {\n  try {\n    var missing = []; // Make sure all forms of normalization are supported\n\n    [\"NFD\", \"NFC\", \"NFKD\", \"NFKC\"].forEach(function (form) {\n      try {\n        if (\"test\".normalize(form) !== \"test\") {\n          throw new Error(\"bad normalize\");\n        }\n\n        ;\n      } catch (error) {\n        missing.push(form);\n      }\n    });\n\n    if (missing.length) {\n      throw new Error(\"missing \" + missing.join(\", \"));\n    }\n\n    if (String.fromCharCode(0xe9).normalize(\"NFD\") !== String.fromCharCode(0x65, 0x0301)) {\n      throw new Error(\"broken implementation\");\n    }\n  } catch (error) {\n    return error.message;\n  }\n\n  return null;\n}\n\nvar _normalizeError = _checkNormalize();\n\nexport var LogLevel;\n\n(function (LogLevel) {\n  LogLevel[\"DEBUG\"] = \"DEBUG\";\n  LogLevel[\"INFO\"] = \"INFO\";\n  LogLevel[\"WARNING\"] = \"WARNING\";\n  LogLevel[\"ERROR\"] = \"ERROR\";\n  LogLevel[\"OFF\"] = \"OFF\";\n})(LogLevel || (LogLevel = {}));\n\nexport var ErrorCode;\n\n(function (ErrorCode) {\n  ///////////////////\n  // Generic Errors\n  // Unknown Error\n  ErrorCode[\"UNKNOWN_ERROR\"] = \"UNKNOWN_ERROR\"; // Not Implemented\n\n  ErrorCode[\"NOT_IMPLEMENTED\"] = \"NOT_IMPLEMENTED\"; // Unsupported Operation\n  //   - operation\n\n  ErrorCode[\"UNSUPPORTED_OPERATION\"] = \"UNSUPPORTED_OPERATION\"; // Network Error (i.e. Ethereum Network, such as an invalid chain ID)\n\n  ErrorCode[\"NETWORK_ERROR\"] = \"NETWORK_ERROR\"; // Some sort of bad response from the server\n\n  ErrorCode[\"SERVER_ERROR\"] = \"SERVER_ERROR\"; // Timeout\n\n  ErrorCode[\"TIMEOUT\"] = \"TIMEOUT\"; ///////////////////\n  // Operational  Errors\n  // Buffer Overrun\n\n  ErrorCode[\"BUFFER_OVERRUN\"] = \"BUFFER_OVERRUN\"; // Numeric Fault\n  //   - operation: the operation being executed\n  //   - fault: the reason this faulted\n\n  ErrorCode[\"NUMERIC_FAULT\"] = \"NUMERIC_FAULT\"; ///////////////////\n  // Argument Errors\n  // Missing new operator to an object\n  //  - name: The name of the class\n\n  ErrorCode[\"MISSING_NEW\"] = \"MISSING_NEW\"; // Invalid argument (e.g. value is incompatible with type) to a function:\n  //   - argument: The argument name that was invalid\n  //   - value: The value of the argument\n\n  ErrorCode[\"INVALID_ARGUMENT\"] = \"INVALID_ARGUMENT\"; // Missing argument to a function:\n  //   - count: The number of arguments received\n  //   - expectedCount: The number of arguments expected\n\n  ErrorCode[\"MISSING_ARGUMENT\"] = \"MISSING_ARGUMENT\"; // Too many arguments\n  //   - count: The number of arguments received\n  //   - expectedCount: The number of arguments expected\n\n  ErrorCode[\"UNEXPECTED_ARGUMENT\"] = \"UNEXPECTED_ARGUMENT\"; ///////////////////\n  // Blockchain Errors\n  // Call exception\n  //  - transaction: the transaction\n  //  - address?: the contract address\n  //  - args?: The arguments passed into the function\n  //  - method?: The Solidity method signature\n  //  - errorSignature?: The EIP848 error signature\n  //  - errorArgs?: The EIP848 error parameters\n  //  - reason: The reason (only for EIP848 \"Error(string)\")\n\n  ErrorCode[\"CALL_EXCEPTION\"] = \"CALL_EXCEPTION\"; // Insufficien funds (< value + gasLimit * gasPrice)\n  //   - transaction: the transaction attempted\n\n  ErrorCode[\"INSUFFICIENT_FUNDS\"] = \"INSUFFICIENT_FUNDS\"; // Nonce has already been used\n  //   - transaction: the transaction attempted\n\n  ErrorCode[\"NONCE_EXPIRED\"] = \"NONCE_EXPIRED\"; // The replacement fee for the transaction is too low\n  //   - transaction: the transaction attempted\n\n  ErrorCode[\"REPLACEMENT_UNDERPRICED\"] = \"REPLACEMENT_UNDERPRICED\"; // The gas limit could not be estimated\n  //   - transaction: the transaction passed to estimateGas\n\n  ErrorCode[\"UNPREDICTABLE_GAS_LIMIT\"] = \"UNPREDICTABLE_GAS_LIMIT\";\n})(ErrorCode || (ErrorCode = {}));\n\n;\nexport var Logger = /*#__PURE__*/function () {\n  function Logger(version) {\n    _classCallCheck(this, Logger);\n\n    Object.defineProperty(this, \"version\", {\n      enumerable: true,\n      value: version,\n      writable: false\n    });\n  }\n\n  _createClass(Logger, [{\n    key: \"_log\",\n    value: function _log(logLevel, args) {\n      var level = logLevel.toLowerCase();\n\n      if (LogLevels[level] == null) {\n        this.throwArgumentError(\"invalid log level name\", \"logLevel\", logLevel);\n      }\n\n      if (_logLevel > LogLevels[level]) {\n        return;\n      }\n\n      console.log.apply(console, args);\n    }\n  }, {\n    key: \"debug\",\n    value: function debug() {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      this._log(Logger.levels.DEBUG, args);\n    }\n  }, {\n    key: \"info\",\n    value: function info() {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      this._log(Logger.levels.INFO, args);\n    }\n  }, {\n    key: \"warn\",\n    value: function warn() {\n      for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        args[_key3] = arguments[_key3];\n      }\n\n      this._log(Logger.levels.WARNING, args);\n    }\n  }, {\n    key: \"makeError\",\n    value: function makeError(message, code, params) {\n      // Errors are being censored\n      if (_censorErrors) {\n        return this.makeError(\"censored error\", code, {});\n      }\n\n      if (!code) {\n        code = Logger.errors.UNKNOWN_ERROR;\n      }\n\n      if (!params) {\n        params = {};\n      }\n\n      var messageDetails = [];\n      Object.keys(params).forEach(function (key) {\n        try {\n          messageDetails.push(key + \"=\" + JSON.stringify(params[key]));\n        } catch (error) {\n          messageDetails.push(key + \"=\" + JSON.stringify(params[key].toString()));\n        }\n      });\n      messageDetails.push(\"code=\".concat(code));\n      messageDetails.push(\"version=\".concat(this.version));\n      var reason = message;\n\n      if (messageDetails.length) {\n        message += \" (\" + messageDetails.join(\", \") + \")\";\n      } // @TODO: Any??\n\n\n      var error = new Error(message);\n      error.reason = reason;\n      error.code = code;\n      Object.keys(params).forEach(function (key) {\n        error[key] = params[key];\n      });\n      return error;\n    }\n  }, {\n    key: \"throwError\",\n    value: function throwError(message, code, params) {\n      throw this.makeError(message, code, params);\n    }\n  }, {\n    key: \"throwArgumentError\",\n    value: function throwArgumentError(message, name, value) {\n      return this.throwError(message, Logger.errors.INVALID_ARGUMENT, {\n        argument: name,\n        value: value\n      });\n    }\n  }, {\n    key: \"checkNormalize\",\n    value: function checkNormalize(message) {\n      if (message == null) {\n        message = \"platform missing String.prototype.normalize\";\n      }\n\n      if (_normalizeError) {\n        this.throwError(\"platform missing String.prototype.normalize\", Logger.errors.UNSUPPORTED_OPERATION, {\n          operation: \"String.prototype.normalize\",\n          form: _normalizeError\n        });\n      }\n    }\n  }, {\n    key: \"checkSafeUint53\",\n    value: function checkSafeUint53(value, message) {\n      if (typeof value !== \"number\") {\n        return;\n      }\n\n      if (message == null) {\n        message = \"value not safe\";\n      }\n\n      if (value < 0 || value >= 0x1fffffffffffff) {\n        this.throwError(message, Logger.errors.NUMERIC_FAULT, {\n          operation: \"checkSafeInteger\",\n          fault: \"out-of-safe-range\",\n          value: value\n        });\n      }\n\n      if (value % 1) {\n        this.throwError(message, Logger.errors.NUMERIC_FAULT, {\n          operation: \"checkSafeInteger\",\n          fault: \"non-integer\",\n          value: value\n        });\n      }\n    }\n  }, {\n    key: \"checkArgumentCount\",\n    value: function checkArgumentCount(count, expectedCount, message) {\n      if (message) {\n        message = \": \" + message;\n      } else {\n        message = \"\";\n      }\n\n      if (count < expectedCount) {\n        this.throwError(\"missing argument\" + message, Logger.errors.MISSING_ARGUMENT, {\n          count: count,\n          expectedCount: expectedCount\n        });\n      }\n\n      if (count > expectedCount) {\n        this.throwError(\"too many arguments\" + message, Logger.errors.UNEXPECTED_ARGUMENT, {\n          count: count,\n          expectedCount: expectedCount\n        });\n      }\n    }\n  }, {\n    key: \"checkNew\",\n    value: function checkNew(target, kind) {\n      if (target === Object || target == null) {\n        this.throwError(\"missing new\", Logger.errors.MISSING_NEW, {\n          name: kind.name\n        });\n      }\n    }\n  }, {\n    key: \"checkAbstract\",\n    value: function checkAbstract(target, kind) {\n      if (target === kind) {\n        this.throwError(\"cannot instantiate abstract class \" + JSON.stringify(kind.name) + \" directly; use a sub-class\", Logger.errors.UNSUPPORTED_OPERATION, {\n          name: target.name,\n          operation: \"new\"\n        });\n      } else if (target === Object || target == null) {\n        this.throwError(\"missing new\", Logger.errors.MISSING_NEW, {\n          name: kind.name\n        });\n      }\n    }\n  }], [{\n    key: \"globalLogger\",\n    value: function globalLogger() {\n      if (!_globalLogger) {\n        _globalLogger = new Logger(version);\n      }\n\n      return _globalLogger;\n    }\n  }, {\n    key: \"setCensorship\",\n    value: function setCensorship(censorship, permanent) {\n      if (!censorship && permanent) {\n        this.globalLogger().throwError(\"cannot permanently disable censorship\", Logger.errors.UNSUPPORTED_OPERATION, {\n          operation: \"setCensorship\"\n        });\n      }\n\n      if (_permanentCensorErrors) {\n        if (!censorship) {\n          return;\n        }\n\n        this.globalLogger().throwError(\"error censorship permanent\", Logger.errors.UNSUPPORTED_OPERATION, {\n          operation: \"setCensorship\"\n        });\n      }\n\n      _censorErrors = !!censorship;\n      _permanentCensorErrors = !!permanent;\n    }\n  }, {\n    key: \"setLogLevel\",\n    value: function setLogLevel(logLevel) {\n      var level = LogLevels[logLevel];\n\n      if (level == null) {\n        Logger.globalLogger().warn(\"invalid log level - \" + logLevel);\n        return;\n      }\n\n      _logLevel = level;\n    }\n  }]);\n\n  return Logger;\n}();\nLogger.errors = ErrorCode;\nLogger.levels = LogLevel;","map":{"version":3,"sources":["/Users/kerp/Documents/GitHub/landing-page/node_modules/@ethersproject/logger/lib.esm/index.js"],"names":["_permanentCensorErrors","_censorErrors","LogLevels","debug","info","warning","error","off","_logLevel","version","_globalLogger","_checkNormalize","missing","forEach","form","normalize","Error","push","length","join","String","fromCharCode","message","_normalizeError","LogLevel","ErrorCode","Logger","Object","defineProperty","enumerable","value","writable","logLevel","args","level","toLowerCase","throwArgumentError","console","log","apply","_log","levels","DEBUG","INFO","WARNING","code","params","makeError","errors","UNKNOWN_ERROR","messageDetails","keys","key","JSON","stringify","toString","reason","name","throwError","INVALID_ARGUMENT","argument","UNSUPPORTED_OPERATION","operation","NUMERIC_FAULT","fault","count","expectedCount","MISSING_ARGUMENT","UNEXPECTED_ARGUMENT","target","kind","MISSING_NEW","censorship","permanent","globalLogger","warn"],"mappings":"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","sourcesContent":["\"use strict\";\nlet _permanentCensorErrors = false;\nlet _censorErrors = false;\nconst LogLevels = { debug: 1, \"default\": 2, info: 2, warning: 3, error: 4, off: 5 };\nlet _logLevel = LogLevels[\"default\"];\nimport { version } from \"./_version\";\nlet _globalLogger = null;\nfunction _checkNormalize() {\n    try {\n        const missing = [];\n        // Make sure all forms of normalization are supported\n        [\"NFD\", \"NFC\", \"NFKD\", \"NFKC\"].forEach((form) => {\n            try {\n                if (\"test\".normalize(form) !== \"test\") {\n                    throw new Error(\"bad normalize\");\n                }\n                ;\n            }\n            catch (error) {\n                missing.push(form);\n            }\n        });\n        if (missing.length) {\n            throw new Error(\"missing \" + missing.join(\", \"));\n        }\n        if (String.fromCharCode(0xe9).normalize(\"NFD\") !== String.fromCharCode(0x65, 0x0301)) {\n            throw new Error(\"broken implementation\");\n        }\n    }\n    catch (error) {\n        return error.message;\n    }\n    return null;\n}\nconst _normalizeError = _checkNormalize();\nexport var LogLevel;\n(function (LogLevel) {\n    LogLevel[\"DEBUG\"] = \"DEBUG\";\n    LogLevel[\"INFO\"] = \"INFO\";\n    LogLevel[\"WARNING\"] = \"WARNING\";\n    LogLevel[\"ERROR\"] = \"ERROR\";\n    LogLevel[\"OFF\"] = \"OFF\";\n})(LogLevel || (LogLevel = {}));\nexport var ErrorCode;\n(function (ErrorCode) {\n    ///////////////////\n    // Generic Errors\n    // Unknown Error\n    ErrorCode[\"UNKNOWN_ERROR\"] = \"UNKNOWN_ERROR\";\n    // Not Implemented\n    ErrorCode[\"NOT_IMPLEMENTED\"] = \"NOT_IMPLEMENTED\";\n    // Unsupported Operation\n    //   - operation\n    ErrorCode[\"UNSUPPORTED_OPERATION\"] = \"UNSUPPORTED_OPERATION\";\n    // Network Error (i.e. Ethereum Network, such as an invalid chain ID)\n    ErrorCode[\"NETWORK_ERROR\"] = \"NETWORK_ERROR\";\n    // Some sort of bad response from the server\n    ErrorCode[\"SERVER_ERROR\"] = \"SERVER_ERROR\";\n    // Timeout\n    ErrorCode[\"TIMEOUT\"] = \"TIMEOUT\";\n    ///////////////////\n    // Operational  Errors\n    // Buffer Overrun\n    ErrorCode[\"BUFFER_OVERRUN\"] = \"BUFFER_OVERRUN\";\n    // Numeric Fault\n    //   - operation: the operation being executed\n    //   - fault: the reason this faulted\n    ErrorCode[\"NUMERIC_FAULT\"] = \"NUMERIC_FAULT\";\n    ///////////////////\n    // Argument Errors\n    // Missing new operator to an object\n    //  - name: The name of the class\n    ErrorCode[\"MISSING_NEW\"] = \"MISSING_NEW\";\n    // Invalid argument (e.g. value is incompatible with type) to a function:\n    //   - argument: The argument name that was invalid\n    //   - value: The value of the argument\n    ErrorCode[\"INVALID_ARGUMENT\"] = \"INVALID_ARGUMENT\";\n    // Missing argument to a function:\n    //   - count: The number of arguments received\n    //   - expectedCount: The number of arguments expected\n    ErrorCode[\"MISSING_ARGUMENT\"] = \"MISSING_ARGUMENT\";\n    // Too many arguments\n    //   - count: The number of arguments received\n    //   - expectedCount: The number of arguments expected\n    ErrorCode[\"UNEXPECTED_ARGUMENT\"] = \"UNEXPECTED_ARGUMENT\";\n    ///////////////////\n    // Blockchain Errors\n    // Call exception\n    //  - transaction: the transaction\n    //  - address?: the contract address\n    //  - args?: The arguments passed into the function\n    //  - method?: The Solidity method signature\n    //  - errorSignature?: The EIP848 error signature\n    //  - errorArgs?: The EIP848 error parameters\n    //  - reason: The reason (only for EIP848 \"Error(string)\")\n    ErrorCode[\"CALL_EXCEPTION\"] = \"CALL_EXCEPTION\";\n    // Insufficien funds (< value + gasLimit * gasPrice)\n    //   - transaction: the transaction attempted\n    ErrorCode[\"INSUFFICIENT_FUNDS\"] = \"INSUFFICIENT_FUNDS\";\n    // Nonce has already been used\n    //   - transaction: the transaction attempted\n    ErrorCode[\"NONCE_EXPIRED\"] = \"NONCE_EXPIRED\";\n    // The replacement fee for the transaction is too low\n    //   - transaction: the transaction attempted\n    ErrorCode[\"REPLACEMENT_UNDERPRICED\"] = \"REPLACEMENT_UNDERPRICED\";\n    // The gas limit could not be estimated\n    //   - transaction: the transaction passed to estimateGas\n    ErrorCode[\"UNPREDICTABLE_GAS_LIMIT\"] = \"UNPREDICTABLE_GAS_LIMIT\";\n})(ErrorCode || (ErrorCode = {}));\n;\nexport class Logger {\n    constructor(version) {\n        Object.defineProperty(this, \"version\", {\n            enumerable: true,\n            value: version,\n            writable: false\n        });\n    }\n    _log(logLevel, args) {\n        const level = logLevel.toLowerCase();\n        if (LogLevels[level] == null) {\n            this.throwArgumentError(\"invalid log level name\", \"logLevel\", logLevel);\n        }\n        if (_logLevel > LogLevels[level]) {\n            return;\n        }\n        console.log.apply(console, args);\n    }\n    debug(...args) {\n        this._log(Logger.levels.DEBUG, args);\n    }\n    info(...args) {\n        this._log(Logger.levels.INFO, args);\n    }\n    warn(...args) {\n        this._log(Logger.levels.WARNING, args);\n    }\n    makeError(message, code, params) {\n        // Errors are being censored\n        if (_censorErrors) {\n            return this.makeError(\"censored error\", code, {});\n        }\n        if (!code) {\n            code = Logger.errors.UNKNOWN_ERROR;\n        }\n        if (!params) {\n            params = {};\n        }\n        const messageDetails = [];\n        Object.keys(params).forEach((key) => {\n            try {\n                messageDetails.push(key + \"=\" + JSON.stringify(params[key]));\n            }\n            catch (error) {\n                messageDetails.push(key + \"=\" + JSON.stringify(params[key].toString()));\n            }\n        });\n        messageDetails.push(`code=${code}`);\n        messageDetails.push(`version=${this.version}`);\n        const reason = message;\n        if (messageDetails.length) {\n            message += \" (\" + messageDetails.join(\", \") + \")\";\n        }\n        // @TODO: Any??\n        const error = new Error(message);\n        error.reason = reason;\n        error.code = code;\n        Object.keys(params).forEach(function (key) {\n            error[key] = params[key];\n        });\n        return error;\n    }\n    throwError(message, code, params) {\n        throw this.makeError(message, code, params);\n    }\n    throwArgumentError(message, name, value) {\n        return this.throwError(message, Logger.errors.INVALID_ARGUMENT, {\n            argument: name,\n            value: value\n        });\n    }\n    checkNormalize(message) {\n        if (message == null) {\n            message = \"platform missing String.prototype.normalize\";\n        }\n        if (_normalizeError) {\n            this.throwError(\"platform missing String.prototype.normalize\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"String.prototype.normalize\", form: _normalizeError\n            });\n        }\n    }\n    checkSafeUint53(value, message) {\n        if (typeof (value) !== \"number\") {\n            return;\n        }\n        if (message == null) {\n            message = \"value not safe\";\n        }\n        if (value < 0 || value >= 0x1fffffffffffff) {\n            this.throwError(message, Logger.errors.NUMERIC_FAULT, {\n                operation: \"checkSafeInteger\",\n                fault: \"out-of-safe-range\",\n                value: value\n            });\n        }\n        if (value % 1) {\n            this.throwError(message, Logger.errors.NUMERIC_FAULT, {\n                operation: \"checkSafeInteger\",\n                fault: \"non-integer\",\n                value: value\n            });\n        }\n    }\n    checkArgumentCount(count, expectedCount, message) {\n        if (message) {\n            message = \": \" + message;\n        }\n        else {\n            message = \"\";\n        }\n        if (count < expectedCount) {\n            this.throwError(\"missing argument\" + message, Logger.errors.MISSING_ARGUMENT, {\n                count: count,\n                expectedCount: expectedCount\n            });\n        }\n        if (count > expectedCount) {\n            this.throwError(\"too many arguments\" + message, Logger.errors.UNEXPECTED_ARGUMENT, {\n                count: count,\n                expectedCount: expectedCount\n            });\n        }\n    }\n    checkNew(target, kind) {\n        if (target === Object || target == null) {\n            this.throwError(\"missing new\", Logger.errors.MISSING_NEW, { name: kind.name });\n        }\n    }\n    checkAbstract(target, kind) {\n        if (target === kind) {\n            this.throwError(\"cannot instantiate abstract class \" + JSON.stringify(kind.name) + \" directly; use a sub-class\", Logger.errors.UNSUPPORTED_OPERATION, { name: target.name, operation: \"new\" });\n        }\n        else if (target === Object || target == null) {\n            this.throwError(\"missing new\", Logger.errors.MISSING_NEW, { name: kind.name });\n        }\n    }\n    static globalLogger() {\n        if (!_globalLogger) {\n            _globalLogger = new Logger(version);\n        }\n        return _globalLogger;\n    }\n    static setCensorship(censorship, permanent) {\n        if (!censorship && permanent) {\n            this.globalLogger().throwError(\"cannot permanently disable censorship\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"setCensorship\"\n            });\n        }\n        if (_permanentCensorErrors) {\n            if (!censorship) {\n                return;\n            }\n            this.globalLogger().throwError(\"error censorship permanent\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"setCensorship\"\n            });\n        }\n        _censorErrors = !!censorship;\n        _permanentCensorErrors = !!permanent;\n    }\n    static setLogLevel(logLevel) {\n        const level = LogLevels[logLevel];\n        if (level == null) {\n            Logger.globalLogger().warn(\"invalid log level - \" + logLevel);\n            return;\n        }\n        _logLevel = level;\n    }\n}\nLogger.errors = ErrorCode;\nLogger.levels = LogLevel;\n"]},"metadata":{},"sourceType":"module"}