{"ast":null,"code":"import _regeneratorRuntime from\"/Users/kerp/Documents/GitHub/landing-page/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/kerp/Documents/GitHub/landing-page/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/kerp/Documents/GitHub/landing-page/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _defineProperty from\"/Users/kerp/Documents/GitHub/landing-page/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/Users/kerp/Documents/GitHub/landing-page/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import React,{createContext,useContext,useReducer,useState,useRef,useMemo,useCallback,useEffect}from'react';import{BigNumber}from'@uniswap/sdk';import{ethers}from'ethers';import{useWeb3React,useDebounce}from'../hooks';import{getEtherBalance,getTokenBalance,isAddress}from'../utils';import{useBlockNumber}from'./Application';import{useTokenDetails,useAllTokenDetails}from'./Tokens';import{getUSDPrice}from'../utils/price';var LOCAL_STORAGE_KEY='BALANCES';var SHORT_BLOCK_TIMEOUT=60*2/15;// in seconds, represented as a block number delta\nvar LONG_BLOCK_TIMEOUT=60*15/15;// in seconds, represented as a block number delta\nvar EXCHANGES_BLOCK_TIMEOUT=60*5/15;// in seconds, represented as a block number delta\nfunction initialize(){try{return JSON.parse(window.localStorage.getItem(LOCAL_STORAGE_KEY));}catch(_unused){return{};}}var Action;(function(Action){Action[Action[\"START_LISTENING\"]=0]=\"START_LISTENING\";Action[Action[\"STOP_LISTENING\"]=1]=\"STOP_LISTENING\";Action[Action[\"UPDATE\"]=2]=\"UPDATE\";Action[Action[\"BATCH_UPDATE_ACCOUNT\"]=3]=\"BATCH_UPDATE_ACCOUNT\";Action[Action[\"BATCH_UPDATE_EXCHANGES\"]=4]=\"BATCH_UPDATE_EXCHANGES\";})(Action||(Action={}));function reducer(state,_ref){var type=_ref.type,payload=_ref.payload;switch(type){case Action.START_LISTENING:{var _state$_chainId,_state$_chainId$_addr,_state$_chainId2;var _chainId=payload.chainId,_address=payload.address,_tokenAddress=payload.tokenAddress;var uninitialized=!!!(state===null||state===void 0?void 0:(_state$_chainId=state[_chainId])===null||_state$_chainId===void 0?void 0:(_state$_chainId$_addr=_state$_chainId[_address])===null||_state$_chainId$_addr===void 0?void 0:_state$_chainId$_addr[_tokenAddress]);return _objectSpread(_objectSpread({},state),{},_defineProperty({},_chainId,_objectSpread(_objectSpread({},state===null||state===void 0?void 0:state[_chainId]),{},_defineProperty({},_address,_objectSpread(_objectSpread({},state===null||state===void 0?void 0:(_state$_chainId2=state[_chainId])===null||_state$_chainId2===void 0?void 0:_state$_chainId2[_address]),{},_defineProperty({},_tokenAddress,uninitialized?{listenerCount:1}:_objectSpread(_objectSpread({},state[_chainId][_address][_tokenAddress]),{},{listenerCount:state[_chainId][_address][_tokenAddress].listenerCount+1})))))));}case Action.STOP_LISTENING:{var _state$_chainId3,_state$_chainId4,_state$_chainId4$_add;var _chainId2=payload.chainId,_address2=payload.address,_tokenAddress2=payload.tokenAddress;return _objectSpread(_objectSpread({},state),{},_defineProperty({},_chainId2,_objectSpread(_objectSpread({},state===null||state===void 0?void 0:state[_chainId2]),{},_defineProperty({},_address2,_objectSpread(_objectSpread({},state===null||state===void 0?void 0:(_state$_chainId3=state[_chainId2])===null||_state$_chainId3===void 0?void 0:_state$_chainId3[_address2]),{},_defineProperty({},_tokenAddress2,_objectSpread(_objectSpread({},state===null||state===void 0?void 0:(_state$_chainId4=state[_chainId2])===null||_state$_chainId4===void 0?void 0:(_state$_chainId4$_add=_state$_chainId4[_address2])===null||_state$_chainId4$_add===void 0?void 0:_state$_chainId4$_add[_tokenAddress2]),{},{listenerCount:state[_chainId2][_address2][_tokenAddress2].listenerCount-1})))))));}case Action.UPDATE:{var _state$_chainId5,_state$_chainId6,_state$_chainId6$_add;var _chainId3=payload.chainId,_address3=payload.address,_tokenAddress3=payload.tokenAddress,value=payload.value,blockNumber=payload.blockNumber;return _objectSpread(_objectSpread({},state),{},_defineProperty({},_chainId3,_objectSpread(_objectSpread({},state===null||state===void 0?void 0:state[_chainId3]),{},_defineProperty({},_address3,_objectSpread(_objectSpread({},state===null||state===void 0?void 0:(_state$_chainId5=state[_chainId3])===null||_state$_chainId5===void 0?void 0:_state$_chainId5[_address3]),{},_defineProperty({},_tokenAddress3,_objectSpread(_objectSpread({},state===null||state===void 0?void 0:(_state$_chainId6=state[_chainId3])===null||_state$_chainId6===void 0?void 0:(_state$_chainId6$_add=_state$_chainId6[_address3])===null||_state$_chainId6$_add===void 0?void 0:_state$_chainId6$_add[_tokenAddress3]),{},{value:value,blockNumber:blockNumber})))))));}case Action.BATCH_UPDATE_ACCOUNT:{var _state$_chainId7;var _chainId4=payload.chainId,_address4=payload.address,tokenAddresses=payload.tokenAddresses,values=payload.values,_blockNumber=payload.blockNumber;return _objectSpread(_objectSpread({},state),{},_defineProperty({},_chainId4,_objectSpread(_objectSpread({},state===null||state===void 0?void 0:state[_chainId4]),{},_defineProperty({},_address4,_objectSpread(_objectSpread({},state===null||state===void 0?void 0:(_state$_chainId7=state[_chainId4])===null||_state$_chainId7===void 0?void 0:_state$_chainId7[_address4]),tokenAddresses.reduce(function(accumulator,tokenAddress,i){var _state$_chainId8,_state$_chainId8$_add;var value=values[i];accumulator[tokenAddress]=_objectSpread(_objectSpread({},state===null||state===void 0?void 0:(_state$_chainId8=state[_chainId4])===null||_state$_chainId8===void 0?void 0:(_state$_chainId8$_add=_state$_chainId8[_address4])===null||_state$_chainId8$_add===void 0?void 0:_state$_chainId8$_add[tokenAddress]),{},{value:value,blockNumber:_blockNumber});return accumulator;},{}))))));}case Action.BATCH_UPDATE_EXCHANGES:{var _chainId5=payload.chainId,exchangeAddresses=payload.exchangeAddresses,_tokenAddresses=payload.tokenAddresses,_values=payload.values,_blockNumber2=payload.blockNumber;return _objectSpread(_objectSpread({},state),{},_defineProperty({},_chainId5,_objectSpread(_objectSpread({},state===null||state===void 0?void 0:state[_chainId5]),exchangeAddresses.reduce(function(accumulator,exchangeAddress,i){var _state$_chainId9,_state$_chainId10,_state$_chainId10$exc;var tokenAddress=_tokenAddresses[i];var value=_values[i];accumulator[exchangeAddress]=_objectSpread(_objectSpread(_objectSpread({},state===null||state===void 0?void 0:(_state$_chainId9=state[_chainId5])===null||_state$_chainId9===void 0?void 0:_state$_chainId9[exchangeAddress]),accumulator===null||accumulator===void 0?void 0:accumulator[exchangeAddress]),{},_defineProperty({},tokenAddress,_objectSpread(_objectSpread({},state===null||state===void 0?void 0:(_state$_chainId10=state[_chainId5])===null||_state$_chainId10===void 0?void 0:(_state$_chainId10$exc=_state$_chainId10[exchangeAddress])===null||_state$_chainId10$exc===void 0?void 0:_state$_chainId10$exc[tokenAddress]),{},{value:value,blockNumber:_blockNumber2})));return accumulator;},{}))));}default:{throw Error(\"Unexpected action type in BalancesContext reducer: '\".concat(type,\"'.\"));}}}var BalancesContext=createContext([{},{}]);function useBalancesContext(){return useContext(BalancesContext);}export default function Provider(_ref2){var children=_ref2.children;var _useReducer=useReducer(reducer,undefined,initialize),_useReducer2=_slicedToArray(_useReducer,2),state=_useReducer2[0],dispatch=_useReducer2[1];var startListening=useCallback(function(chainId,address,tokenAddress){dispatch({type:Action.START_LISTENING,payload:{chainId:chainId,address:address,tokenAddress:tokenAddress}});},[]);var stopListening=useCallback(function(chainId,address,tokenAddress){dispatch({type:Action.STOP_LISTENING,payload:{chainId:chainId,address:address,tokenAddress:tokenAddress}});},[]);var update=useCallback(function(chainId,address,tokenAddress,value,blockNumber){dispatch({type:Action.UPDATE,payload:{chainId:chainId,address:address,tokenAddress:tokenAddress,value:value,blockNumber:blockNumber}});},[]);var batchUpdateAccount=useCallback(function(chainId,address,tokenAddresses,values,blockNumber){dispatch({type:Action.BATCH_UPDATE_ACCOUNT,payload:{chainId:chainId,address:address,tokenAddresses:tokenAddresses,values:values,blockNumber:blockNumber}});},[]);var batchUpdateExchanges=useCallback(function(chainId,exchangeAddresses,tokenAddresses,values,blockNumber){dispatch({type:Action.BATCH_UPDATE_EXCHANGES,payload:{chainId:chainId,exchangeAddresses:exchangeAddresses,tokenAddresses:tokenAddresses,values:values,blockNumber:blockNumber}});},[]);return/*#__PURE__*/React.createElement(BalancesContext.Provider,{value:useMemo(function(){return[state,{startListening:startListening,stopListening:stopListening,update:update,batchUpdateAccount:batchUpdateAccount,batchUpdateExchanges:batchUpdateExchanges}];},[state,startListening,stopListening,update,batchUpdateAccount,batchUpdateExchanges])},children);}export function Updater(){var _useWeb3React=useWeb3React(),chainId=_useWeb3React.chainId,account=_useWeb3React.account,library=_useWeb3React.library;var blockNumber=useBlockNumber();var _useBalancesContext=useBalancesContext(),_useBalancesContext2=_slicedToArray(_useBalancesContext,2),state=_useBalancesContext2[0],_useBalancesContext2$=_useBalancesContext2[1],update=_useBalancesContext2$.update,batchUpdateAccount=_useBalancesContext2$.batchUpdateAccount,batchUpdateExchanges=_useBalancesContext2$.batchUpdateExchanges;// debounce state a little bit to prevent useEffect craziness\nvar debouncedState=useDebounce(state,1000);// cache this debounced state in localstorage\nuseEffect(function(){window.localStorage.setItem(LOCAL_STORAGE_KEY,JSON.stringify(debouncedState));},[debouncedState]);// (slightly janky) balances-wide cache to prevent double/triple/etc. fetching\nvar fetchedAsOfCache=useRef({});// generic balances fetcher abstracting away difference between fetching ETH + token balances\nvar fetchBalance=useCallback(function(address,tokenAddress){return(tokenAddress==='ETH'?getEtherBalance(address,library):getTokenBalance(tokenAddress,address,library)).then(function(value){return value.toString();}).catch(function(){return null;});},[library]);// ensure that all balances with >=1 listeners are updated every block\nuseEffect(function(){if(typeof chainId==='number'&&typeof blockNumber==='number'){var _loop=function _loop(){var address=_Object$keys[_i];var _loop2=function _loop2(){var tokenAddress=_Object$keys2[_i2];var active=debouncedState[chainId][address][tokenAddress].listenerCount>0;if(active){var _fetchedAsOfCache$cur,_fetchedAsOfCache$cur2,_fetchedAsOfCache$cur3,_debouncedState$chain2,_debouncedState$chain3;var cachedFetchedAsOf=(_fetchedAsOfCache$cur=fetchedAsOfCache.current)===null||_fetchedAsOfCache$cur===void 0?void 0:(_fetchedAsOfCache$cur2=_fetchedAsOfCache$cur[chainId])===null||_fetchedAsOfCache$cur2===void 0?void 0:(_fetchedAsOfCache$cur3=_fetchedAsOfCache$cur2[address])===null||_fetchedAsOfCache$cur3===void 0?void 0:_fetchedAsOfCache$cur3[tokenAddress];var fetchedAsOf=(_debouncedState$chain2=(_debouncedState$chain3=debouncedState[chainId][address][tokenAddress])===null||_debouncedState$chain3===void 0?void 0:_debouncedState$chain3.blockNumber)!==null&&_debouncedState$chain2!==void 0?_debouncedState$chain2:cachedFetchedAsOf;if(fetchedAsOf!==blockNumber){var _fetchedAsOfCache$cur4,_fetchedAsOfCache$cur5,_fetchedAsOfCache$cur6;// fetch the balance...\nfetchBalance(address,tokenAddress).then(function(value){update(chainId,address,tokenAddress,value,blockNumber);});// ...and cache the fetch\nfetchedAsOfCache.current=_objectSpread(_objectSpread({},fetchedAsOfCache.current),{},_defineProperty({},chainId,_objectSpread(_objectSpread({},(_fetchedAsOfCache$cur4=fetchedAsOfCache.current)===null||_fetchedAsOfCache$cur4===void 0?void 0:_fetchedAsOfCache$cur4[chainId]),{},_defineProperty({},address,_objectSpread(_objectSpread({},(_fetchedAsOfCache$cur5=fetchedAsOfCache.current)===null||_fetchedAsOfCache$cur5===void 0?void 0:(_fetchedAsOfCache$cur6=_fetchedAsOfCache$cur5[chainId])===null||_fetchedAsOfCache$cur6===void 0?void 0:_fetchedAsOfCache$cur6[address]),{},_defineProperty({},tokenAddress,blockNumber))))));}}};for(var _i2=0,_Object$keys2=Object.keys(debouncedState===null||debouncedState===void 0?void 0:debouncedState[chainId][address]);_i2<_Object$keys2.length;_i2++){_loop2();}};for(var _i=0,_Object$keys=Object.keys((_debouncedState$chain=debouncedState===null||debouncedState===void 0?void 0:debouncedState[chainId])!==null&&_debouncedState$chain!==void 0?_debouncedState$chain:{});_i<_Object$keys.length;_i++){var _debouncedState$chain;_loop();}}},[chainId,blockNumber,debouncedState,fetchBalance,update]);// get a state ref for batch updates\nvar stateRef=useRef(state);useEffect(function(){stateRef.current=state;},[state]);var allTokenDetails=useAllTokenDetails();// ensure that we have the user balances for all tokens\nvar allTokens=useMemo(function(){return Object.keys(allTokenDetails);},[allTokenDetails]);useEffect(function(){if(typeof chainId==='number'&&typeof account==='string'&&typeof blockNumber==='number'){Promise.all(allTokens.filter(function(tokenAddress){var _stateRef$current,_stateRef$current$cha,_stateRef$current$cha2,_stateRef$current$cha3,_fetchedAsOfCache$cur7,_fetchedAsOfCache$cur8,_fetchedAsOfCache$cur9,_stateRef$current$cha4,_stateRef$current2,_stateRef$current2$ch,_stateRef$current2$ch2,_stateRef$current2$ch3;var hasValue=!!((_stateRef$current=stateRef.current)===null||_stateRef$current===void 0?void 0:(_stateRef$current$cha=_stateRef$current[chainId])===null||_stateRef$current$cha===void 0?void 0:(_stateRef$current$cha2=_stateRef$current$cha[account])===null||_stateRef$current$cha2===void 0?void 0:(_stateRef$current$cha3=_stateRef$current$cha2[tokenAddress])===null||_stateRef$current$cha3===void 0?void 0:_stateRef$current$cha3.value);var cachedFetchedAsOf=(_fetchedAsOfCache$cur7=fetchedAsOfCache.current)===null||_fetchedAsOfCache$cur7===void 0?void 0:(_fetchedAsOfCache$cur8=_fetchedAsOfCache$cur7[chainId])===null||_fetchedAsOfCache$cur8===void 0?void 0:(_fetchedAsOfCache$cur9=_fetchedAsOfCache$cur8[account])===null||_fetchedAsOfCache$cur9===void 0?void 0:_fetchedAsOfCache$cur9[tokenAddress];var fetchedAsOf=(_stateRef$current$cha4=(_stateRef$current2=stateRef.current)===null||_stateRef$current2===void 0?void 0:(_stateRef$current2$ch=_stateRef$current2[chainId])===null||_stateRef$current2$ch===void 0?void 0:(_stateRef$current2$ch2=_stateRef$current2$ch[account])===null||_stateRef$current2$ch2===void 0?void 0:(_stateRef$current2$ch3=_stateRef$current2$ch2[tokenAddress])===null||_stateRef$current2$ch3===void 0?void 0:_stateRef$current2$ch3.blockNumber)!==null&&_stateRef$current$cha4!==void 0?_stateRef$current$cha4:cachedFetchedAsOf;// if there's no value, and it's not being fetched, we need to fetch!\nif(!hasValue&&typeof cachedFetchedAsOf!=='number'){return true;// else, if there's a value, check if it's stale\n}else if(hasValue){var blocksElapsedSinceLastCheck=blockNumber-fetchedAsOf;var stale=blocksElapsedSinceLastCheck>=(stateRef.current[chainId][account][tokenAddress].value==='0'?LONG_BLOCK_TIMEOUT:SHORT_BLOCK_TIMEOUT);return stale;}else{return false;}}).map(/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(tokenAddress){var _fetchedAsOfCache$cur10,_fetchedAsOfCache$cur11,_fetchedAsOfCache$cur12;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:fetchedAsOfCache.current=_objectSpread(_objectSpread({},fetchedAsOfCache.current),{},_defineProperty({},chainId,_objectSpread(_objectSpread({},(_fetchedAsOfCache$cur10=fetchedAsOfCache.current)===null||_fetchedAsOfCache$cur10===void 0?void 0:_fetchedAsOfCache$cur10[chainId]),{},_defineProperty({},account,_objectSpread(_objectSpread({},(_fetchedAsOfCache$cur11=fetchedAsOfCache.current)===null||_fetchedAsOfCache$cur11===void 0?void 0:(_fetchedAsOfCache$cur12=_fetchedAsOfCache$cur11[chainId])===null||_fetchedAsOfCache$cur12===void 0?void 0:_fetchedAsOfCache$cur12[account]),{},_defineProperty({},tokenAddress,blockNumber))))));return _context.abrupt(\"return\",fetchBalance(account,tokenAddress).then(function(value){return{tokenAddress:tokenAddress,value:value};}));case 2:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref3.apply(this,arguments);};}())).then(function(results){batchUpdateAccount(chainId,account,results.map(function(result){return result.tokenAddress;}),results.map(function(result){return result.value;}),blockNumber);});}},[chainId,account,blockNumber,allTokens,fetchBalance,batchUpdateAccount]);// ensure that we have the eth and token balances for all exchanges\nvar allExchanges=useMemo(function(){return Object.keys(allTokenDetails).filter(function(tokenAddress){return tokenAddress!=='ETH';}).map(function(tokenAddress){return{tokenAddress:tokenAddress,exchangeAddress:allTokenDetails[tokenAddress].exchangeAddress};});},[allTokenDetails]);useEffect(function(){if(typeof chainId==='number'&&typeof blockNumber==='number'){Promise.all(allExchanges.filter(function(_ref4){var _stateRef$current3,_stateRef$current3$ch,_stateRef$current3$ch2,_stateRef$current3$ch3,_stateRef$current4,_stateRef$current4$ch,_stateRef$current4$ch2,_stateRef$current4$ch3,_fetchedAsOfCache$cur13,_fetchedAsOfCache$cur14,_fetchedAsOfCache$cur15,_fetchedAsOfCache$cur16,_fetchedAsOfCache$cur17,_fetchedAsOfCache$cur18,_stateRef$current$cha5,_stateRef$current5,_stateRef$current5$ch,_stateRef$current5$ch2,_stateRef$current5$ch3,_stateRef$current$cha6,_stateRef$current6,_stateRef$current6$ch,_stateRef$current6$ch2,_stateRef$current6$ch3;var exchangeAddress=_ref4.exchangeAddress,tokenAddress=_ref4.tokenAddress;var hasValueToken=!!((_stateRef$current3=stateRef.current)===null||_stateRef$current3===void 0?void 0:(_stateRef$current3$ch=_stateRef$current3[chainId])===null||_stateRef$current3$ch===void 0?void 0:(_stateRef$current3$ch2=_stateRef$current3$ch[exchangeAddress])===null||_stateRef$current3$ch2===void 0?void 0:(_stateRef$current3$ch3=_stateRef$current3$ch2[tokenAddress])===null||_stateRef$current3$ch3===void 0?void 0:_stateRef$current3$ch3.value);var hasValueETH=!!((_stateRef$current4=stateRef.current)===null||_stateRef$current4===void 0?void 0:(_stateRef$current4$ch=_stateRef$current4[chainId])===null||_stateRef$current4$ch===void 0?void 0:(_stateRef$current4$ch2=_stateRef$current4$ch[exchangeAddress])===null||_stateRef$current4$ch2===void 0?void 0:(_stateRef$current4$ch3=_stateRef$current4$ch2['ETH'])===null||_stateRef$current4$ch3===void 0?void 0:_stateRef$current4$ch3.value);var cachedFetchedAsOfToken=(_fetchedAsOfCache$cur13=fetchedAsOfCache.current)===null||_fetchedAsOfCache$cur13===void 0?void 0:(_fetchedAsOfCache$cur14=_fetchedAsOfCache$cur13[chainId])===null||_fetchedAsOfCache$cur14===void 0?void 0:(_fetchedAsOfCache$cur15=_fetchedAsOfCache$cur14[exchangeAddress])===null||_fetchedAsOfCache$cur15===void 0?void 0:_fetchedAsOfCache$cur15[tokenAddress];var cachedFetchedAsOfETH=(_fetchedAsOfCache$cur16=fetchedAsOfCache.current)===null||_fetchedAsOfCache$cur16===void 0?void 0:(_fetchedAsOfCache$cur17=_fetchedAsOfCache$cur16[chainId])===null||_fetchedAsOfCache$cur17===void 0?void 0:(_fetchedAsOfCache$cur18=_fetchedAsOfCache$cur17[exchangeAddress])===null||_fetchedAsOfCache$cur18===void 0?void 0:_fetchedAsOfCache$cur18['ETH'];var fetchedAsOfToken=(_stateRef$current$cha5=(_stateRef$current5=stateRef.current)===null||_stateRef$current5===void 0?void 0:(_stateRef$current5$ch=_stateRef$current5[chainId])===null||_stateRef$current5$ch===void 0?void 0:(_stateRef$current5$ch2=_stateRef$current5$ch[exchangeAddress])===null||_stateRef$current5$ch2===void 0?void 0:(_stateRef$current5$ch3=_stateRef$current5$ch2[tokenAddress])===null||_stateRef$current5$ch3===void 0?void 0:_stateRef$current5$ch3.blockNumber)!==null&&_stateRef$current$cha5!==void 0?_stateRef$current$cha5:cachedFetchedAsOfToken;var fetchedAsOfETH=(_stateRef$current$cha6=(_stateRef$current6=stateRef.current)===null||_stateRef$current6===void 0?void 0:(_stateRef$current6$ch=_stateRef$current6[chainId])===null||_stateRef$current6$ch===void 0?void 0:(_stateRef$current6$ch2=_stateRef$current6$ch[exchangeAddress])===null||_stateRef$current6$ch2===void 0?void 0:(_stateRef$current6$ch3=_stateRef$current6$ch2['ETH'])===null||_stateRef$current6$ch3===void 0?void 0:_stateRef$current6$ch3.blockNumber)!==null&&_stateRef$current$cha6!==void 0?_stateRef$current$cha6:cachedFetchedAsOfETH;// if there's no values, and they're not being fetched, we need to fetch!\nif((!hasValueToken||!hasValueETH)&&(typeof cachedFetchedAsOfToken!=='number'||typeof cachedFetchedAsOfETH!=='number')){return true;// else, if there are values, check if they's stale\n}else if(hasValueToken&&hasValueETH){var blocksElapsedSinceLastCheckToken=blockNumber-fetchedAsOfToken;var blocksElapsedSinceLastCheckETH=blockNumber-fetchedAsOfETH;var stale=fetchedAsOfToken!==fetchedAsOfETH||blocksElapsedSinceLastCheckToken>=EXCHANGES_BLOCK_TIMEOUT||blocksElapsedSinceLastCheckETH>=EXCHANGES_BLOCK_TIMEOUT;return stale;}else{return false;}}).map(/*#__PURE__*/function(){var _ref6=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(_ref5){var _fetchedAsOfCache$cur19,_fetchedAsOfCache$cur20,_fetchedAsOfCache$cur21,_objectSpread21;var exchangeAddress,tokenAddress;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:exchangeAddress=_ref5.exchangeAddress,tokenAddress=_ref5.tokenAddress;fetchedAsOfCache.current=_objectSpread(_objectSpread({},fetchedAsOfCache.current),{},_defineProperty({},chainId,_objectSpread(_objectSpread({},(_fetchedAsOfCache$cur19=fetchedAsOfCache.current)===null||_fetchedAsOfCache$cur19===void 0?void 0:_fetchedAsOfCache$cur19[chainId]),{},_defineProperty({},exchangeAddress,_objectSpread(_objectSpread({},(_fetchedAsOfCache$cur20=fetchedAsOfCache.current)===null||_fetchedAsOfCache$cur20===void 0?void 0:(_fetchedAsOfCache$cur21=_fetchedAsOfCache$cur20[chainId])===null||_fetchedAsOfCache$cur21===void 0?void 0:_fetchedAsOfCache$cur21[exchangeAddress]),{},(_objectSpread21={},_defineProperty(_objectSpread21,tokenAddress,blockNumber),_defineProperty(_objectSpread21,\"ETH\",blockNumber),_objectSpread21))))));return _context2.abrupt(\"return\",Promise.all([fetchBalance(exchangeAddress,tokenAddress),fetchBalance(exchangeAddress,'ETH')]).then(function(_ref7){var _ref8=_slicedToArray(_ref7,2),valueToken=_ref8[0],valueETH=_ref8[1];return{exchangeAddress:exchangeAddress,tokenAddress:tokenAddress,valueToken:valueToken,valueETH:valueETH};}));case 3:case\"end\":return _context2.stop();}}},_callee2);}));return function(_x2){return _ref6.apply(this,arguments);};}())).then(function(results){batchUpdateExchanges(chainId,results.flatMap(function(result){return[result.exchangeAddress,result.exchangeAddress];}),results.flatMap(function(result){return[result.tokenAddress,'ETH'];}),results.flatMap(function(result){return[result.valueToken,result.valueETH];}),blockNumber);});}},[chainId,account,blockNumber,allExchanges,fetchBalance,batchUpdateExchanges]);return null;}export function useAllBalances(){var _useWeb3React2=useWeb3React(),chainId=_useWeb3React2.chainId;var _useBalancesContext3=useBalancesContext(),_useBalancesContext4=_slicedToArray(_useBalancesContext3,1),state=_useBalancesContext4[0];return useMemo(function(){var _state$chainId;return typeof chainId==='number'?(_state$chainId=state===null||state===void 0?void 0:state[chainId])!==null&&_state$chainId!==void 0?_state$chainId:{}:{};},[chainId,state]);}export function useAddressBalance(address,tokenAddress){var _state$chainId2,_state$chainId2$addre,_state$chainId2$addre2;var _useWeb3React3=useWeb3React(),chainId=_useWeb3React3.chainId;var _useBalancesContext5=useBalancesContext(),_useBalancesContext6=_slicedToArray(_useBalancesContext5,2),state=_useBalancesContext6[0],_useBalancesContext6$=_useBalancesContext6[1],startListening=_useBalancesContext6$.startListening,stopListening=_useBalancesContext6$.stopListening;useEffect(function(){if(typeof chainId==='number'&&isAddress(address)&&isAddress(tokenAddress)){startListening(chainId,address,tokenAddress);return function(){stopListening(chainId,address,tokenAddress);};}},[chainId,address,tokenAddress,startListening,stopListening]);var value=typeof chainId==='number'?state===null||state===void 0?void 0:(_state$chainId2=state[chainId])===null||_state$chainId2===void 0?void 0:(_state$chainId2$addre=_state$chainId2[address])===null||_state$chainId2$addre===void 0?void 0:(_state$chainId2$addre2=_state$chainId2$addre[tokenAddress])===null||_state$chainId2$addre2===void 0?void 0:_state$chainId2$addre2.value:undefined;return useMemo(function(){return typeof value==='string'?ethers.utils.bigNumberify(value):value;},[value]);}export function useExchangeReserves(tokenAddress){var _useTokenDetails=useTokenDetails(tokenAddress),exchangeAddress=_useTokenDetails.exchangeAddress;var reserveETH=useAddressBalance(exchangeAddress,'ETH');var reserveToken=useAddressBalance(exchangeAddress,tokenAddress);return{reserveETH:reserveETH,reserveToken:reserveToken};}var buildReserveObject=function buildReserveObject(chainId,tokenAddress,ethReserveAmount,tokenReserveAmount,decimals){return{token:{chainId:chainId,address:tokenAddress,decimals:decimals},ethReserve:{token:{chainId:chainId,decimals:18},amount:ethReserveAmount},tokenReserve:{token:{chainId:chainId,address:tokenAddress,decimals:decimals},amount:tokenReserveAmount}};};var daiTokenAddress='0x6B175474E89094C44Da98b954EedeAC495271d0F';var daiExchangeAddress='0x2a1530C4C41db0B0b2bB646CB5Eb1A67b7158667';var usdcTokenAddress='0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48';var usdcExchangeAddress='0x97deC872013f6B5fB443861090ad931542878126';var tusdTokenAddress='0x0000000000085d4780B73119b644AE5ecd22b376';var tusdExchangeAddress='0x5048b9d01097498Fd72F3F14bC9Bc74A5aAc8fA7';export function useETHPriceInUSD(){var _useWeb3React4=useWeb3React(),chainId=_useWeb3React4.chainId;var daiReserveETH=useAddressBalance(daiExchangeAddress,'ETH');var daiReserveToken=useAddressBalance(daiExchangeAddress,daiTokenAddress);var usdcReserveETH=useAddressBalance(usdcExchangeAddress,'ETH');var usdcReserveToken=useAddressBalance(usdcExchangeAddress,usdcTokenAddress);var tusdReserveETH=useAddressBalance(tusdExchangeAddress,'ETH');var tusdReserveToken=useAddressBalance(tusdExchangeAddress,tusdTokenAddress);var _useState=useState(),_useState2=_slicedToArray(_useState,2),price=_useState2[0],setPrice=_useState2[1];useEffect(function(){if(chainId&&daiReserveETH&&daiReserveToken&&usdcReserveETH&&usdcReserveToken&&tusdReserveETH&&tusdReserveToken){var daiReservesObject=buildReserveObject(chainId,daiTokenAddress,new BigNumber(daiReserveETH.toString()),new BigNumber(daiReserveToken.toString()),18);var tusdReservesObject=buildReserveObject(chainId,tusdTokenAddress,new BigNumber(tusdReserveETH.toString()),new BigNumber(tusdReserveToken.toString()),18);var usdcReservesObject=buildReserveObject(chainId,usdcTokenAddress,new BigNumber(usdcReserveETH.toString()),new BigNumber(usdcReserveToken.toString()),6);var stablecoinReserves=[daiReservesObject,usdcReservesObject,tusdReservesObject];try{setPrice(getUSDPrice(stablecoinReserves));}catch(_unused2){setPrice(null);}}},[daiReserveETH,daiReserveToken,usdcReserveETH,usdcReserveToken,tusdReserveETH,tusdReserveToken,chainId]);return price;}","map":{"version":3,"sources":["/Users/kerp/Documents/GitHub/landing-page/src/contexts/Balances.tsx"],"names":["React","createContext","useContext","useReducer","useState","useRef","useMemo","useCallback","useEffect","BigNumber","ethers","useWeb3React","useDebounce","getEtherBalance","getTokenBalance","isAddress","useBlockNumber","useTokenDetails","useAllTokenDetails","getUSDPrice","LOCAL_STORAGE_KEY","SHORT_BLOCK_TIMEOUT","LONG_BLOCK_TIMEOUT","EXCHANGES_BLOCK_TIMEOUT","initialize","JSON","parse","window","localStorage","getItem","Action","reducer","state","type","payload","START_LISTENING","chainId","address","tokenAddress","uninitialized","listenerCount","STOP_LISTENING","UPDATE","value","blockNumber","BATCH_UPDATE_ACCOUNT","tokenAddresses","values","reduce","accumulator","i","BATCH_UPDATE_EXCHANGES","exchangeAddresses","exchangeAddress","Error","BalancesContext","useBalancesContext","Provider","children","undefined","dispatch","startListening","stopListening","update","batchUpdateAccount","batchUpdateExchanges","Updater","account","library","debouncedState","setItem","stringify","fetchedAsOfCache","fetchBalance","then","toString","catch","active","cachedFetchedAsOf","current","fetchedAsOf","Object","keys","stateRef","allTokenDetails","allTokens","Promise","all","filter","hasValue","blocksElapsedSinceLastCheck","stale","map","results","result","allExchanges","hasValueToken","hasValueETH","cachedFetchedAsOfToken","cachedFetchedAsOfETH","fetchedAsOfToken","fetchedAsOfETH","blocksElapsedSinceLastCheckToken","blocksElapsedSinceLastCheckETH","valueToken","valueETH","flatMap","useAllBalances","useAddressBalance","utils","bigNumberify","useExchangeReserves","reserveETH","reserveToken","buildReserveObject","ethReserveAmount","tokenReserveAmount","decimals","token","ethReserve","amount","tokenReserve","daiTokenAddress","daiExchangeAddress","usdcTokenAddress","usdcExchangeAddress","tusdTokenAddress","tusdExchangeAddress","useETHPriceInUSD","daiReserveETH","daiReserveToken","usdcReserveETH","usdcReserveToken","tusdReserveETH","tusdReserveToken","price","setPrice","daiReservesObject","tusdReservesObject","usdcReservesObject","stablecoinReserves"],"mappings":"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","sourcesContent":["import React, {\n  createContext,\n  useContext,\n  useReducer,\n  useState,\n  useRef,\n  useMemo,\n  useCallback,\n  useEffect,\n  ReactNode\n} from 'react'\nimport { BigNumber } from '@uniswap/sdk'\nimport { ethers } from 'ethers'\n\nimport { useWeb3React, useDebounce } from '../hooks'\nimport { getEtherBalance, getTokenBalance, isAddress } from '../utils'\nimport { useBlockNumber } from './Application'\nimport { useTokenDetails, useAllTokenDetails } from './Tokens'\nimport { getUSDPrice } from '../utils/price'\n\nconst LOCAL_STORAGE_KEY = 'BALANCES'\nconst SHORT_BLOCK_TIMEOUT = (60 * 2) / 15 // in seconds, represented as a block number delta\nconst LONG_BLOCK_TIMEOUT = (60 * 15) / 15 // in seconds, represented as a block number delta\n\nconst EXCHANGES_BLOCK_TIMEOUT = (60 * 5) / 15 // in seconds, represented as a block number delta\n\ninterface BalancesState {\n  [chainId: number]: {\n    [address: string]: {\n      [tokenAddress: string]: {\n        value?: string | null\n        blockNumber?: number\n        listenerCount: number\n      }\n    }\n  }\n}\n\nfunction initialize(): BalancesState {\n  try {\n    return JSON.parse(window.localStorage.getItem(LOCAL_STORAGE_KEY) as string)\n  } catch {\n    return {}\n  }\n}\n\nenum Action {\n  START_LISTENING,\n  STOP_LISTENING,\n  UPDATE,\n  BATCH_UPDATE_ACCOUNT,\n  BATCH_UPDATE_EXCHANGES\n}\n\nfunction reducer(state: BalancesState, { type, payload }: { type: Action; payload: any }) {\n  switch (type) {\n    case Action.START_LISTENING: {\n      const { chainId, address, tokenAddress } = payload\n      const uninitialized = !!!state?.[chainId]?.[address]?.[tokenAddress]\n      return {\n        ...state,\n        [chainId]: {\n          ...state?.[chainId],\n          [address]: {\n            ...state?.[chainId]?.[address],\n            [tokenAddress]: uninitialized\n              ? {\n                  listenerCount: 1\n                }\n              : {\n                  ...state[chainId][address][tokenAddress],\n                  listenerCount: state[chainId][address][tokenAddress].listenerCount + 1\n                }\n          }\n        }\n      }\n    }\n    case Action.STOP_LISTENING: {\n      const { chainId, address, tokenAddress } = payload\n      return {\n        ...state,\n        [chainId]: {\n          ...state?.[chainId],\n          [address]: {\n            ...state?.[chainId]?.[address],\n            [tokenAddress]: {\n              ...state?.[chainId]?.[address]?.[tokenAddress],\n              listenerCount: state[chainId][address][tokenAddress].listenerCount - 1\n            }\n          }\n        }\n      }\n    }\n    case Action.UPDATE: {\n      const { chainId, address, tokenAddress, value, blockNumber } = payload\n      return {\n        ...state,\n        [chainId]: {\n          ...state?.[chainId],\n          [address]: {\n            ...state?.[chainId]?.[address],\n            [tokenAddress]: {\n              ...state?.[chainId]?.[address]?.[tokenAddress],\n              value,\n              blockNumber\n            }\n          }\n        }\n      }\n    }\n    case Action.BATCH_UPDATE_ACCOUNT: {\n      const { chainId, address, tokenAddresses, values, blockNumber } = payload\n      return {\n        ...state,\n        [chainId]: {\n          ...state?.[chainId],\n          [address]: {\n            ...state?.[chainId]?.[address],\n            ...tokenAddresses.reduce((accumulator: any, tokenAddress: string, i: number) => {\n              const value = values[i]\n              accumulator[tokenAddress] = {\n                ...state?.[chainId]?.[address]?.[tokenAddress],\n                value,\n                blockNumber\n              }\n              return accumulator\n            }, {})\n          }\n        }\n      }\n    }\n    case Action.BATCH_UPDATE_EXCHANGES: {\n      const { chainId, exchangeAddresses, tokenAddresses, values, blockNumber } = payload\n\n      return {\n        ...state,\n        [chainId]: {\n          ...state?.[chainId],\n          ...exchangeAddresses.reduce((accumulator: any, exchangeAddress: string, i: number) => {\n            const tokenAddress = tokenAddresses[i]\n            const value = values[i]\n            accumulator[exchangeAddress] = {\n              ...state?.[chainId]?.[exchangeAddress],\n              ...accumulator?.[exchangeAddress],\n              [tokenAddress]: {\n                ...state?.[chainId]?.[exchangeAddress]?.[tokenAddress],\n                value,\n                blockNumber\n              }\n            }\n            return accumulator\n          }, {})\n        }\n      }\n    }\n    default: {\n      throw Error(`Unexpected action type in BalancesContext reducer: '${type}'.`)\n    }\n  }\n}\n\nconst BalancesContext = createContext<[BalancesState, { [k: string]: (...args: any) => void }]>([{}, {}])\n\nfunction useBalancesContext() {\n  return useContext(BalancesContext)\n}\n\nexport default function Provider({ children }: { children: ReactNode }) {\n  const [state, dispatch] = useReducer(reducer, undefined, initialize)\n\n  const startListening = useCallback((chainId, address, tokenAddress) => {\n    dispatch({ type: Action.START_LISTENING, payload: { chainId, address, tokenAddress } })\n  }, [])\n\n  const stopListening = useCallback((chainId, address, tokenAddress) => {\n    dispatch({ type: Action.STOP_LISTENING, payload: { chainId, address, tokenAddress } })\n  }, [])\n\n  const update = useCallback((chainId, address, tokenAddress, value, blockNumber) => {\n    dispatch({ type: Action.UPDATE, payload: { chainId, address, tokenAddress, value, blockNumber } })\n  }, [])\n\n  const batchUpdateAccount = useCallback((chainId, address, tokenAddresses, values, blockNumber) => {\n    dispatch({ type: Action.BATCH_UPDATE_ACCOUNT, payload: { chainId, address, tokenAddresses, values, blockNumber } })\n  }, [])\n\n  const batchUpdateExchanges = useCallback((chainId, exchangeAddresses, tokenAddresses, values, blockNumber) => {\n    dispatch({\n      type: Action.BATCH_UPDATE_EXCHANGES,\n      payload: { chainId, exchangeAddresses, tokenAddresses, values, blockNumber }\n    })\n  }, [])\n\n  return (\n    <BalancesContext.Provider\n      value={useMemo(\n        () => [state, { startListening, stopListening, update, batchUpdateAccount, batchUpdateExchanges }],\n        [state, startListening, stopListening, update, batchUpdateAccount, batchUpdateExchanges]\n      )}\n    >\n      {children}\n    </BalancesContext.Provider>\n  )\n}\n\nexport function Updater() {\n  const { chainId, account, library } = useWeb3React()\n  const blockNumber = useBlockNumber()\n  const [state, { update, batchUpdateAccount, batchUpdateExchanges }] = useBalancesContext()\n\n  // debounce state a little bit to prevent useEffect craziness\n  const debouncedState = useDebounce(state, 1000)\n  // cache this debounced state in localstorage\n  useEffect(() => {\n    window.localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(debouncedState))\n  }, [debouncedState])\n\n  // (slightly janky) balances-wide cache to prevent double/triple/etc. fetching\n  const fetchedAsOfCache = useRef<{\n    [chainId: number]: {\n      [address: string]: {\n        [tokenAddress: string]: number\n      }\n    }\n  }>({})\n\n  // generic balances fetcher abstracting away difference between fetching ETH + token balances\n  const fetchBalance = useCallback(\n    (address: string, tokenAddress: string) =>\n      (tokenAddress === 'ETH' ? getEtherBalance(address, library) : getTokenBalance(tokenAddress, address, library))\n        .then(value => {\n          return value.toString()\n        })\n        .catch(() => {\n          return null\n        }),\n    [library]\n  )\n\n  // ensure that all balances with >=1 listeners are updated every block\n  useEffect(() => {\n    if (typeof chainId === 'number' && typeof blockNumber === 'number') {\n      for (const address of Object.keys(debouncedState?.[chainId] ?? {})) {\n        for (const tokenAddress of Object.keys(debouncedState?.[chainId][address])) {\n          const active = debouncedState[chainId][address][tokenAddress].listenerCount > 0\n          if (active) {\n            const cachedFetchedAsOf = fetchedAsOfCache.current?.[chainId]?.[address]?.[tokenAddress]\n            const fetchedAsOf = debouncedState[chainId][address][tokenAddress]?.blockNumber ?? cachedFetchedAsOf\n            if (fetchedAsOf !== blockNumber) {\n              // fetch the balance...\n              fetchBalance(address, tokenAddress).then(value => {\n                update(chainId, address, tokenAddress, value, blockNumber)\n              })\n              // ...and cache the fetch\n              fetchedAsOfCache.current = {\n                ...fetchedAsOfCache.current,\n                [chainId]: {\n                  ...fetchedAsOfCache.current?.[chainId],\n                  [address]: {\n                    ...fetchedAsOfCache.current?.[chainId]?.[address],\n                    [tokenAddress]: blockNumber\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }, [chainId, blockNumber, debouncedState, fetchBalance, update])\n\n  // get a state ref for batch updates\n  const stateRef = useRef(state)\n  useEffect(() => {\n    stateRef.current = state\n  }, [state])\n  const allTokenDetails = useAllTokenDetails()\n\n  // ensure that we have the user balances for all tokens\n  const allTokens = useMemo(() => Object.keys(allTokenDetails), [allTokenDetails])\n  useEffect(() => {\n    if (typeof chainId === 'number' && typeof account === 'string' && typeof blockNumber === 'number') {\n      Promise.all(\n        allTokens\n          .filter(tokenAddress => {\n            const hasValue = !!stateRef.current?.[chainId]?.[account]?.[tokenAddress]?.value\n            const cachedFetchedAsOf = fetchedAsOfCache.current?.[chainId]?.[account]?.[tokenAddress]\n            const fetchedAsOf = stateRef.current?.[chainId]?.[account]?.[tokenAddress]?.blockNumber ?? cachedFetchedAsOf\n\n            // if there's no value, and it's not being fetched, we need to fetch!\n            if (!hasValue && typeof cachedFetchedAsOf !== 'number') {\n              return true\n              // else, if there's a value, check if it's stale\n            } else if (hasValue) {\n              const blocksElapsedSinceLastCheck = blockNumber - fetchedAsOf\n              const stale =\n                blocksElapsedSinceLastCheck >=\n                (stateRef.current[chainId][account][tokenAddress].value === '0'\n                  ? LONG_BLOCK_TIMEOUT\n                  : SHORT_BLOCK_TIMEOUT)\n              return stale\n            } else {\n              return false\n            }\n          })\n          .map(async tokenAddress => {\n            fetchedAsOfCache.current = {\n              ...fetchedAsOfCache.current,\n              [chainId]: {\n                ...fetchedAsOfCache.current?.[chainId],\n                [account]: {\n                  ...fetchedAsOfCache.current?.[chainId]?.[account],\n                  [tokenAddress]: blockNumber\n                }\n              }\n            }\n            return fetchBalance(account, tokenAddress).then(value => ({ tokenAddress, value }))\n          })\n      ).then(results => {\n        batchUpdateAccount(\n          chainId,\n          account,\n          results.map(result => result.tokenAddress),\n          results.map(result => result.value),\n          blockNumber\n        )\n      })\n    }\n  }, [chainId, account, blockNumber, allTokens, fetchBalance, batchUpdateAccount])\n\n  // ensure that we have the eth and token balances for all exchanges\n  const allExchanges = useMemo(\n    () =>\n      Object.keys(allTokenDetails)\n        .filter(tokenAddress => tokenAddress !== 'ETH')\n        .map(tokenAddress => ({\n          tokenAddress,\n          exchangeAddress: allTokenDetails[tokenAddress].exchangeAddress\n        })),\n    [allTokenDetails]\n  )\n  useEffect(() => {\n    if (typeof chainId === 'number' && typeof blockNumber === 'number') {\n      Promise.all(\n        allExchanges\n          .filter(({ exchangeAddress, tokenAddress }) => {\n            const hasValueToken = !!stateRef.current?.[chainId]?.[exchangeAddress]?.[tokenAddress]?.value\n            const hasValueETH = !!stateRef.current?.[chainId]?.[exchangeAddress]?.['ETH']?.value\n\n            const cachedFetchedAsOfToken = fetchedAsOfCache.current?.[chainId]?.[exchangeAddress]?.[tokenAddress]\n            const cachedFetchedAsOfETH = fetchedAsOfCache.current?.[chainId]?.[exchangeAddress]?.['ETH']\n\n            const fetchedAsOfToken =\n              stateRef.current?.[chainId]?.[exchangeAddress]?.[tokenAddress]?.blockNumber ?? cachedFetchedAsOfToken\n            const fetchedAsOfETH =\n              stateRef.current?.[chainId]?.[exchangeAddress]?.['ETH']?.blockNumber ?? cachedFetchedAsOfETH\n\n            // if there's no values, and they're not being fetched, we need to fetch!\n            if (\n              (!hasValueToken || !hasValueETH) &&\n              (typeof cachedFetchedAsOfToken !== 'number' || typeof cachedFetchedAsOfETH !== 'number')\n            ) {\n              return true\n              // else, if there are values, check if they's stale\n            } else if (hasValueToken && hasValueETH) {\n              const blocksElapsedSinceLastCheckToken = blockNumber - fetchedAsOfToken\n              const blocksElapsedSinceLastCheckETH = blockNumber - fetchedAsOfETH\n\n              const stale =\n                fetchedAsOfToken !== fetchedAsOfETH ||\n                blocksElapsedSinceLastCheckToken >= EXCHANGES_BLOCK_TIMEOUT ||\n                blocksElapsedSinceLastCheckETH >= EXCHANGES_BLOCK_TIMEOUT\n              return stale\n            } else {\n              return false\n            }\n          })\n          .map(async ({ exchangeAddress, tokenAddress }) => {\n            fetchedAsOfCache.current = {\n              ...fetchedAsOfCache.current,\n              [chainId]: {\n                ...fetchedAsOfCache.current?.[chainId],\n                [exchangeAddress]: {\n                  ...fetchedAsOfCache.current?.[chainId]?.[exchangeAddress],\n                  [tokenAddress]: blockNumber,\n                  ETH: blockNumber\n                }\n              }\n            }\n            return Promise.all([\n              fetchBalance(exchangeAddress, tokenAddress),\n              fetchBalance(exchangeAddress, 'ETH')\n            ]).then(([valueToken, valueETH]) => ({ exchangeAddress, tokenAddress, valueToken, valueETH }))\n          })\n      ).then(results => {\n        batchUpdateExchanges(\n          chainId,\n          results.flatMap(result => [result.exchangeAddress, result.exchangeAddress]),\n          results.flatMap(result => [result.tokenAddress, 'ETH']),\n          results.flatMap(result => [result.valueToken, result.valueETH]),\n          blockNumber\n        )\n      })\n    }\n  }, [chainId, account, blockNumber, allExchanges, fetchBalance, batchUpdateExchanges])\n\n  return null\n}\n\nexport function useAllBalances() {\n  const { chainId } = useWeb3React()\n  const [state] = useBalancesContext()\n  return useMemo(() => (typeof chainId === 'number' ? state?.[chainId] ?? {} : {}), [chainId, state])\n}\n\nexport function useAddressBalance(address: string, tokenAddress: string): ethers.utils.BigNumber | undefined | null {\n  const { chainId } = useWeb3React()\n  const [state, { startListening, stopListening }] = useBalancesContext()\n\n  useEffect(() => {\n    if (typeof chainId === 'number' && isAddress(address) && isAddress(tokenAddress)) {\n      startListening(chainId, address, tokenAddress)\n      return () => {\n        stopListening(chainId, address, tokenAddress)\n      }\n    }\n  }, [chainId, address, tokenAddress, startListening, stopListening])\n\n  const value = typeof chainId === 'number' ? state?.[chainId]?.[address]?.[tokenAddress]?.value : undefined\n\n  return useMemo(() => (typeof value === 'string' ? ethers.utils.bigNumberify(value) : value), [value])\n}\n\nexport function useExchangeReserves(tokenAddress: string) {\n  const { exchangeAddress } = useTokenDetails(tokenAddress)\n\n  const reserveETH = useAddressBalance(exchangeAddress, 'ETH')\n  const reserveToken = useAddressBalance(exchangeAddress, tokenAddress)\n\n  return { reserveETH, reserveToken }\n}\n\nconst buildReserveObject = (\n  chainId: number,\n  tokenAddress: string,\n  ethReserveAmount: any,\n  tokenReserveAmount: any,\n  decimals: number\n) => ({\n  token: {\n    chainId,\n    address: tokenAddress,\n    decimals\n  },\n  ethReserve: {\n    token: {\n      chainId,\n      decimals: 18\n    },\n    amount: ethReserveAmount\n  },\n  tokenReserve: {\n    token: {\n      chainId,\n      address: tokenAddress,\n      decimals\n    },\n    amount: tokenReserveAmount\n  }\n})\nconst daiTokenAddress = '0x6B175474E89094C44Da98b954EedeAC495271d0F'\nconst daiExchangeAddress = '0x2a1530C4C41db0B0b2bB646CB5Eb1A67b7158667'\nconst usdcTokenAddress = '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48'\nconst usdcExchangeAddress = '0x97deC872013f6B5fB443861090ad931542878126'\nconst tusdTokenAddress = '0x0000000000085d4780B73119b644AE5ecd22b376'\nconst tusdExchangeAddress = '0x5048b9d01097498Fd72F3F14bC9Bc74A5aAc8fA7'\nexport function useETHPriceInUSD() {\n  const { chainId } = useWeb3React()\n\n  let daiReserveETH = useAddressBalance(daiExchangeAddress, 'ETH')\n  let daiReserveToken = useAddressBalance(daiExchangeAddress, daiTokenAddress)\n  let usdcReserveETH = useAddressBalance(usdcExchangeAddress, 'ETH')\n  let usdcReserveToken = useAddressBalance(usdcExchangeAddress, usdcTokenAddress)\n  let tusdReserveETH = useAddressBalance(tusdExchangeAddress, 'ETH')\n  let tusdReserveToken = useAddressBalance(tusdExchangeAddress, tusdTokenAddress)\n\n  const [price, setPrice] = useState<undefined | null>()\n  useEffect(() => {\n    if (\n      chainId &&\n      daiReserveETH &&\n      daiReserveToken &&\n      usdcReserveETH &&\n      usdcReserveToken &&\n      tusdReserveETH &&\n      tusdReserveToken\n    ) {\n      const daiReservesObject = buildReserveObject(\n        chainId,\n        daiTokenAddress,\n        new BigNumber(daiReserveETH.toString()),\n        new BigNumber(daiReserveToken.toString()),\n        18\n      )\n      const tusdReservesObject = buildReserveObject(\n        chainId,\n        tusdTokenAddress,\n        new BigNumber(tusdReserveETH.toString()),\n        new BigNumber(tusdReserveToken.toString()),\n        18\n      )\n      const usdcReservesObject = buildReserveObject(\n        chainId,\n        usdcTokenAddress,\n        new BigNumber(usdcReserveETH.toString()),\n        new BigNumber(usdcReserveToken.toString()),\n        6\n      )\n\n      const stablecoinReserves = [daiReservesObject, usdcReservesObject, tusdReservesObject]\n\n      try {\n        setPrice(getUSDPrice(stablecoinReserves))\n      } catch {\n        setPrice(null)\n      }\n    }\n  }, [daiReserveETH, daiReserveToken, usdcReserveETH, usdcReserveToken, tusdReserveETH, tusdReserveToken, chainId])\n\n  return price\n}\n"]},"metadata":{},"sourceType":"module"}