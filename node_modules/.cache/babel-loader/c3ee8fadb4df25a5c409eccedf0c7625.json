{"ast":null,"code":"var _jsxFileName = \"/Users/kerp/Documents/GitHub/landing-page/src/components/WalletModal/Option.js\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport { Link } from '../../theme';\nconst InfoCard = styled.button`\n  background-color: ${({\n  theme,\n  active\n}) => active ? theme.activeGray : theme.backgroundColor};\n  padding: 1rem;\n  outline: none;\n  border: 1px solid;\n  border-radius: 12px;\n  width: 100% !important;\n  &:focus {\n    box-shadow: 0 0 0 1px ${({\n  theme\n}) => theme.royalBlue};\n  }\n  border-color: ${({\n  theme,\n  active\n}) => active ? 'transparent' : theme.placeholderGray};\n`;\nconst OptionCard = styled(InfoCard)`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n  margin-top: 2rem;\n  padding: 1rem;\n`;\nconst OptionCardLeft = styled.div`\n  ${({\n  theme\n}) => theme.flexColumnNoWrap};\n  justify-content: center;\n  height: 100%;\n`;\nconst OptionCardClickable = styled(OptionCard)`\n  margin-top: 0;\n  &:hover {\n    cursor: ${({\n  clickable\n}) => clickable ? 'pointer' : ''};\n    border: ${({\n  clickable,\n  theme\n}) => clickable ? `1px solid ${theme.malibuBlue}` : ``};\n  }\n  opacity: ${({\n  disabled\n}) => disabled ? '0.5' : '1'};\n`;\nconst GreenCircle = styled.div`\n  ${({\n  theme\n}) => theme.flexRowNoWrap}\n  justify-content: center;\n  align-items: center;\n\n  &:first-child {\n    height: 8px;\n    width: 8px;\n    margin-right: 8px;\n    background-color: ${({\n  theme\n}) => theme.connectedGreen};\n    border-radius: 50%;\n  }\n`;\nconst CircleWrapper = styled.div`\n  color: ${({\n  theme\n}) => theme.connectedGreen};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\nconst HeaderText = styled.div`\n  ${({\n  theme\n}) => theme.flexRowNoWrap};\n  color: ${props => props.color === 'blue' ? ({\n  theme\n}) => theme.royalBlue : ({\n  theme\n}) => theme.textColor};\n  font-size: 1rem;\n  font-weight: 500;\n`;\nconst SubHeader = styled.div`\n  color: ${({\n  theme\n}) => theme.textColor};\n  margin-top: 10px;\n  font-size: 12px;\n`;\nconst IconWrapper = styled.div`\n  ${({\n  theme\n}) => theme.flexColumnNoWrap};\n  align-items: center;\n  justify-content: center;\n  & > img,\n  span {\n    height: ${({\n  size\n}) => size ? size + 'px' : '24px'};\n    width: ${({\n  size\n}) => size ? size + 'px' : '24px'};\n  }\n  ${({\n  theme\n}) => theme.mediaWidth.upToMedium`\n    align-items: flex-end;\n  `};\n`;\nexport default function Option({\n  link = null,\n  clickable = true,\n  size = null,\n  onClick = null,\n  color,\n  header,\n  subheader = null,\n  icon,\n  active = false\n}) {\n  const content = /*#__PURE__*/React.createElement(OptionCardClickable, {\n    onClick: onClick,\n    clickable: clickable && !active,\n    active: active,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(OptionCardLeft, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(HeaderText, {\n    color: color,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  }, ' ', active ? /*#__PURE__*/React.createElement(CircleWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(GreenCircle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 17\n    }\n  }))) : '', header), subheader && /*#__PURE__*/React.createElement(SubHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 23\n    }\n  }, subheader)), /*#__PURE__*/React.createElement(IconWrapper, {\n    size: size,\n    active: active,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: icon,\n    alt: 'Icon',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }\n  })));\n\n  if (link) {\n    return /*#__PURE__*/React.createElement(Link, {\n      href: link,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 12\n      }\n    }, content);\n  }\n\n  return content;\n}","map":{"version":3,"sources":["/Users/kerp/Documents/GitHub/landing-page/src/components/WalletModal/Option.js"],"names":["React","styled","Link","InfoCard","button","theme","active","activeGray","backgroundColor","royalBlue","placeholderGray","OptionCard","OptionCardLeft","div","flexColumnNoWrap","OptionCardClickable","clickable","malibuBlue","disabled","GreenCircle","flexRowNoWrap","connectedGreen","CircleWrapper","HeaderText","props","color","textColor","SubHeader","IconWrapper","size","mediaWidth","upToMedium","Option","link","onClick","header","subheader","icon","content"],"mappings":"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","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport { Link } from '../../theme'\n\nconst InfoCard = styled.button`\n  background-color: ${({ theme, active }) => (active ? theme.activeGray : theme.backgroundColor)};\n  padding: 1rem;\n  outline: none;\n  border: 1px solid;\n  border-radius: 12px;\n  width: 100% !important;\n  &:focus {\n    box-shadow: 0 0 0 1px ${({ theme }) => theme.royalBlue};\n  }\n  border-color: ${({ theme, active }) => (active ? 'transparent' : theme.placeholderGray)};\n`\n\nconst OptionCard = styled(InfoCard)`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n  margin-top: 2rem;\n  padding: 1rem;\n`\n\nconst OptionCardLeft = styled.div`\n  ${({ theme }) => theme.flexColumnNoWrap};\n  justify-content: center;\n  height: 100%;\n`\n\nconst OptionCardClickable = styled(OptionCard)`\n  margin-top: 0;\n  &:hover {\n    cursor: ${({ clickable }) => (clickable ? 'pointer' : '')};\n    border: ${({ clickable, theme }) => (clickable ? `1px solid ${theme.malibuBlue}` : ``)};\n  }\n  opacity: ${({ disabled }) => (disabled ? '0.5' : '1')};\n`\n\nconst GreenCircle = styled.div`\n  ${({ theme }) => theme.flexRowNoWrap}\n  justify-content: center;\n  align-items: center;\n\n  &:first-child {\n    height: 8px;\n    width: 8px;\n    margin-right: 8px;\n    background-color: ${({ theme }) => theme.connectedGreen};\n    border-radius: 50%;\n  }\n`\n\nconst CircleWrapper = styled.div`\n  color: ${({ theme }) => theme.connectedGreen};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\nconst HeaderText = styled.div`\n  ${({ theme }) => theme.flexRowNoWrap};\n  color: ${props => (props.color === 'blue' ? ({ theme }) => theme.royalBlue : ({ theme }) => theme.textColor)};\n  font-size: 1rem;\n  font-weight: 500;\n`\n\nconst SubHeader = styled.div`\n  color: ${({ theme }) => theme.textColor};\n  margin-top: 10px;\n  font-size: 12px;\n`\n\nconst IconWrapper = styled.div`\n  ${({ theme }) => theme.flexColumnNoWrap};\n  align-items: center;\n  justify-content: center;\n  & > img,\n  span {\n    height: ${({ size }) => (size ? size + 'px' : '24px')};\n    width: ${({ size }) => (size ? size + 'px' : '24px')};\n  }\n  ${({ theme }) => theme.mediaWidth.upToMedium`\n    align-items: flex-end;\n  `};\n`\n\nexport default function Option({\n  link = null,\n  clickable = true,\n  size = null,\n  onClick = null,\n  color,\n  header,\n  subheader = null,\n  icon,\n  active = false\n}) {\n  const content = (\n    <OptionCardClickable onClick={onClick} clickable={clickable && !active} active={active}>\n      <OptionCardLeft>\n        <HeaderText color={color}>\n          {' '}\n          {active ? (\n            <CircleWrapper>\n              <GreenCircle>\n                <div />\n              </GreenCircle>\n            </CircleWrapper>\n          ) : (\n            ''\n          )}\n          {header}\n        </HeaderText>\n        {subheader && <SubHeader>{subheader}</SubHeader>}\n      </OptionCardLeft>\n      <IconWrapper size={size} active={active}>\n        <img src={icon} alt={'Icon'} />\n      </IconWrapper>\n    </OptionCardClickable>\n  )\n  if (link) {\n    return <Link href={link}>{content}</Link>\n  }\n\n  return content\n}\n"]},"metadata":{},"sourceType":"module"}