{"ast":null,"code":"var _jsxFileName = \"/Users/kerp/Documents/GitHub/landing-page/src/components/AccountDetails/index.js\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport { useWeb3React } from '../../hooks';\nimport { isMobile } from 'react-device-detect';\nimport Copy from './Copy';\nimport Transaction from './Transaction';\nimport { SUPPORTED_WALLETS } from '../../constants';\nimport { ReactComponent as Close } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/images/x.svg\";\nimport { getEtherscanLink } from '../../utils';\nimport { injected, walletconnect, walletlink, fortmatic, portis, torus } from '../../connectors';\nimport CoinbaseWalletIcon from \"../../assets/images/coinbaseWalletIcon.svg\";\nimport WalletConnectIcon from \"../../assets/images/walletConnectIcon.svg\";\nimport FortmaticIcon from '../../assets/images/fortmaticIcon.png';\nimport PortisIcon from '../../assets/images/portisIcon.png';\nimport TorusIcon from '../../assets/images/torus.png';\nimport Identicon from '../Identicon';\nimport { Link } from '../../theme';\nconst OptionButton = styled.div`\n  ${({\n  theme\n}) => theme.flexColumnNoWrap}\n  justify-content: center;\n  align-items: center;\n  border-radius: 20px;\n  border: 1px solid ${({\n  theme\n}) => theme.royalBlue};\n  color: ${({\n  theme\n}) => theme.royalBlue};\n  padding: 8px 24px;\n\n  &:hover {\n    border: 1px solid ${({\n  theme\n}) => theme.malibuBlue};\n    cursor: pointer;\n  }\n\n  ${({\n  theme\n}) => theme.mediaWidth.upToMedium`\n    font-size: 12px;\n  `};\n`;\nconst HeaderRow = styled.div`\n  ${({\n  theme\n}) => theme.flexRowNoWrap};\n  padding: 1.5rem 1.5rem;\n  font-weight: 500;\n  color: ${props => props.color === 'blue' ? ({\n  theme\n}) => theme.royalBlue : 'inherit'};\n  ${({\n  theme\n}) => theme.mediaWidth.upToMedium`\n    padding: 1rem;\n  `};\n`;\nconst UpperSection = styled.div`\n  position: relative;\n  background-color: ${({\n  theme\n}) => theme.concreteGray};\n\n  h5 {\n    margin: 0;\n    margin-bottom: 0.5rem;\n    font-size: 1rem;\n    font-weight: 400;\n  }\n\n  h5:last-child {\n    margin-bottom: 0px;\n  }\n\n  h4 {\n    margin-top: 0;\n    font-weight: 500;\n  }\n`;\nconst InfoCard = styled.div`\n  padding: 1rem;\n  border: 1px solid ${({\n  theme\n}) => theme.placeholderGray};\n  border-radius: 20px;\n`;\nconst AccountGroupingRow = styled.div`\n  ${({\n  theme\n}) => theme.flexRowNoWrap};\n  justify-content: space-between;\n  align-items: center;\n  font-weight: 500;\n  color: ${({\n  theme\n}) => theme.textColor};\n\n  div {\n    ${({\n  theme\n}) => theme.flexRowNoWrap}\n    align-items: center;\n  }\n\n  &:first-of-type {\n    margin-bottom: 20px;\n  }\n`;\nconst AccountSection = styled.div`\n  background-color: ${({\n  theme\n}) => theme.concreteGray};\n  padding: 0rem 1.5rem;\n  ${({\n  theme\n}) => theme.mediaWidth.upToMedium`padding: 0rem 1rem 1rem 1rem;`};\n`;\nconst YourAccount = styled.div`\n  h5 {\n    margin: 0 0 1rem 0;\n    font-weight: 400;\n  }\n\n  h4 {\n    margin: 0;\n    font-weight: 500;\n  }\n`;\nconst GreenCircle = styled.div`\n  ${({\n  theme\n}) => theme.flexRowNoWrap}\n  justify-content: center;\n  align-items: center;\n\n  &:first-child {\n    height: 8px;\n    width: 8px;\n    margin-left: 12px;\n    margin-right: 2px;\n    background-color: ${({\n  theme\n}) => theme.connectedGreen};\n    border-radius: 50%;\n  }\n`;\nconst CircleWrapper = styled.div`\n  color: ${({\n  theme\n}) => theme.connectedGreen};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\nconst LowerSection = styled.div`\n  ${({\n  theme\n}) => theme.flexColumnNoWrap}\n  padding: 2rem;\n  flex-grow: 1;\n  overflow: auto;\n\n  h5 {\n    margin: 0;\n    font-weight: 400;\n    color: ${({\n  theme\n}) => theme.doveGray};\n  }\n`;\nconst AccountControl = styled.div`\n  ${({\n  theme\n}) => theme.flexRowNoWrap};\n  align-items: center;\n  min-width: 0;\n\n  font-weight: ${({\n  hasENS,\n  isENS\n}) => hasENS ? isENS ? 500 : 400 : 500};\n  font-size: ${({\n  hasENS,\n  isENS\n}) => hasENS ? isENS ? '1rem' : '0.8rem' : '1rem'};\n\n  a:hover {\n    text-decoration: underline;\n  }\n\n  a {\n    min-width: 0;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n  }\n`;\nconst ConnectButtonRow = styled.div`\n  ${({\n  theme\n}) => theme.flexRowNoWrap}\n  align-items: center;\n  justify-content: center;\n  margin: 30px;\n`;\nconst StyledLink = styled(Link)`\n  color: ${({\n  hasENS,\n  isENS,\n  theme\n}) => hasENS ? isENS ? theme.royalBlue : theme.doveGray : theme.royalBlue};\n`;\nconst CloseIcon = styled.div`\n  position: absolute;\n  right: 1rem;\n  top: 14px;\n  &:hover {\n    cursor: pointer;\n    opacity: 0.6;\n  }\n`;\nconst CloseColor = styled(Close)`\n  path {\n    stroke: ${({\n  theme\n}) => theme.chaliceGray};\n  }\n`;\nconst WalletName = styled.div`\n  padding-left: 0.5rem;\n  width: initial;\n`;\nconst IconWrapper = styled.div`\n  ${({\n  theme\n}) => theme.flexColumnNoWrap};\n  align-items: center;\n  justify-content: center;\n  & > img,\n  span {\n    height: ${({\n  size\n}) => size ? size + 'px' : '32px'};\n    width: ${({\n  size\n}) => size ? size + 'px' : '32px'};\n  }\n  ${({\n  theme\n}) => theme.mediaWidth.upToMedium`\n    align-items: flex-end;\n  `};\n`;\nconst TransactionListWrapper = styled.div`\n  ${({\n  theme\n}) => theme.flexColumnNoWrap};\n`;\nconst WalletAction = styled.div`\n  color: ${({\n  theme\n}) => theme.chaliceGray};\n  margin-left: 16px;\n  font-weight: 400;\n  :hover {\n    cursor: pointer;\n    text-decoration: underline;\n  }\n`;\nconst MainWalletAction = styled(WalletAction)`\n  color: ${({\n  theme\n}) => theme.royalBlue};\n`;\n\nfunction renderTransactions(transactions, pending) {\n  return /*#__PURE__*/React.createElement(TransactionListWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 5\n    }\n  }, transactions.map((hash, i) => {\n    return /*#__PURE__*/React.createElement(Transaction, {\n      key: i,\n      hash: hash,\n      pending: pending,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 16\n      }\n    });\n  }));\n}\n\nexport default function AccountDetails({\n  toggleWalletModal,\n  pendingTransactions,\n  confirmedTransactions,\n  ENSName,\n  openOptions\n}) {\n  const {\n    chainId,\n    account,\n    connector\n  } = useWeb3React();\n\n  function formatConnectorName() {\n    const isMetaMask = window.ethereum && window.ethereum.isMetaMask ? true : false;\n    const name = Object.keys(SUPPORTED_WALLETS).filter(k => SUPPORTED_WALLETS[k].connector === connector && (connector !== injected || isMetaMask === (k === 'METAMASK'))).map(k => SUPPORTED_WALLETS[k].name)[0];\n    return /*#__PURE__*/React.createElement(WalletName, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 12\n      }\n    }, name);\n  }\n\n  function getStatusIcon() {\n    if (connector === injected) {\n      return /*#__PURE__*/React.createElement(IconWrapper, {\n        size: 16,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Identicon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 11\n        }\n      }), \" \", formatConnectorName());\n    } else if (connector === walletconnect) {\n      return /*#__PURE__*/React.createElement(IconWrapper, {\n        size: 16,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: WalletConnectIcon,\n        alt: '',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 11\n        }\n      }), \" \", formatConnectorName());\n    } else if (connector === walletlink) {\n      return /*#__PURE__*/React.createElement(IconWrapper, {\n        size: 16,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: CoinbaseWalletIcon,\n        alt: '',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 11\n        }\n      }), \" \", formatConnectorName());\n    } else if (connector === fortmatic) {\n      return /*#__PURE__*/React.createElement(IconWrapper, {\n        size: 16,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: FortmaticIcon,\n        alt: '',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 11\n        }\n      }), \" \", formatConnectorName());\n    } else if (connector === portis) {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(IconWrapper, {\n        size: 16,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: PortisIcon,\n        alt: '',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 13\n        }\n      }), \" \", formatConnectorName(), /*#__PURE__*/React.createElement(MainWalletAction, {\n        onClick: () => {\n          portis.portis.showPortis();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 13\n        }\n      }, \"Show Portis\")));\n    } else if (connector === torus) {\n      return /*#__PURE__*/React.createElement(IconWrapper, {\n        size: 16,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: TorusIcon,\n        alt: '',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 11\n        }\n      }), \" \", formatConnectorName());\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(UpperSection, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CloseIcon, {\n    onClick: toggleWalletModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CloseColor, {\n    alt: 'close icon',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(HeaderRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 9\n    }\n  }, \"Account\"), /*#__PURE__*/React.createElement(AccountSection, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(YourAccount, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(InfoCard, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(AccountGroupingRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 15\n    }\n  }, getStatusIcon(), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 17\n    }\n  }, connector !== injected && connector !== walletlink && /*#__PURE__*/React.createElement(WalletAction, {\n    onClick: () => {\n      connector.close();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 21\n    }\n  }, \"Disconnect\"), /*#__PURE__*/React.createElement(CircleWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(GreenCircle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 23\n    }\n  }))))), /*#__PURE__*/React.createElement(AccountGroupingRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 15\n    }\n  }, ENSName ? /*#__PURE__*/React.createElement(AccountControl, {\n    hasENS: !!ENSName,\n    isENS: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(StyledLink, {\n    hasENS: !!ENSName,\n    isENS: true,\n    href: getEtherscanLink(chainId, ENSName, 'address'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 21\n    }\n  }, ENSName, \" \\u2197\", ' '), /*#__PURE__*/React.createElement(Copy, {\n    toCopy: ENSName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 21\n    }\n  })) : /*#__PURE__*/React.createElement(AccountControl, {\n    hasENS: !!ENSName,\n    isENS: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(StyledLink, {\n    hasENS: !!ENSName,\n    isENS: false,\n    href: getEtherscanLink(chainId, account, 'address'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 21\n    }\n  }, account, \" \\u2197\", ' '), /*#__PURE__*/React.createElement(Copy, {\n    toCopy: account,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 21\n    }\n  }))))), !(isMobile && (window.web3 || window.ethereum)) && /*#__PURE__*/React.createElement(ConnectButtonRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(OptionButton, {\n    onClick: () => {\n      openOptions();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 360,\n      columnNumber: 15\n    }\n  }, \"Connect to a different wallet\")))), !!pendingTransactions.length || !!confirmedTransactions.length ? /*#__PURE__*/React.createElement(LowerSection, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 372,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 373,\n      columnNumber: 11\n    }\n  }, \"Recent Transactions\"), renderTransactions(pendingTransactions, true), renderTransactions(confirmedTransactions, false)) : /*#__PURE__*/React.createElement(LowerSection, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 378,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 379,\n      columnNumber: 11\n    }\n  }, \"Your transactions will appear here...\")));\n}","map":{"version":3,"sources":["/Users/kerp/Documents/GitHub/landing-page/src/components/AccountDetails/index.js"],"names":["React","styled","useWeb3React","isMobile","Copy","Transaction","SUPPORTED_WALLETS","getEtherscanLink","injected","walletconnect","walletlink","fortmatic","portis","torus","FortmaticIcon","PortisIcon","TorusIcon","Identicon","Link","OptionButton","div","theme","flexColumnNoWrap","royalBlue","malibuBlue","mediaWidth","upToMedium","HeaderRow","flexRowNoWrap","props","color","UpperSection","concreteGray","InfoCard","placeholderGray","AccountGroupingRow","textColor","AccountSection","YourAccount","GreenCircle","connectedGreen","CircleWrapper","LowerSection","doveGray","AccountControl","hasENS","isENS","ConnectButtonRow","StyledLink","CloseIcon","CloseColor","Close","chaliceGray","WalletName","IconWrapper","size","TransactionListWrapper","WalletAction","MainWalletAction","renderTransactions","transactions","pending","map","hash","i","AccountDetails","toggleWalletModal","pendingTransactions","confirmedTransactions","ENSName","openOptions","chainId","account","connector","formatConnectorName","isMetaMask","window","ethereum","name","Object","keys","filter","k","getStatusIcon","WalletConnectIcon","CoinbaseWalletIcon","showPortis","close","web3","length"],"mappings":"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","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport { useWeb3React } from '../../hooks'\nimport { isMobile } from 'react-device-detect'\nimport Copy from './Copy'\nimport Transaction from './Transaction'\nimport { SUPPORTED_WALLETS } from '../../constants'\nimport { ReactComponent as Close } from '../../assets/images/x.svg'\nimport { getEtherscanLink } from '../../utils'\nimport { injected, walletconnect, walletlink, fortmatic, portis, torus } from '../../connectors'\nimport CoinbaseWalletIcon from '../../assets/images/coinbaseWalletIcon.svg'\nimport WalletConnectIcon from '../../assets/images/walletConnectIcon.svg'\nimport FortmaticIcon from '../../assets/images/fortmaticIcon.png'\nimport PortisIcon from '../../assets/images/portisIcon.png'\nimport TorusIcon from '../../assets/images/torus.png'\nimport Identicon from '../Identicon'\n\nimport { Link } from '../../theme'\n\nconst OptionButton = styled.div`\n  ${({ theme }) => theme.flexColumnNoWrap}\n  justify-content: center;\n  align-items: center;\n  border-radius: 20px;\n  border: 1px solid ${({ theme }) => theme.royalBlue};\n  color: ${({ theme }) => theme.royalBlue};\n  padding: 8px 24px;\n\n  &:hover {\n    border: 1px solid ${({ theme }) => theme.malibuBlue};\n    cursor: pointer;\n  }\n\n  ${({ theme }) => theme.mediaWidth.upToMedium`\n    font-size: 12px;\n  `};\n`\n\nconst HeaderRow = styled.div`\n  ${({ theme }) => theme.flexRowNoWrap};\n  padding: 1.5rem 1.5rem;\n  font-weight: 500;\n  color: ${props => (props.color === 'blue' ? ({ theme }) => theme.royalBlue : 'inherit')};\n  ${({ theme }) => theme.mediaWidth.upToMedium`\n    padding: 1rem;\n  `};\n`\n\nconst UpperSection = styled.div`\n  position: relative;\n  background-color: ${({ theme }) => theme.concreteGray};\n\n  h5 {\n    margin: 0;\n    margin-bottom: 0.5rem;\n    font-size: 1rem;\n    font-weight: 400;\n  }\n\n  h5:last-child {\n    margin-bottom: 0px;\n  }\n\n  h4 {\n    margin-top: 0;\n    font-weight: 500;\n  }\n`\n\nconst InfoCard = styled.div`\n  padding: 1rem;\n  border: 1px solid ${({ theme }) => theme.placeholderGray};\n  border-radius: 20px;\n`\n\nconst AccountGroupingRow = styled.div`\n  ${({ theme }) => theme.flexRowNoWrap};\n  justify-content: space-between;\n  align-items: center;\n  font-weight: 500;\n  color: ${({ theme }) => theme.textColor};\n\n  div {\n    ${({ theme }) => theme.flexRowNoWrap}\n    align-items: center;\n  }\n\n  &:first-of-type {\n    margin-bottom: 20px;\n  }\n`\n\nconst AccountSection = styled.div`\n  background-color: ${({ theme }) => theme.concreteGray};\n  padding: 0rem 1.5rem;\n  ${({ theme }) => theme.mediaWidth.upToMedium`padding: 0rem 1rem 1rem 1rem;`};\n`\n\nconst YourAccount = styled.div`\n  h5 {\n    margin: 0 0 1rem 0;\n    font-weight: 400;\n  }\n\n  h4 {\n    margin: 0;\n    font-weight: 500;\n  }\n`\n\nconst GreenCircle = styled.div`\n  ${({ theme }) => theme.flexRowNoWrap}\n  justify-content: center;\n  align-items: center;\n\n  &:first-child {\n    height: 8px;\n    width: 8px;\n    margin-left: 12px;\n    margin-right: 2px;\n    background-color: ${({ theme }) => theme.connectedGreen};\n    border-radius: 50%;\n  }\n`\n\nconst CircleWrapper = styled.div`\n  color: ${({ theme }) => theme.connectedGreen};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\nconst LowerSection = styled.div`\n  ${({ theme }) => theme.flexColumnNoWrap}\n  padding: 2rem;\n  flex-grow: 1;\n  overflow: auto;\n\n  h5 {\n    margin: 0;\n    font-weight: 400;\n    color: ${({ theme }) => theme.doveGray};\n  }\n`\n\nconst AccountControl = styled.div`\n  ${({ theme }) => theme.flexRowNoWrap};\n  align-items: center;\n  min-width: 0;\n\n  font-weight: ${({ hasENS, isENS }) => (hasENS ? (isENS ? 500 : 400) : 500)};\n  font-size: ${({ hasENS, isENS }) => (hasENS ? (isENS ? '1rem' : '0.8rem') : '1rem')};\n\n  a:hover {\n    text-decoration: underline;\n  }\n\n  a {\n    min-width: 0;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n  }\n`\n\nconst ConnectButtonRow = styled.div`\n  ${({ theme }) => theme.flexRowNoWrap}\n  align-items: center;\n  justify-content: center;\n  margin: 30px;\n`\n\nconst StyledLink = styled(Link)`\n  color: ${({ hasENS, isENS, theme }) => (hasENS ? (isENS ? theme.royalBlue : theme.doveGray) : theme.royalBlue)};\n`\n\nconst CloseIcon = styled.div`\n  position: absolute;\n  right: 1rem;\n  top: 14px;\n  &:hover {\n    cursor: pointer;\n    opacity: 0.6;\n  }\n`\n\nconst CloseColor = styled(Close)`\n  path {\n    stroke: ${({ theme }) => theme.chaliceGray};\n  }\n`\n\nconst WalletName = styled.div`\n  padding-left: 0.5rem;\n  width: initial;\n`\n\nconst IconWrapper = styled.div`\n  ${({ theme }) => theme.flexColumnNoWrap};\n  align-items: center;\n  justify-content: center;\n  & > img,\n  span {\n    height: ${({ size }) => (size ? size + 'px' : '32px')};\n    width: ${({ size }) => (size ? size + 'px' : '32px')};\n  }\n  ${({ theme }) => theme.mediaWidth.upToMedium`\n    align-items: flex-end;\n  `};\n`\n\nconst TransactionListWrapper = styled.div`\n  ${({ theme }) => theme.flexColumnNoWrap};\n`\n\nconst WalletAction = styled.div`\n  color: ${({ theme }) => theme.chaliceGray};\n  margin-left: 16px;\n  font-weight: 400;\n  :hover {\n    cursor: pointer;\n    text-decoration: underline;\n  }\n`\n\nconst MainWalletAction = styled(WalletAction)`\n  color: ${({ theme }) => theme.royalBlue};\n`\n\nfunction renderTransactions(transactions, pending) {\n  return (\n    <TransactionListWrapper>\n      {transactions.map((hash, i) => {\n        return <Transaction key={i} hash={hash} pending={pending} />\n      })}\n    </TransactionListWrapper>\n  )\n}\n\nexport default function AccountDetails({\n  toggleWalletModal,\n  pendingTransactions,\n  confirmedTransactions,\n  ENSName,\n  openOptions\n}) {\n  const { chainId, account, connector } = useWeb3React()\n\n  function formatConnectorName() {\n    const isMetaMask = window.ethereum && window.ethereum.isMetaMask ? true : false\n    const name = Object.keys(SUPPORTED_WALLETS)\n      .filter(\n        k =>\n          SUPPORTED_WALLETS[k].connector === connector && (connector !== injected || isMetaMask === (k === 'METAMASK'))\n      )\n      .map(k => SUPPORTED_WALLETS[k].name)[0]\n    return <WalletName>{name}</WalletName>\n  }\n\n  function getStatusIcon() {\n    if (connector === injected) {\n      return (\n        <IconWrapper size={16}>\n          <Identicon /> {formatConnectorName()}\n        </IconWrapper>\n      )\n    } else if (connector === walletconnect) {\n      return (\n        <IconWrapper size={16}>\n          <img src={WalletConnectIcon} alt={''} /> {formatConnectorName()}\n        </IconWrapper>\n      )\n    } else if (connector === walletlink) {\n      return (\n        <IconWrapper size={16}>\n          <img src={CoinbaseWalletIcon} alt={''} /> {formatConnectorName()}\n        </IconWrapper>\n      )\n    } else if (connector === fortmatic) {\n      return (\n        <IconWrapper size={16}>\n          <img src={FortmaticIcon} alt={''} /> {formatConnectorName()}\n        </IconWrapper>\n      )\n    } else if (connector === portis) {\n      return (\n        <>\n          <IconWrapper size={16}>\n            <img src={PortisIcon} alt={''} /> {formatConnectorName()}\n            <MainWalletAction\n              onClick={() => {\n                portis.portis.showPortis()\n              }}\n            >\n              Show Portis\n            </MainWalletAction>\n          </IconWrapper>\n        </>\n      )\n    } else if (connector === torus) {\n      return (\n        <IconWrapper size={16}>\n          <img src={TorusIcon} alt={''} /> {formatConnectorName()}\n        </IconWrapper>\n      )\n    }\n  }\n\n  return (\n    <>\n      <UpperSection>\n        <CloseIcon onClick={toggleWalletModal}>\n          <CloseColor alt={'close icon'} />\n        </CloseIcon>\n        <HeaderRow>Account</HeaderRow>\n        <AccountSection>\n          <YourAccount>\n            <InfoCard>\n              <AccountGroupingRow>\n                {getStatusIcon()}\n                <div>\n                  {connector !== injected && connector !== walletlink && (\n                    <WalletAction\n                      onClick={() => {\n                        connector.close()\n                      }}\n                    >\n                      Disconnect\n                    </WalletAction>\n                  )}\n                  <CircleWrapper>\n                    <GreenCircle>\n                      <div />\n                    </GreenCircle>\n                  </CircleWrapper>\n                </div>\n              </AccountGroupingRow>\n              <AccountGroupingRow>\n                {ENSName ? (\n                  <AccountControl hasENS={!!ENSName} isENS={true}>\n                    <StyledLink hasENS={!!ENSName} isENS={true} href={getEtherscanLink(chainId, ENSName, 'address')}>\n                      {ENSName} ↗{' '}\n                    </StyledLink>\n                    <Copy toCopy={ENSName} />\n                  </AccountControl>\n                ) : (\n                  <AccountControl hasENS={!!ENSName} isENS={false}>\n                    <StyledLink hasENS={!!ENSName} isENS={false} href={getEtherscanLink(chainId, account, 'address')}>\n                      {account} ↗{' '}\n                    </StyledLink>\n                    <Copy toCopy={account} />\n                  </AccountControl>\n                )}\n              </AccountGroupingRow>\n            </InfoCard>\n          </YourAccount>\n\n          {!(isMobile && (window.web3 || window.ethereum)) && (\n            <ConnectButtonRow>\n              <OptionButton\n                onClick={() => {\n                  openOptions()\n                }}\n              >\n                Connect to a different wallet\n              </OptionButton>\n            </ConnectButtonRow>\n          )}\n        </AccountSection>\n      </UpperSection>\n      {!!pendingTransactions.length || !!confirmedTransactions.length ? (\n        <LowerSection>\n          <h5>Recent Transactions</h5>\n          {renderTransactions(pendingTransactions, true)}\n          {renderTransactions(confirmedTransactions, false)}\n        </LowerSection>\n      ) : (\n        <LowerSection>\n          <h5>Your transactions will appear here...</h5>\n        </LowerSection>\n      )}\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}