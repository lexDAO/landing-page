{"ast":null,"code":"import _slicedToArray from\"/Users/kerp/Documents/GitHub/landing-page/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _taggedTemplateLiteral from\"/Users/kerp/Documents/GitHub/landing-page/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";function _templateObject2(){var data=_taggedTemplateLiteral([\"\\n  margin-left: 0.25rem;\\n  \",\";\\n  align-items: center;\\n\"]);_templateObject2=function _templateObject2(){return data;};return data;}function _templateObject(){var data=_taggedTemplateLiteral([\"\\n  color: \",\";\\n  flex-shrink: 0;\\n  margin-right: 1rem;\\n  margin-left: 0.5rem;\\n  text-decoration: none;\\n  :hover,\\n  :active,\\n  :focus {\\n    text-decoration: none;\\n    color: \",\";\\n  }\\n\"]);_templateObject=function _templateObject(){return data;};return data;}import React from'react';import styled from'styled-components';import{useCopyClipboard}from'../../hooks';import{Link}from'../../theme';import{CheckCircle,Copy}from'react-feather';var CopyIcon=styled(Link)(_templateObject(),function(_ref){var theme=_ref.theme;return theme.silverGray;},function(_ref2){var theme=_ref2.theme;return theme.doveGray;});var TransactionStatusText=styled.span(_templateObject2(),function(_ref3){var theme=_ref3.theme;return theme.flexRowNoWrap;});export default function CopyHelper(_ref4){var toCopy=_ref4.toCopy;var _useCopyClipboard=useCopyClipboard(),_useCopyClipboard2=_slicedToArray(_useCopyClipboard,2),isCopied=_useCopyClipboard2[0],setCopied=_useCopyClipboard2[1];return/*#__PURE__*/React.createElement(CopyIcon,{onClick:function onClick(){return setCopied(toCopy);}},isCopied?/*#__PURE__*/React.createElement(TransactionStatusText,null,/*#__PURE__*/React.createElement(CheckCircle,{size:'16'}),/*#__PURE__*/React.createElement(TransactionStatusText,null,\"Copied\")):/*#__PURE__*/React.createElement(TransactionStatusText,null,/*#__PURE__*/React.createElement(Copy,{size:'16'})));}","map":{"version":3,"sources":["/Users/kerp/Documents/GitHub/landing-page/src/components/AccountDetails/Copy.js"],"names":["React","styled","useCopyClipboard","Link","CheckCircle","Copy","CopyIcon","theme","silverGray","doveGray","TransactionStatusText","span","flexRowNoWrap","CopyHelper","toCopy","isCopied","setCopied"],"mappings":"81BAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,CACA,OAASC,gBAAT,KAAiC,aAAjC,CAEA,OAASC,IAAT,KAAqB,aAArB,CACA,OAASC,WAAT,CAAsBC,IAAtB,KAAkC,eAAlC,CAEA,GAAMC,CAAAA,QAAQ,CAAGL,MAAM,CAACE,IAAD,CAAT,mBACH,kBAAGI,CAAAA,KAAH,MAAGA,KAAH,OAAeA,CAAAA,KAAK,CAACC,UAArB,EADG,CAUD,mBAAGD,CAAAA,KAAH,OAAGA,KAAH,OAAeA,CAAAA,KAAK,CAACE,QAArB,EAVC,CAAd,CAaA,GAAMC,CAAAA,qBAAqB,CAAGT,MAAM,CAACU,IAAV,oBAEvB,mBAAGJ,CAAAA,KAAH,OAAGA,KAAH,OAAeA,CAAAA,KAAK,CAACK,aAArB,EAFuB,CAA3B,CAMA,cAAe,SAASC,CAAAA,UAAT,OAAgC,IAAVC,CAAAA,MAAU,OAAVA,MAAU,uBACfZ,gBAAgB,EADD,wDACtCa,QADsC,uBAC5BC,SAD4B,uBAG7C,mBACE,oBAAC,QAAD,EAAU,OAAO,CAAE,yBAAMA,CAAAA,SAAS,CAACF,MAAD,CAAf,EAAnB,EACGC,QAAQ,cACP,oBAAC,qBAAD,mBACE,oBAAC,WAAD,EAAa,IAAI,CAAE,IAAnB,EADF,cAEE,oBAAC,qBAAD,eAFF,CADO,cAMP,oBAAC,qBAAD,mBACE,oBAAC,IAAD,EAAM,IAAI,CAAE,IAAZ,EADF,CAPJ,CADF,CAcD","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport { useCopyClipboard } from '../../hooks'\n\nimport { Link } from '../../theme'\nimport { CheckCircle, Copy } from 'react-feather'\n\nconst CopyIcon = styled(Link)`\n  color: ${({ theme }) => theme.silverGray};\n  flex-shrink: 0;\n  margin-right: 1rem;\n  margin-left: 0.5rem;\n  text-decoration: none;\n  :hover,\n  :active,\n  :focus {\n    text-decoration: none;\n    color: ${({ theme }) => theme.doveGray};\n  }\n`\nconst TransactionStatusText = styled.span`\n  margin-left: 0.25rem;\n  ${({ theme }) => theme.flexRowNoWrap};\n  align-items: center;\n`\n\nexport default function CopyHelper({ toCopy }) {\n  const [isCopied, setCopied] = useCopyClipboard()\n\n  return (\n    <CopyIcon onClick={() => setCopied(toCopy)}>\n      {isCopied ? (\n        <TransactionStatusText>\n          <CheckCircle size={'16'} />\n          <TransactionStatusText>Copied</TransactionStatusText>\n        </TransactionStatusText>\n      ) : (\n        <TransactionStatusText>\n          <Copy size={'16'} />\n        </TransactionStatusText>\n      )}\n    </CopyIcon>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}