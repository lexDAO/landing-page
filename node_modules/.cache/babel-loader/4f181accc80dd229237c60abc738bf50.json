{"ast":null,"code":"const createPayload = require('../util/create-payload.js');\n\nmodule.exports = SubProvider; // this is the base class for a subprovider -- mostly helpers\n\nfunction SubProvider() {}\n\nSubProvider.prototype.setEngine = function (engine) {\n  const self = this;\n  self.engine = engine;\n  engine.on('block', function (block) {\n    self.currentBlock = block;\n  });\n};\n\nSubProvider.prototype.handleRequest = function (payload, next, end) {\n  throw new Error('Subproviders should override `handleRequest`.');\n};\n\nSubProvider.prototype.emitPayload = function (payload, cb) {\n  const self = this;\n  self.engine.sendAsync(createPayload(payload), cb);\n};","map":{"version":3,"sources":["/Users/kerp/Documents/GitHub/landing-page/node_modules/web3-provider-engine/subproviders/subprovider.js"],"names":["createPayload","require","module","exports","SubProvider","prototype","setEngine","engine","self","on","block","currentBlock","handleRequest","payload","next","end","Error","emitPayload","cb","sendAsync"],"mappings":"AAAA,MAAMA,aAAa,GAAGC,OAAO,CAAC,2BAAD,CAA7B;;AAEAC,MAAM,CAACC,OAAP,GAAiBC,WAAjB,C,CAEA;;AAGA,SAASA,WAAT,GAAuB,CAEtB;;AAEDA,WAAW,CAACC,SAAZ,CAAsBC,SAAtB,GAAkC,UAASC,MAAT,EAAiB;AACjD,QAAMC,IAAI,GAAG,IAAb;AACAA,EAAAA,IAAI,CAACD,MAAL,GAAcA,MAAd;AACAA,EAAAA,MAAM,CAACE,EAAP,CAAU,OAAV,EAAmB,UAASC,KAAT,EAAgB;AACjCF,IAAAA,IAAI,CAACG,YAAL,GAAoBD,KAApB;AACD,GAFD;AAGD,CAND;;AAQAN,WAAW,CAACC,SAAZ,CAAsBO,aAAtB,GAAsC,UAASC,OAAT,EAAkBC,IAAlB,EAAwBC,GAAxB,EAA6B;AACjE,QAAM,IAAIC,KAAJ,CAAU,+CAAV,CAAN;AACD,CAFD;;AAIAZ,WAAW,CAACC,SAAZ,CAAsBY,WAAtB,GAAoC,UAASJ,OAAT,EAAkBK,EAAlB,EAAqB;AACvD,QAAMV,IAAI,GAAG,IAAb;AACAA,EAAAA,IAAI,CAACD,MAAL,CAAYY,SAAZ,CAAsBnB,aAAa,CAACa,OAAD,CAAnC,EAA8CK,EAA9C;AACD,CAHD","sourcesContent":["const createPayload = require('../util/create-payload.js')\n\nmodule.exports = SubProvider\n\n// this is the base class for a subprovider -- mostly helpers\n\n\nfunction SubProvider() {\n\n}\n\nSubProvider.prototype.setEngine = function(engine) {\n  const self = this\n  self.engine = engine\n  engine.on('block', function(block) {\n    self.currentBlock = block\n  })\n}\n\nSubProvider.prototype.handleRequest = function(payload, next, end) {\n  throw new Error('Subproviders should override `handleRequest`.')\n}\n\nSubProvider.prototype.emitPayload = function(payload, cb){\n  const self = this\n  self.engine.sendAsync(createPayload(payload), cb)\n}"]},"metadata":{},"sourceType":"script"}