{"ast":null,"code":"'use strict';\n\nvar Validator = module.exports.Validator = require('./validator');\n\nmodule.exports.ValidatorResult = require('./helpers').ValidatorResult;\nmodule.exports.ValidationError = require('./helpers').ValidationError;\nmodule.exports.SchemaError = require('./helpers').SchemaError;\nmodule.exports.SchemaScanResult = require('./scan').SchemaScanResult;\nmodule.exports.scan = require('./scan').scan;\n\nmodule.exports.validate = function (instance, schema, options) {\n  var v = new Validator();\n  return v.validate(instance, schema, options);\n};","map":{"version":3,"sources":["/Users/kerp/Documents/GitHub/landing-page/node_modules/jsonschema/lib/index.js"],"names":["Validator","module","exports","require","ValidatorResult","ValidationError","SchemaError","SchemaScanResult","scan","validate","instance","schema","options","v"],"mappings":"AAAA;;AAEA,IAAIA,SAAS,GAAGC,MAAM,CAACC,OAAP,CAAeF,SAAf,GAA2BG,OAAO,CAAC,aAAD,CAAlD;;AAEAF,MAAM,CAACC,OAAP,CAAeE,eAAf,GAAiCD,OAAO,CAAC,WAAD,CAAP,CAAqBC,eAAtD;AACAH,MAAM,CAACC,OAAP,CAAeG,eAAf,GAAiCF,OAAO,CAAC,WAAD,CAAP,CAAqBE,eAAtD;AACAJ,MAAM,CAACC,OAAP,CAAeI,WAAf,GAA6BH,OAAO,CAAC,WAAD,CAAP,CAAqBG,WAAlD;AACAL,MAAM,CAACC,OAAP,CAAeK,gBAAf,GAAkCJ,OAAO,CAAC,QAAD,CAAP,CAAkBI,gBAApD;AACAN,MAAM,CAACC,OAAP,CAAeM,IAAf,GAAsBL,OAAO,CAAC,QAAD,CAAP,CAAkBK,IAAxC;;AAEAP,MAAM,CAACC,OAAP,CAAeO,QAAf,GAA0B,UAAUC,QAAV,EAAoBC,MAApB,EAA4BC,OAA5B,EAAqC;AAC7D,MAAIC,CAAC,GAAG,IAAIb,SAAJ,EAAR;AACA,SAAOa,CAAC,CAACJ,QAAF,CAAWC,QAAX,EAAqBC,MAArB,EAA6BC,OAA7B,CAAP;AACD,CAHD","sourcesContent":["'use strict';\n\nvar Validator = module.exports.Validator = require('./validator');\n\nmodule.exports.ValidatorResult = require('./helpers').ValidatorResult;\nmodule.exports.ValidationError = require('./helpers').ValidationError;\nmodule.exports.SchemaError = require('./helpers').SchemaError;\nmodule.exports.SchemaScanResult = require('./scan').SchemaScanResult;\nmodule.exports.scan = require('./scan').scan;\n\nmodule.exports.validate = function (instance, schema, options) {\n  var v = new Validator();\n  return v.validate(instance, schema, options);\n};\n"]},"metadata":{},"sourceType":"script"}