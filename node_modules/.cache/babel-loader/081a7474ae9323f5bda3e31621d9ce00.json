{"ast":null,"code":"import * as ethers from 'ethers';\nexport default class UncheckedJsonRpcSigner extends ethers.Signer {\n  constructor(signer) {\n    super();\n    ethers.utils.defineReadOnly(this, 'signer', signer);\n    ethers.utils.defineReadOnly(this, 'provider', signer.provider);\n  }\n\n  getAddress() {\n    return this.signer.getAddress();\n  }\n\n  sendTransaction(transaction) {\n    return this.signer.sendUncheckedTransaction(transaction).then(hash => {\n      return {\n        hash: hash,\n        nonce: null,\n        gasLimit: null,\n        gasPrice: null,\n        data: null,\n        value: null,\n        chainId: null,\n        confirmations: 0,\n        from: null,\n        wait: confirmations => {\n          return this.signer.provider.waitForTransaction(hash, confirmations);\n        }\n      };\n    });\n  }\n\n  signMessage(message) {\n    return this.signer.signMessage(message);\n  }\n\n}","map":{"version":3,"sources":["/Users/kerp/Documents/GitHub/landing-page/src/utils/signer.js"],"names":["ethers","UncheckedJsonRpcSigner","Signer","constructor","signer","utils","defineReadOnly","provider","getAddress","sendTransaction","transaction","sendUncheckedTransaction","then","hash","nonce","gasLimit","gasPrice","data","value","chainId","confirmations","from","wait","waitForTransaction","signMessage","message"],"mappings":"AAAA,OAAO,KAAKA,MAAZ,MAAwB,QAAxB;AAEA,eAAe,MAAMC,sBAAN,SAAqCD,MAAM,CAACE,MAA5C,CAAmD;AAChEC,EAAAA,WAAW,CAACC,MAAD,EAAS;AAClB;AACAJ,IAAAA,MAAM,CAACK,KAAP,CAAaC,cAAb,CAA4B,IAA5B,EAAkC,QAAlC,EAA4CF,MAA5C;AACAJ,IAAAA,MAAM,CAACK,KAAP,CAAaC,cAAb,CAA4B,IAA5B,EAAkC,UAAlC,EAA8CF,MAAM,CAACG,QAArD;AACD;;AAEDC,EAAAA,UAAU,GAAG;AACX,WAAO,KAAKJ,MAAL,CAAYI,UAAZ,EAAP;AACD;;AAEDC,EAAAA,eAAe,CAACC,WAAD,EAAc;AAC3B,WAAO,KAAKN,MAAL,CAAYO,wBAAZ,CAAqCD,WAArC,EAAkDE,IAAlD,CAAuDC,IAAI,IAAI;AACpE,aAAO;AACLA,QAAAA,IAAI,EAAEA,IADD;AAELC,QAAAA,KAAK,EAAE,IAFF;AAGLC,QAAAA,QAAQ,EAAE,IAHL;AAILC,QAAAA,QAAQ,EAAE,IAJL;AAKLC,QAAAA,IAAI,EAAE,IALD;AAMLC,QAAAA,KAAK,EAAE,IANF;AAOLC,QAAAA,OAAO,EAAE,IAPJ;AAQLC,QAAAA,aAAa,EAAE,CARV;AASLC,QAAAA,IAAI,EAAE,IATD;AAULC,QAAAA,IAAI,EAAEF,aAAa,IAAI;AACrB,iBAAO,KAAKhB,MAAL,CAAYG,QAAZ,CAAqBgB,kBAArB,CAAwCV,IAAxC,EAA8CO,aAA9C,CAAP;AACD;AAZI,OAAP;AAcD,KAfM,CAAP;AAgBD;;AAEDI,EAAAA,WAAW,CAACC,OAAD,EAAU;AACnB,WAAO,KAAKrB,MAAL,CAAYoB,WAAZ,CAAwBC,OAAxB,CAAP;AACD;;AAhC+D","sourcesContent":["import * as ethers from 'ethers'\n\nexport default class UncheckedJsonRpcSigner extends ethers.Signer {\n  constructor(signer) {\n    super()\n    ethers.utils.defineReadOnly(this, 'signer', signer)\n    ethers.utils.defineReadOnly(this, 'provider', signer.provider)\n  }\n\n  getAddress() {\n    return this.signer.getAddress()\n  }\n\n  sendTransaction(transaction) {\n    return this.signer.sendUncheckedTransaction(transaction).then(hash => {\n      return {\n        hash: hash,\n        nonce: null,\n        gasLimit: null,\n        gasPrice: null,\n        data: null,\n        value: null,\n        chainId: null,\n        confirmations: 0,\n        from: null,\n        wait: confirmations => {\n          return this.signer.provider.waitForTransaction(hash, confirmations)\n        }\n      }\n    })\n  }\n\n  signMessage(message) {\n    return this.signer.signMessage(message)\n  }\n}\n"]},"metadata":{},"sourceType":"module"}