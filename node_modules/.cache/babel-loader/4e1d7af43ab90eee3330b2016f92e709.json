{"ast":null,"code":"'use strict';\n\nexports.__esModule = true;\nvar errorProps = ['description', 'fileName', 'lineNumber', 'endLineNumber', 'message', 'name', 'number', 'stack'];\n\nfunction Exception(message, node) {\n  var loc = node && node.loc,\n      line = undefined,\n      endLineNumber = undefined,\n      column = undefined,\n      endColumn = undefined;\n\n  if (loc) {\n    line = loc.start.line;\n    endLineNumber = loc.end.line;\n    column = loc.start.column;\n    endColumn = loc.end.column;\n    message += ' - ' + line + ':' + column;\n  }\n\n  var tmp = Error.prototype.constructor.call(this, message); // Unfortunately errors are not enumerable in Chrome (at least), so `for prop in tmp` doesn't work.\n\n  for (var idx = 0; idx < errorProps.length; idx++) {\n    this[errorProps[idx]] = tmp[errorProps[idx]];\n  }\n  /* istanbul ignore else */\n\n\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, Exception);\n  }\n\n  try {\n    if (loc) {\n      this.lineNumber = line;\n      this.endLineNumber = endLineNumber; // Work around issue under safari where we can't directly set the column value\n\n      /* istanbul ignore next */\n\n      if (Object.defineProperty) {\n        Object.defineProperty(this, 'column', {\n          value: column,\n          enumerable: true\n        });\n        Object.defineProperty(this, 'endColumn', {\n          value: endColumn,\n          enumerable: true\n        });\n      } else {\n        this.column = column;\n        this.endColumn = endColumn;\n      }\n    }\n  } catch (nop) {\n    /* Ignore if the browser is very particular */\n  }\n}\n\nException.prototype = new Error();\nexports['default'] = Exception;\nmodule.exports = exports['default'];","map":{"version":3,"sources":["../../../lib/handlebars/exception.js"],"names":[],"mappings":";;;AAAA,IAAM,UAAU,GAAG,CACjB,aADiB,EAEjB,UAFiB,EAGjB,YAHiB,EAIjB,eAJiB,EAKjB,SALiB,EAMjB,MANiB,EAOjB,QAPiB,EAQjB,OARiB,CAAnB;;AAWA,SAAS,SAAT,CAAmB,OAAnB,EAA4B,IAA5B,EAAkC;AAChC,MAAI,GAAG,GAAG,IAAI,IAAI,IAAI,CAAC,GAAvB;AAAA,MACE,IAAI,GAAA,SADN;AAAA,MAEE,aAAa,GAAA,SAFf;AAAA,MAGE,MAAM,GAAA,SAHR;AAAA,MAIE,SAAS,GAAA,SAJX;;AAMA,MAAI,GAAJ,EAAS;AACP,IAAA,IAAI,GAAG,GAAG,CAAC,KAAJ,CAAU,IAAjB;AACA,IAAA,aAAa,GAAG,GAAG,CAAC,GAAJ,CAAQ,IAAxB;AACA,IAAA,MAAM,GAAG,GAAG,CAAC,KAAJ,CAAU,MAAnB;AACA,IAAA,SAAS,GAAG,GAAG,CAAC,GAAJ,CAAQ,MAApB;AAEA,IAAA,OAAO,IAAI,QAAQ,IAAR,GAAe,GAAf,GAAqB,MAAhC;AACD;;AAED,MAAI,GAAG,GAAG,KAAK,CAAC,SAAN,CAAgB,WAAhB,CAA4B,IAA5B,CAAiC,IAAjC,EAAuC,OAAvC,CAAV,CAhBgC,C;;AAmBhC,OAAK,IAAI,GAAG,GAAG,CAAf,EAAkB,GAAG,GAAG,UAAU,CAAC,MAAnC,EAA2C,GAAG,EAA9C,EAAkD;AAChD,SAAK,UAAU,CAAC,GAAD,CAAf,IAAwB,GAAG,CAAC,UAAU,CAAC,GAAD,CAAX,CAA3B;AACD;;;;AAGD,MAAI,KAAK,CAAC,iBAAV,EAA6B;AAC3B,IAAA,KAAK,CAAC,iBAAN,CAAwB,IAAxB,EAA8B,SAA9B;AACD;;AAED,MAAI;AACF,QAAI,GAAJ,EAAS;AACP,WAAK,UAAL,GAAkB,IAAlB;AACA,WAAK,aAAL,GAAqB,aAArB,CAFO,C;;;;AAMP,UAAI,MAAM,CAAC,cAAX,EAA2B;AACzB,QAAA,MAAM,CAAC,cAAP,CAAsB,IAAtB,EAA4B,QAA5B,EAAsC;AACpC,UAAA,KAAK,EAAE,MAD6B;AAEpC,UAAA,UAAU,EAAE;AAFwB,SAAtC;AAIA,QAAA,MAAM,CAAC,cAAP,CAAsB,IAAtB,EAA4B,WAA5B,EAAyC;AACvC,UAAA,KAAK,EAAE,SADgC;AAEvC,UAAA,UAAU,EAAE;AAF2B,SAAzC;AAID,OATD,MASO;AACL,aAAK,MAAL,GAAc,MAAd;AACA,aAAK,SAAL,GAAiB,SAAjB;AACD;AACF;AACF,GArBD,CAqBE,OAAO,GAAP,EAAY;;AAEb;AACF;;AAED,SAAS,CAAC,SAAV,GAAsB,IAAI,KAAJ,EAAtB;qBAEe,S","sourcesContent":["const errorProps = [\n  'description',\n  'fileName',\n  'lineNumber',\n  'endLineNumber',\n  'message',\n  'name',\n  'number',\n  'stack'\n];\n\nfunction Exception(message, node) {\n  let loc = node && node.loc,\n    line,\n    endLineNumber,\n    column,\n    endColumn;\n\n  if (loc) {\n    line = loc.start.line;\n    endLineNumber = loc.end.line;\n    column = loc.start.column;\n    endColumn = loc.end.column;\n\n    message += ' - ' + line + ':' + column;\n  }\n\n  let tmp = Error.prototype.constructor.call(this, message);\n\n  // Unfortunately errors are not enumerable in Chrome (at least), so `for prop in tmp` doesn't work.\n  for (let idx = 0; idx < errorProps.length; idx++) {\n    this[errorProps[idx]] = tmp[errorProps[idx]];\n  }\n\n  /* istanbul ignore else */\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, Exception);\n  }\n\n  try {\n    if (loc) {\n      this.lineNumber = line;\n      this.endLineNumber = endLineNumber;\n\n      // Work around issue under safari where we can't directly set the column value\n      /* istanbul ignore next */\n      if (Object.defineProperty) {\n        Object.defineProperty(this, 'column', {\n          value: column,\n          enumerable: true\n        });\n        Object.defineProperty(this, 'endColumn', {\n          value: endColumn,\n          enumerable: true\n        });\n      } else {\n        this.column = column;\n        this.endColumn = endColumn;\n      }\n    }\n  } catch (nop) {\n    /* Ignore if the browser is very particular */\n  }\n}\n\nException.prototype = new Error();\n\nexport default Exception;\n"]},"metadata":{},"sourceType":"script"}