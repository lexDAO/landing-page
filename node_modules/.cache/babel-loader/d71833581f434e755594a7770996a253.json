{"ast":null,"code":"var _jsxFileName = \"/Users/kerp/Documents/GitHub/landing-page/src/components/AccountDetails/Copy.js\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport { useCopyClipboard } from '../../hooks';\nimport { Link } from '../../theme';\nimport { CheckCircle, Copy } from 'react-feather';\nconst CopyIcon = styled(Link)`\n  color: ${({\n  theme\n}) => theme.silverGray};\n  flex-shrink: 0;\n  margin-right: 1rem;\n  margin-left: 0.5rem;\n  text-decoration: none;\n  :hover,\n  :active,\n  :focus {\n    text-decoration: none;\n    color: ${({\n  theme\n}) => theme.doveGray};\n  }\n`;\nconst TransactionStatusText = styled.span`\n  margin-left: 0.25rem;\n  ${({\n  theme\n}) => theme.flexRowNoWrap};\n  align-items: center;\n`;\nexport default function CopyHelper({\n  toCopy\n}) {\n  const [isCopied, setCopied] = useCopyClipboard();\n  return /*#__PURE__*/React.createElement(CopyIcon, {\n    onClick: () => setCopied(toCopy),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, isCopied ? /*#__PURE__*/React.createElement(TransactionStatusText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CheckCircle, {\n    size: '16',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(TransactionStatusText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }\n  }, \"Copied\")) : /*#__PURE__*/React.createElement(TransactionStatusText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Copy, {\n    size: '16',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }\n  })));\n}","map":{"version":3,"sources":["/Users/kerp/Documents/GitHub/landing-page/src/components/AccountDetails/Copy.js"],"names":["React","styled","useCopyClipboard","Link","CheckCircle","Copy","CopyIcon","theme","silverGray","doveGray","TransactionStatusText","span","flexRowNoWrap","CopyHelper","toCopy","isCopied","setCopied"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,gBAAT,QAAiC,aAAjC;AAEA,SAASC,IAAT,QAAqB,aAArB;AACA,SAASC,WAAT,EAAsBC,IAAtB,QAAkC,eAAlC;AAEA,MAAMC,QAAQ,GAAGL,MAAM,CAACE,IAAD,CAAO;WACnB,CAAC;AAAEI,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACC,UAAW;;;;;;;;;aAS9B,CAAC;AAAED,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACE,QAAS;;CAV3C;AAaA,MAAMC,qBAAqB,GAAGT,MAAM,CAACU,IAAK;;IAEtC,CAAC;AAAEJ,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACK,aAAc;;CAFvC;AAMA,eAAe,SAASC,UAAT,CAAoB;AAAEC,EAAAA;AAAF,CAApB,EAAgC;AAC7C,QAAM,CAACC,QAAD,EAAWC,SAAX,IAAwBd,gBAAgB,EAA9C;AAEA,sBACE,oBAAC,QAAD;AAAU,IAAA,OAAO,EAAE,MAAMc,SAAS,CAACF,MAAD,CAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,QAAQ,gBACP,oBAAC,qBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD;AAAa,IAAA,IAAI,EAAE,IAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,qBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,CADO,gBAMP,oBAAC,qBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAE,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAPJ,CADF;AAcD","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport { useCopyClipboard } from '../../hooks'\n\nimport { Link } from '../../theme'\nimport { CheckCircle, Copy } from 'react-feather'\n\nconst CopyIcon = styled(Link)`\n  color: ${({ theme }) => theme.silverGray};\n  flex-shrink: 0;\n  margin-right: 1rem;\n  margin-left: 0.5rem;\n  text-decoration: none;\n  :hover,\n  :active,\n  :focus {\n    text-decoration: none;\n    color: ${({ theme }) => theme.doveGray};\n  }\n`\nconst TransactionStatusText = styled.span`\n  margin-left: 0.25rem;\n  ${({ theme }) => theme.flexRowNoWrap};\n  align-items: center;\n`\n\nexport default function CopyHelper({ toCopy }) {\n  const [isCopied, setCopied] = useCopyClipboard()\n\n  return (\n    <CopyIcon onClick={() => setCopied(toCopy)}>\n      {isCopied ? (\n        <TransactionStatusText>\n          <CheckCircle size={'16'} />\n          <TransactionStatusText>Copied</TransactionStatusText>\n        </TransactionStatusText>\n      ) : (\n        <TransactionStatusText>\n          <Copy size={'16'} />\n        </TransactionStatusText>\n      )}\n    </CopyIcon>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}