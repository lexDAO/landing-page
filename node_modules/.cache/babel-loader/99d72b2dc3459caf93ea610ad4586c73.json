{"ast":null,"code":"'use strict';\n\nexports.__esModule = true; // istanbul ignore next\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    'default': obj\n  };\n}\n\nvar _handlebarsRuntime = require('./handlebars.runtime');\n\nvar _handlebarsRuntime2 = _interopRequireDefault(_handlebarsRuntime); // Compiler imports\n\n\nvar _handlebarsCompilerAst = require('./handlebars/compiler/ast');\n\nvar _handlebarsCompilerAst2 = _interopRequireDefault(_handlebarsCompilerAst);\n\nvar _handlebarsCompilerBase = require('./handlebars/compiler/base');\n\nvar _handlebarsCompilerCompiler = require('./handlebars/compiler/compiler');\n\nvar _handlebarsCompilerJavascriptCompiler = require('./handlebars/compiler/javascript-compiler');\n\nvar _handlebarsCompilerJavascriptCompiler2 = _interopRequireDefault(_handlebarsCompilerJavascriptCompiler);\n\nvar _handlebarsCompilerVisitor = require('./handlebars/compiler/visitor');\n\nvar _handlebarsCompilerVisitor2 = _interopRequireDefault(_handlebarsCompilerVisitor);\n\nvar _handlebarsNoConflict = require('./handlebars/no-conflict');\n\nvar _handlebarsNoConflict2 = _interopRequireDefault(_handlebarsNoConflict);\n\nvar _create = _handlebarsRuntime2['default'].create;\n\nfunction create() {\n  var hb = _create();\n\n  hb.compile = function (input, options) {\n    return _handlebarsCompilerCompiler.compile(input, options, hb);\n  };\n\n  hb.precompile = function (input, options) {\n    return _handlebarsCompilerCompiler.precompile(input, options, hb);\n  };\n\n  hb.AST = _handlebarsCompilerAst2['default'];\n  hb.Compiler = _handlebarsCompilerCompiler.Compiler;\n  hb.JavaScriptCompiler = _handlebarsCompilerJavascriptCompiler2['default'];\n  hb.Parser = _handlebarsCompilerBase.parser;\n  hb.parse = _handlebarsCompilerBase.parse;\n  hb.parseWithoutProcessing = _handlebarsCompilerBase.parseWithoutProcessing;\n  return hb;\n}\n\nvar inst = create();\ninst.create = create;\n\n_handlebarsNoConflict2['default'](inst);\n\ninst.Visitor = _handlebarsCompilerVisitor2['default'];\ninst['default'] = inst;\nexports['default'] = inst;\nmodule.exports = exports['default'];","map":{"version":3,"sources":["../../lib/handlebars.js"],"names":[],"mappings":";;;;;;;;;;iCAAoB,sB;;;;;qCAGJ,2B;;;;sCAKT,4B;;0CACuC,gC;;oDACf,2C;;;;yCACX,+B;;;;oCAEG,0B;;;;AAEvB,IAAI,OAAO,GAAG,mBAAA,CAAA,SAAA,CAAA,CAAQ,MAAtB;;AACA,SAAS,MAAT,GAAkB;AAChB,MAAI,EAAE,GAAG,OAAO,EAAhB;;AAEA,EAAA,EAAE,CAAC,OAAH,GAAa,UAAS,KAAT,EAAgB,OAAhB,EAAyB;AACpC,WAAO,2BAAA,CAAA,OAAA,CAAQ,KAAR,EAAe,OAAf,EAAwB,EAAxB,CAAP;AACD,GAFD;;AAGA,EAAA,EAAE,CAAC,UAAH,GAAgB,UAAS,KAAT,EAAgB,OAAhB,EAAyB;AACvC,WAAO,2BAAA,CAAA,UAAA,CAAW,KAAX,EAAkB,OAAlB,EAA2B,EAA3B,CAAP;AACD,GAFD;;AAIA,EAAA,EAAE,CAAC,GAAH,GAAM,uBAAA,CAAA,SAAA,CAAN;AACA,EAAA,EAAE,CAAC,QAAH,GAAW,2BAAA,CAAA,QAAX;AACA,EAAA,EAAE,CAAC,kBAAH,GAAqB,sCAAA,CAAA,SAAA,CAArB;AACA,EAAA,EAAE,CAAC,MAAH,GAAS,uBAAA,CAAA,MAAT;AACA,EAAA,EAAE,CAAC,KAAH,GAAQ,uBAAA,CAAA,KAAR;AACA,EAAA,EAAE,CAAC,sBAAH,GAAyB,uBAAA,CAAA,sBAAzB;AAEA,SAAO,EAAP;AACD;;AAED,IAAI,IAAI,GAAG,MAAM,EAAjB;AACA,IAAI,CAAC,MAAL,GAAc,MAAd;;AAEA,sBAAA,CAAA,SAAA,CAAA,CAAW,IAAX;;AAEA,IAAI,CAAC,OAAL,GAAY,2BAAA,CAAA,SAAA,CAAZ;AAEA,IAAI,CAAC,SAAD,CAAJ,GAAkB,IAAlB;qBAEe,I","sourcesContent":["import runtime from './handlebars.runtime';\n\n// Compiler imports\nimport AST from './handlebars/compiler/ast';\nimport {\n  parser as Parser,\n  parse,\n  parseWithoutProcessing\n} from './handlebars/compiler/base';\nimport { Compiler, compile, precompile } from './handlebars/compiler/compiler';\nimport JavaScriptCompiler from './handlebars/compiler/javascript-compiler';\nimport Visitor from './handlebars/compiler/visitor';\n\nimport noConflict from './handlebars/no-conflict';\n\nlet _create = runtime.create;\nfunction create() {\n  let hb = _create();\n\n  hb.compile = function(input, options) {\n    return compile(input, options, hb);\n  };\n  hb.precompile = function(input, options) {\n    return precompile(input, options, hb);\n  };\n\n  hb.AST = AST;\n  hb.Compiler = Compiler;\n  hb.JavaScriptCompiler = JavaScriptCompiler;\n  hb.Parser = Parser;\n  hb.parse = parse;\n  hb.parseWithoutProcessing = parseWithoutProcessing;\n\n  return hb;\n}\n\nlet inst = create();\ninst.create = create;\n\nnoConflict(inst);\n\ninst.Visitor = Visitor;\n\ninst['default'] = inst;\n\nexport default inst;\n"]},"metadata":{},"sourceType":"script"}