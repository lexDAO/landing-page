{"ast":null,"code":"import { AbstractConnector } from '@web3-react/abstract-connector';\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nvar TorusConnector = /*#__PURE__*/function (_AbstractConnector) {\n  _inheritsLoose(TorusConnector, _AbstractConnector);\n\n  function TorusConnector(_ref) {\n    var _this;\n\n    var chainId = _ref.chainId,\n        _ref$initOptions = _ref.initOptions,\n        initOptions = _ref$initOptions === void 0 ? {} : _ref$initOptions,\n        _ref$constructorOptio = _ref.constructorOptions,\n        constructorOptions = _ref$constructorOptio === void 0 ? {} : _ref$constructorOptio,\n        _ref$loginOptions = _ref.loginOptions,\n        loginOptions = _ref$loginOptions === void 0 ? {} : _ref$loginOptions;\n    _this = _AbstractConnector.call(this, {\n      supportedChainIds: [chainId]\n    }) || this;\n    _this.chainId = chainId;\n    _this.initOptions = initOptions;\n    _this.constructorOptions = constructorOptions;\n    _this.loginOptions = loginOptions;\n    return _this;\n  }\n\n  var _proto = TorusConnector.prototype;\n\n  _proto.activate = function activate() {\n    try {\n      var _temp3 = function _temp3() {\n        return Promise.resolve(_this3.torus.login(_this3.loginOptions).then(function (accounts) {\n          return accounts[0];\n        })).then(function (account) {\n          return {\n            provider: _this3.torus.provider,\n            account: account\n          };\n        });\n      };\n\n      var _this3 = this;\n\n      var _temp4 = function () {\n        if (!_this3.torus) {\n          return Promise.resolve(import('@toruslabs/torus-embed')).then(function (_ref2) {\n            var Torus = _ref2[\"default\"];\n            _this3.torus = new Torus(_this3.constructorOptions);\n            return Promise.resolve(_this3.torus.init(_this3.initOptions)).then(function () {});\n          });\n        }\n      }();\n\n      return Promise.resolve(_temp4 && _temp4.then ? _temp4.then(_temp3) : _temp3(_temp4));\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n\n  _proto.getProvider = function getProvider() {\n    try {\n      var _this5 = this;\n\n      return Promise.resolve(_this5.torus.provider);\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n\n  _proto.getChainId = function getChainId() {\n    try {\n      var _this7 = this;\n\n      return Promise.resolve(_this7.chainId);\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n\n  _proto.getAccount = function getAccount() {\n    try {\n      var _this9 = this;\n\n      return Promise.resolve(_this9.torus.ethereum.send('eth_accounts').then(function (accounts) {\n        return accounts[0];\n      }));\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n\n  _proto.deactivate = function deactivate() {\n    try {\n      var _this11 = this;\n\n      return Promise.resolve(_this11.torus.cleanUp()).then(function () {\n        _this11.torus = undefined;\n      });\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n\n  _proto.close = function close() {\n    try {\n      var _this13 = this;\n\n      return Promise.resolve(_this13.torus.logout()).then(function () {\n        _this13.emitDeactivate();\n      });\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n\n  return TorusConnector;\n}(AbstractConnector);\n\nexport { TorusConnector };","map":{"version":3,"sources":["../src/index.ts"],"names":["TorusConnector","chainId","initOptions","constructorOptions","loginOptions","supportedChainIds","torus","Torus","account","accounts","provider"],"mappings":"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","sourcesContent":["import { ConnectorUpdate } from '@web3-react/types'\nimport { AbstractConnector } from '@web3-react/abstract-connector'\n\ninterface TorusConnectorArguments {\n  chainId: number\n  initOptions?: any\n  constructorOptions?: any\n  loginOptions?: any\n}\n\nexport class TorusConnector extends AbstractConnector {\n  private readonly chainId: number\n  private readonly initOptions: any\n  private readonly constructorOptions: any\n  private readonly loginOptions: any\n\n  public torus: any\n\n  constructor({ chainId, initOptions = {}, constructorOptions = {}, loginOptions = {} }: TorusConnectorArguments) {\n    super({ supportedChainIds: [chainId] })\n\n    this.chainId = chainId\n    this.initOptions = initOptions\n    this.constructorOptions = constructorOptions\n    this.loginOptions = loginOptions\n  }\n\n  public async activate(): Promise<ConnectorUpdate> {\n    if (!this.torus) {\n      const { default: Torus } = await import('@toruslabs/torus-embed')\n      this.torus = new Torus(this.constructorOptions)\n      await this.torus.init(this.initOptions)\n    }\n\n    const account = await this.torus.login(this.loginOptions).then((accounts: string[]): string => accounts[0])\n\n    return { provider: this.torus.provider, account }\n  }\n\n  public async getProvider(): Promise<any> {\n    return this.torus.provider\n  }\n\n  public async getChainId(): Promise<number | string> {\n    return this.chainId\n  }\n\n  public async getAccount(): Promise<null | string> {\n    return this.torus.ethereum.send('eth_accounts').then((accounts: string[]): string => accounts[0])\n  }\n\n  public async deactivate() {\n    await this.torus.cleanUp()\n    this.torus = undefined\n  }\n\n  public async close() {\n    await this.torus.logout()\n    this.emitDeactivate()\n  }\n}\n"]},"metadata":{},"sourceType":"module"}