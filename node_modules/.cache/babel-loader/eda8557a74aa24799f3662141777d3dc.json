{"ast":null,"code":"var _jsxFileName = \"/Users/kerp/Documents/GitHub/landing-page/src/contexts/Allowances.js\";\nimport React, { createContext, useContext, useReducer, useMemo, useCallback, useEffect } from 'react';\nimport '@web3-react/core';\nimport { useWeb3React } from '../hooks';\nimport { safeAccess, isAddress, getTokenAllowance } from '../utils';\nimport { useBlockNumber } from './Application';\nconst UPDATE = 'UPDATE';\nconst AllowancesContext = createContext();\n\nfunction useAllowancesContext() {\n  return useContext(AllowancesContext);\n}\n\nfunction reducer(state, {\n  type,\n  payload\n}) {\n  switch (type) {\n    case UPDATE:\n      {\n        const {\n          networkId,\n          address,\n          tokenAddress,\n          spenderAddress,\n          value,\n          blockNumber\n        } = payload;\n        return { ...state,\n          [networkId]: { ...(safeAccess(state, [networkId]) || {}),\n            [address]: { ...(safeAccess(state, [networkId, address]) || {}),\n              [tokenAddress]: { ...(safeAccess(state, [networkId, address, tokenAddress]) || {}),\n                [spenderAddress]: {\n                  value,\n                  blockNumber\n                }\n              }\n            }\n          }\n        };\n      }\n\n    default:\n      {\n        throw Error(`Unexpected action type in AllowancesContext reducer: '${type}'.`);\n      }\n  }\n}\n\nexport default function Provider({\n  children\n}) {\n  const [state, dispatch] = useReducer(reducer, {});\n  const update = useCallback((networkId, address, tokenAddress, spenderAddress, value, blockNumber) => {\n    dispatch({\n      type: UPDATE,\n      payload: {\n        networkId,\n        address,\n        tokenAddress,\n        spenderAddress,\n        value,\n        blockNumber\n      }\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(AllowancesContext.Provider, {\n    value: useMemo(() => [state, {\n      update\n    }], [state, update]),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }, children);\n}\nexport function useAddressAllowance(address, tokenAddress, spenderAddress) {\n  const {\n    library,\n    chainId\n  } = useWeb3React();\n  const globalBlockNumber = useBlockNumber();\n  const [state, {\n    update\n  }] = useAllowancesContext();\n  const {\n    value,\n    blockNumber\n  } = safeAccess(state, [chainId, address, tokenAddress, spenderAddress]) || {};\n  useEffect(() => {\n    if (isAddress(address) && isAddress(tokenAddress) && isAddress(spenderAddress) && (value === undefined || blockNumber !== globalBlockNumber) && (chainId || chainId === 0) && library) {\n      let stale = false;\n      getTokenAllowance(address, tokenAddress, spenderAddress, library).then(value => {\n        if (!stale) {\n          update(chainId, address, tokenAddress, spenderAddress, value, globalBlockNumber);\n        }\n      }).catch(() => {\n        if (!stale) {\n          update(chainId, address, tokenAddress, spenderAddress, null, globalBlockNumber);\n        }\n      });\n      return () => {\n        stale = true;\n      };\n    }\n  }, [address, tokenAddress, spenderAddress, value, blockNumber, globalBlockNumber, chainId, library, update]);\n  return value;\n}","map":{"version":3,"sources":["/Users/kerp/Documents/GitHub/landing-page/src/contexts/Allowances.js"],"names":["React","createContext","useContext","useReducer","useMemo","useCallback","useEffect","useWeb3React","safeAccess","isAddress","getTokenAllowance","useBlockNumber","UPDATE","AllowancesContext","useAllowancesContext","reducer","state","type","payload","networkId","address","tokenAddress","spenderAddress","value","blockNumber","Error","Provider","children","dispatch","update","useAddressAllowance","library","chainId","globalBlockNumber","undefined","stale","then","catch"],"mappings":"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","sourcesContent":["import React, { createContext, useContext, useReducer, useMemo, useCallback, useEffect } from 'react'\nimport {} from '@web3-react/core'\n\nimport { useWeb3React } from '../hooks'\nimport { safeAccess, isAddress, getTokenAllowance } from '../utils'\nimport { useBlockNumber } from './Application'\n\nconst UPDATE = 'UPDATE'\n\nconst AllowancesContext = createContext()\n\nfunction useAllowancesContext() {\n  return useContext(AllowancesContext)\n}\n\nfunction reducer(state, { type, payload }) {\n  switch (type) {\n    case UPDATE: {\n      const { networkId, address, tokenAddress, spenderAddress, value, blockNumber } = payload\n      return {\n        ...state,\n        [networkId]: {\n          ...(safeAccess(state, [networkId]) || {}),\n          [address]: {\n            ...(safeAccess(state, [networkId, address]) || {}),\n            [tokenAddress]: {\n              ...(safeAccess(state, [networkId, address, tokenAddress]) || {}),\n              [spenderAddress]: {\n                value,\n                blockNumber\n              }\n            }\n          }\n        }\n      }\n    }\n    default: {\n      throw Error(`Unexpected action type in AllowancesContext reducer: '${type}'.`)\n    }\n  }\n}\n\nexport default function Provider({ children }) {\n  const [state, dispatch] = useReducer(reducer, {})\n\n  const update = useCallback((networkId, address, tokenAddress, spenderAddress, value, blockNumber) => {\n    dispatch({ type: UPDATE, payload: { networkId, address, tokenAddress, spenderAddress, value, blockNumber } })\n  }, [])\n\n  return (\n    <AllowancesContext.Provider value={useMemo(() => [state, { update }], [state, update])}>\n      {children}\n    </AllowancesContext.Provider>\n  )\n}\n\nexport function useAddressAllowance(address, tokenAddress, spenderAddress) {\n  const { library, chainId } = useWeb3React()\n\n  const globalBlockNumber = useBlockNumber()\n\n  const [state, { update }] = useAllowancesContext()\n  const { value, blockNumber } = safeAccess(state, [chainId, address, tokenAddress, spenderAddress]) || {}\n\n  useEffect(() => {\n    if (\n      isAddress(address) &&\n      isAddress(tokenAddress) &&\n      isAddress(spenderAddress) &&\n      (value === undefined || blockNumber !== globalBlockNumber) &&\n      (chainId || chainId === 0) &&\n      library\n    ) {\n      let stale = false\n\n      getTokenAllowance(address, tokenAddress, spenderAddress, library)\n        .then(value => {\n          if (!stale) {\n            update(chainId, address, tokenAddress, spenderAddress, value, globalBlockNumber)\n          }\n        })\n        .catch(() => {\n          if (!stale) {\n            update(chainId, address, tokenAddress, spenderAddress, null, globalBlockNumber)\n          }\n        })\n\n      return () => {\n        stale = true\n      }\n    }\n  }, [address, tokenAddress, spenderAddress, value, blockNumber, globalBlockNumber, chainId, library, update])\n\n  return value\n}\n"]},"metadata":{},"sourceType":"module"}