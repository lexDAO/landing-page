{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar bignumber_js_1 = __importDefault(require(\"bignumber.js\"));\n\nvar constants_1 = require(\"../constants\");\n\nfunction calculateDecimalRate(numerator, denominator, keepAsDecimal) {\n  if (keepAsDecimal === void 0) {\n    keepAsDecimal = false;\n  }\n\n  var largerScalar = constants_1._10.exponentiatedBy(new bignumber_js_1.default(Math.abs(numerator.token.decimals - denominator.token.decimals)));\n\n  var smallerScalar = largerScalar.isEqualTo(constants_1._1) ? constants_1._1 : new bignumber_js_1.default(\"0.\" + '0'.repeat(largerScalar.toFixed().length - 2) + \"1\");\n  var invertedIsLarger = numerator.token.decimals - denominator.token.decimals > 0;\n  var decimalRate = {\n    numerator: numerator.amount,\n    denominator: denominator.amount,\n    decimalScalar: invertedIsLarger ? smallerScalar : largerScalar,\n    decimalScalarInverted: invertedIsLarger ? largerScalar : smallerScalar\n  };\n  return keepAsDecimal ? decimalRate : {\n    rate: decimalRate.numerator.multipliedBy(decimalRate.decimalScalar).dividedBy(decimalRate.denominator),\n    rateInverted: decimalRate.denominator.multipliedBy(decimalRate.decimalScalarInverted).dividedBy(decimalRate.numerator)\n  };\n}\n\nexports.calculateDecimalRate = calculateDecimalRate;","map":{"version":3,"sources":["../../src/computation/_utils.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA,IAAA,cAAA,GAAA,eAAA,CAAA,OAAA,CAAA,cAAA,CAAA,CAAA;;AAGA,IAAA,WAAA,GAAA,OAAA,CAAA,cAAA,CAAA;;AAEA,SAAgB,oBAAhB,CACE,SADF,EAEE,WAFF,EAGE,aAHF,EAGgC;AAA9B,MAAA,aAAA,KAAA,KAAA,CAAA,EAAA;AAAA,IAAA,aAAA,GAAA,KAAA;AAA8B;;AAE9B,MAAM,YAAY,GAAc,WAAA,CAAA,GAAA,CAAI,eAAJ,CAC9B,IAAI,cAAA,CAAA,OAAJ,CAAc,IAAI,CAAC,GAAL,CAAS,SAAS,CAAC,KAAV,CAAgB,QAAhB,GAA2B,WAAW,CAAC,KAAZ,CAAkB,QAAtD,CAAd,CAD8B,CAAhC;;AAIA,MAAM,aAAa,GAAc,YAAY,CAAC,SAAb,CAAuB,WAAA,CAAA,EAAvB,IAC7B,WAAA,CAAA,EAD6B,GAE7B,IAAI,cAAA,CAAA,OAAJ,CAAc,OAAK,IAAI,MAAJ,CAAW,YAAY,CAAC,OAAb,GAAuB,MAAvB,GAAgC,CAA3C,CAAL,GAAkD,GAAhE,CAFJ;AAIA,MAAM,gBAAgB,GAAY,SAAS,CAAC,KAAV,CAAgB,QAAhB,GAA2B,WAAW,CAAC,KAAZ,CAAkB,QAA7C,GAAwD,CAA1F;AAEA,MAAM,WAAW,GAAiB;AAChC,IAAA,SAAS,EAAE,SAAS,CAAC,MADW;AAEhC,IAAA,WAAW,EAAE,WAAW,CAAC,MAFO;AAGhC,IAAA,aAAa,EAAE,gBAAgB,GAAG,aAAH,GAAmB,YAHlB;AAIhC,IAAA,qBAAqB,EAAE,gBAAgB,GAAG,YAAH,GAAkB;AAJzB,GAAlC;AAOA,SAAO,aAAa,GAChB,WADgB,GAEhB;AACE,IAAA,IAAI,EAAE,WAAW,CAAC,SAAZ,CAAsB,YAAtB,CAAmC,WAAW,CAAC,aAA/C,EAA8D,SAA9D,CAAwE,WAAW,CAAC,WAApF,CADR;AAEE,IAAA,YAAY,EAAE,WAAW,CAAC,WAAZ,CACX,YADW,CACE,WAAW,CAAC,qBADd,EAEX,SAFW,CAED,WAAW,CAAC,SAFX;AAFhB,GAFJ;AAQD;;AA9BD,OAAA,CAAA,oBAAA,GAAA,oBAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar bignumber_js_1 = __importDefault(require(\"bignumber.js\"));\nvar constants_1 = require(\"../constants\");\nfunction calculateDecimalRate(numerator, denominator, keepAsDecimal) {\n    if (keepAsDecimal === void 0) { keepAsDecimal = false; }\n    var largerScalar = constants_1._10.exponentiatedBy(new bignumber_js_1.default(Math.abs(numerator.token.decimals - denominator.token.decimals)));\n    var smallerScalar = largerScalar.isEqualTo(constants_1._1)\n        ? constants_1._1\n        : new bignumber_js_1.default(\"0.\" + '0'.repeat(largerScalar.toFixed().length - 2) + \"1\");\n    var invertedIsLarger = numerator.token.decimals - denominator.token.decimals > 0;\n    var decimalRate = {\n        numerator: numerator.amount,\n        denominator: denominator.amount,\n        decimalScalar: invertedIsLarger ? smallerScalar : largerScalar,\n        decimalScalarInverted: invertedIsLarger ? largerScalar : smallerScalar\n    };\n    return keepAsDecimal\n        ? decimalRate\n        : {\n            rate: decimalRate.numerator.multipliedBy(decimalRate.decimalScalar).dividedBy(decimalRate.denominator),\n            rateInverted: decimalRate.denominator\n                .multipliedBy(decimalRate.decimalScalarInverted)\n                .dividedBy(decimalRate.numerator)\n        };\n}\nexports.calculateDecimalRate = calculateDecimalRate;\n//# sourceMappingURL=_utils.js.map"]},"metadata":{},"sourceType":"script"}