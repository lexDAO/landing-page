{"ast":null,"code":"var _jsxFileName = \"/Users/kerp/Documents/GitHub/landing-page/src/contexts/Transactions.js\";\nimport React, { createContext, useContext, useReducer, useMemo, useCallback, useEffect } from 'react';\nimport { useWeb3React } from '../hooks';\nimport { safeAccess } from '../utils';\nimport { useBlockNumber } from './Application';\nconst RESPONSE = 'response';\nconst CUSTOM_DATA = 'CUSTOM_DATA';\nconst BLOCK_NUMBER_CHECKED = 'BLOCK_NUMBER_CHECKED';\nconst RECEIPT = 'receipt';\nconst ADD = 'ADD';\nconst CHECK = 'CHECK';\nconst FINALIZE = 'FINALIZE';\nconst TransactionsContext = createContext();\nexport function useTransactionsContext() {\n  return useContext(TransactionsContext);\n}\n\nfunction reducer(state, {\n  type,\n  payload\n}) {\n  switch (type) {\n    case ADD:\n      {\n        const {\n          networkId,\n          hash,\n          response\n        } = payload;\n\n        if (safeAccess(state, [networkId, hash]) !== null) {\n          throw Error('Attempted to add existing transaction.');\n        }\n\n        return { ...state,\n          [networkId]: { ...(safeAccess(state, [networkId]) || {}),\n            [hash]: {\n              [RESPONSE]: response\n            }\n          }\n        };\n      }\n\n    case CHECK:\n      {\n        const {\n          networkId,\n          hash,\n          blockNumber\n        } = payload;\n\n        if (safeAccess(state, [networkId, hash]) === null) {\n          throw Error('Attempted to check non-existent transaction.');\n        }\n\n        return { ...state,\n          [networkId]: { ...(safeAccess(state, [networkId]) || {}),\n            [hash]: { ...(safeAccess(state, [networkId, hash]) || {}),\n              [BLOCK_NUMBER_CHECKED]: blockNumber\n            }\n          }\n        };\n      }\n\n    case FINALIZE:\n      {\n        const {\n          networkId,\n          hash,\n          receipt\n        } = payload;\n\n        if (safeAccess(state, [networkId, hash]) === null) {\n          throw Error('Attempted to finalize non-existent transaction.');\n        }\n\n        return { ...state,\n          [networkId]: { ...(safeAccess(state, [networkId]) || {}),\n            [hash]: { ...(safeAccess(state, [networkId, hash]) || {}),\n              [RECEIPT]: receipt\n            }\n          }\n        };\n      }\n\n    default:\n      {\n        throw Error(`Unexpected action type in TransactionsContext reducer: '${type}'.`);\n      }\n  }\n}\n\nexport default function Provider({\n  children\n}) {\n  const [state, dispatch] = useReducer(reducer, {});\n  const add = useCallback((networkId, hash, response) => {\n    dispatch({\n      type: ADD,\n      payload: {\n        networkId,\n        hash,\n        response\n      }\n    });\n  }, []);\n  const check = useCallback((networkId, hash, blockNumber) => {\n    dispatch({\n      type: CHECK,\n      payload: {\n        networkId,\n        hash,\n        blockNumber\n      }\n    });\n  }, []);\n  const finalize = useCallback((networkId, hash, receipt) => {\n    dispatch({\n      type: FINALIZE,\n      payload: {\n        networkId,\n        hash,\n        receipt\n      }\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(TransactionsContext.Provider, {\n    value: useMemo(() => [state, {\n      add,\n      check,\n      finalize\n    }], [state, add, check, finalize]),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 5\n    }\n  }, children);\n}\nexport function Updater() {\n  const {\n    chainId,\n    library\n  } = useWeb3React();\n  const globalBlockNumber = useBlockNumber();\n  const [state, {\n    check,\n    finalize\n  }] = useTransactionsContext();\n  const allTransactions = safeAccess(state, [chainId]) || {};\n  useEffect(() => {\n    if ((chainId || chainId === 0) && library) {\n      let stale = false;\n      Object.keys(allTransactions).filter(hash => !allTransactions[hash][RECEIPT] && allTransactions[hash][BLOCK_NUMBER_CHECKED] !== globalBlockNumber).forEach(hash => {\n        library.getTransactionReceipt(hash).then(receipt => {\n          if (!stale) {\n            if (!receipt) {\n              check(chainId, hash, globalBlockNumber);\n            } else {\n              finalize(chainId, hash, receipt);\n            }\n          }\n        }).catch(() => {\n          check(chainId, hash, globalBlockNumber);\n        });\n      });\n      return () => {\n        stale = true;\n      };\n    }\n  }, [chainId, library, allTransactions, globalBlockNumber, check, finalize]);\n  return null;\n}\nexport function useTransactionAdder() {\n  const {\n    chainId\n  } = useWeb3React();\n  const [, {\n    add\n  }] = useTransactionsContext();\n  return useCallback((response, customData = {}) => {\n    if (!(chainId || chainId === 0)) {\n      throw Error(`Invalid networkId '${chainId}`);\n    }\n\n    const hash = safeAccess(response, ['hash']);\n\n    if (!hash) {\n      throw Error('No transaction hash found.');\n    }\n\n    add(chainId, hash, { ...response,\n      [CUSTOM_DATA]: customData\n    });\n  }, [chainId, add]);\n}\nexport function useAllTransactions() {\n  const {\n    chainId\n  } = useWeb3React();\n  const [state] = useTransactionsContext();\n  return safeAccess(state, [chainId]) || {};\n}\nexport function usePendingApproval(tokenAddress) {\n  const allTransactions = useAllTransactions();\n  return Object.keys(allTransactions).filter(hash => {\n    if (allTransactions[hash][RECEIPT]) {\n      return false;\n    } else if (!allTransactions[hash][RESPONSE]) {\n      return false;\n    } else if (allTransactions[hash][RESPONSE][CUSTOM_DATA].approval !== tokenAddress) {\n      return false;\n    } else {\n      return true;\n    }\n  }).length >= 1;\n}","map":{"version":3,"sources":["/Users/kerp/Documents/GitHub/landing-page/src/contexts/Transactions.js"],"names":["React","createContext","useContext","useReducer","useMemo","useCallback","useEffect","useWeb3React","safeAccess","useBlockNumber","RESPONSE","CUSTOM_DATA","BLOCK_NUMBER_CHECKED","RECEIPT","ADD","CHECK","FINALIZE","TransactionsContext","useTransactionsContext","reducer","state","type","payload","networkId","hash","response","Error","blockNumber","receipt","Provider","children","dispatch","add","check","finalize","Updater","chainId","library","globalBlockNumber","allTransactions","stale","Object","keys","filter","forEach","getTransactionReceipt","then","catch","useTransactionAdder","customData","useAllTransactions","usePendingApproval","tokenAddress","approval","length"],"mappings":"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","sourcesContent":["import React, { createContext, useContext, useReducer, useMemo, useCallback, useEffect } from 'react'\n\nimport { useWeb3React } from '../hooks'\nimport { safeAccess } from '../utils'\nimport { useBlockNumber } from './Application'\n\nconst RESPONSE = 'response'\nconst CUSTOM_DATA = 'CUSTOM_DATA'\nconst BLOCK_NUMBER_CHECKED = 'BLOCK_NUMBER_CHECKED'\nconst RECEIPT = 'receipt'\n\nconst ADD = 'ADD'\nconst CHECK = 'CHECK'\nconst FINALIZE = 'FINALIZE'\n\nconst TransactionsContext = createContext()\n\nexport function useTransactionsContext() {\n  return useContext(TransactionsContext)\n}\n\nfunction reducer(state, { type, payload }) {\n  switch (type) {\n    case ADD: {\n      const { networkId, hash, response } = payload\n\n      if (safeAccess(state, [networkId, hash]) !== null) {\n        throw Error('Attempted to add existing transaction.')\n      }\n\n      return {\n        ...state,\n        [networkId]: {\n          ...(safeAccess(state, [networkId]) || {}),\n          [hash]: {\n            [RESPONSE]: response\n          }\n        }\n      }\n    }\n    case CHECK: {\n      const { networkId, hash, blockNumber } = payload\n\n      if (safeAccess(state, [networkId, hash]) === null) {\n        throw Error('Attempted to check non-existent transaction.')\n      }\n\n      return {\n        ...state,\n        [networkId]: {\n          ...(safeAccess(state, [networkId]) || {}),\n          [hash]: {\n            ...(safeAccess(state, [networkId, hash]) || {}),\n            [BLOCK_NUMBER_CHECKED]: blockNumber\n          }\n        }\n      }\n    }\n    case FINALIZE: {\n      const { networkId, hash, receipt } = payload\n\n      if (safeAccess(state, [networkId, hash]) === null) {\n        throw Error('Attempted to finalize non-existent transaction.')\n      }\n\n      return {\n        ...state,\n        [networkId]: {\n          ...(safeAccess(state, [networkId]) || {}),\n          [hash]: {\n            ...(safeAccess(state, [networkId, hash]) || {}),\n            [RECEIPT]: receipt\n          }\n        }\n      }\n    }\n    default: {\n      throw Error(`Unexpected action type in TransactionsContext reducer: '${type}'.`)\n    }\n  }\n}\n\nexport default function Provider({ children }) {\n  const [state, dispatch] = useReducer(reducer, {})\n\n  const add = useCallback((networkId, hash, response) => {\n    dispatch({ type: ADD, payload: { networkId, hash, response } })\n  }, [])\n  const check = useCallback((networkId, hash, blockNumber) => {\n    dispatch({ type: CHECK, payload: { networkId, hash, blockNumber } })\n  }, [])\n  const finalize = useCallback((networkId, hash, receipt) => {\n    dispatch({ type: FINALIZE, payload: { networkId, hash, receipt } })\n  }, [])\n\n  return (\n    <TransactionsContext.Provider\n      value={useMemo(() => [state, { add, check, finalize }], [state, add, check, finalize])}\n    >\n      {children}\n    </TransactionsContext.Provider>\n  )\n}\n\nexport function Updater() {\n  const { chainId, library } = useWeb3React()\n\n  const globalBlockNumber = useBlockNumber()\n\n  const [state, { check, finalize }] = useTransactionsContext()\n  const allTransactions = safeAccess(state, [chainId]) || {}\n\n  useEffect(() => {\n    if ((chainId || chainId === 0) && library) {\n      let stale = false\n      Object.keys(allTransactions)\n        .filter(\n          hash => !allTransactions[hash][RECEIPT] && allTransactions[hash][BLOCK_NUMBER_CHECKED] !== globalBlockNumber\n        )\n        .forEach(hash => {\n          library\n            .getTransactionReceipt(hash)\n            .then(receipt => {\n              if (!stale) {\n                if (!receipt) {\n                  check(chainId, hash, globalBlockNumber)\n                } else {\n                  finalize(chainId, hash, receipt)\n                }\n              }\n            })\n            .catch(() => {\n              check(chainId, hash, globalBlockNumber)\n            })\n        })\n\n      return () => {\n        stale = true\n      }\n    }\n  }, [chainId, library, allTransactions, globalBlockNumber, check, finalize])\n\n  return null\n}\n\nexport function useTransactionAdder() {\n  const { chainId } = useWeb3React()\n\n  const [, { add }] = useTransactionsContext()\n\n  return useCallback(\n    (response, customData = {}) => {\n      if (!(chainId || chainId === 0)) {\n        throw Error(`Invalid networkId '${chainId}`)\n      }\n\n      const hash = safeAccess(response, ['hash'])\n\n      if (!hash) {\n        throw Error('No transaction hash found.')\n      }\n      add(chainId, hash, { ...response, [CUSTOM_DATA]: customData })\n    },\n    [chainId, add]\n  )\n}\n\nexport function useAllTransactions() {\n  const { chainId } = useWeb3React()\n\n  const [state] = useTransactionsContext()\n\n  return safeAccess(state, [chainId]) || {}\n}\n\nexport function usePendingApproval(tokenAddress) {\n  const allTransactions = useAllTransactions()\n\n  return (\n    Object.keys(allTransactions).filter(hash => {\n      if (allTransactions[hash][RECEIPT]) {\n        return false\n      } else if (!allTransactions[hash][RESPONSE]) {\n        return false\n      } else if (allTransactions[hash][RESPONSE][CUSTOM_DATA].approval !== tokenAddress) {\n        return false\n      } else {\n        return true\n      }\n    }).length >= 1\n  )\n}\n"]},"metadata":{},"sourceType":"module"}