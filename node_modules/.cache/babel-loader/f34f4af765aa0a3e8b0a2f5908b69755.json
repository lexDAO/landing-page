{"ast":null,"code":"var _jsxFileName = \"/Users/kerp/Documents/GitHub/landing-page/src/theme/index.js\";\nimport React, { useEffect } from 'react';\nimport { ThemeProvider as StyledComponentsThemeProvider, createGlobalStyle, css } from 'styled-components';\nimport { getQueryParam, checkSupportedTheme } from '../utils';\nimport { SUPPORTED_THEMES } from '../constants';\nimport { useDarkModeManager } from '../contexts/LocalStorage';\nexport * from './components';\nconst MEDIA_WIDTHS = {\n  upToSmall: 600,\n  upToMedium: 960,\n  upToLarge: 1280\n};\nconst mediaWidthTemplates = Object.keys(MEDIA_WIDTHS).reduce((accumulator, size) => {\n  accumulator[size] = (...args) => css`\n    @media (max-width: ${MEDIA_WIDTHS[size]}px) {\n      ${css(...args)}\n    }\n  `;\n\n  return accumulator;\n}, {});\nconst white = '#FFFFFF';\nconst black = '#000000';\nexport default function ThemeProvider({\n  children\n}) {\n  const [darkMode, toggleDarkMode] = useDarkModeManager();\n  const themeURL = checkSupportedTheme(getQueryParam(window.location, 'theme'));\n  const themeToRender = themeURL ? themeURL.toUpperCase() === SUPPORTED_THEMES.DARK ? true : themeURL.toUpperCase() === SUPPORTED_THEMES.LIGHT ? false : darkMode : darkMode;\n  useEffect(() => {\n    toggleDarkMode(themeToRender);\n  }, [toggleDarkMode, themeToRender]);\n  return /*#__PURE__*/React.createElement(StyledComponentsThemeProvider, {\n    theme: theme(themeToRender),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 10\n    }\n  }, children);\n}\n\nconst theme = darkMode => ({\n  white,\n  black,\n  textColor: darkMode ? white : '#010101',\n  greyText: darkMode ? white : '#6C7284',\n  // for setting css on <html>\n  backgroundColor: darkMode ? '#333639' : white,\n  backgroundGradient: 'linear-gradient(to right, rgb(20, 14, 56), rgb(25, 64, 137))',\n  modalBackground: darkMode ? 'rgba(0,0,0,0.6)' : 'rgba(0,0,0,0.5)',\n  inputBackground: darkMode ? '#202124' : white,\n  placeholderGray: darkMode ? '#5F5F5F' : '#E1E1E1',\n  shadowColor: darkMode ? '#000' : '#2F80ED',\n  // grays\n  concreteGray: darkMode ? '#292C2F' : '#FAFAFA',\n  mercuryGray: darkMode ? '#333333' : '#E1E1E1',\n  silverGray: darkMode ? '#737373' : '#C4C4C4',\n  chaliceGray: darkMode ? '#7B7B7B' : '#AEAEAE',\n  doveGray: darkMode ? '#C4C4C4' : '#737373',\n  mineshaftGray: darkMode ? '#E1E1E1' : '#2B2B2B',\n  activeGray: darkMode ? '#292C2F' : '#F7F8FA',\n  buttonOutlineGrey: darkMode ? '#FAFAFA' : '#F2F2F2',\n  tokenRowHover: darkMode ? '#404040' : '#F2F2F2',\n  //blacks\n  charcoalBlack: darkMode ? '#F2F2F2' : '#404040',\n  // blues\n  zumthorBlue: darkMode ? '#212529' : '#EBF4FF',\n  malibuBlue: darkMode ? '#E67AEF' : '#5CA2FF',\n  royalBlue: darkMode ? '#DC6BE5' : '#2F80ED',\n  loadingBlue: darkMode ? '#e4f0ff' : '#e4f0ff',\n  // purples\n  wisteriaPurple: '#DC6BE5',\n  // reds\n  salmonRed: '#FF6871',\n  // orange\n  pizazzOrange: '#FF8F05',\n  // yellows\n  warningYellow: '#FFE270',\n  // pink\n  uniswapPink: '#DC6BE5',\n  //green\n  connectedGreen: '#27AE60',\n  //branded\n  metaMaskOrange: '#E8831D',\n  //specific\n  textHover: darkMode ? theme.uniswapPink : theme.doveGray,\n  // connect button when loggedout\n  buttonFaded: darkMode ? '#DC6BE5' : '#737373',\n  // media queries\n  mediaWidth: mediaWidthTemplates,\n  // css snippets\n  flexColumnNoWrap: css`\n    display: flex;\n    flex-flow: column nowrap;\n  `,\n  flexRowNoWrap: css`\n    display: flex;\n    flex-flow: row nowrap;\n  `\n});\n\nexport const GlobalStyle = createGlobalStyle`\n  @import url('https://rsms.me/inter/inter.css');\n  html { font-family: Comfortaa,Roboto,'Helvetica Neue',Arial,sans-serif }\n  @supports (font-variation-settings: normal) {\n    html { font-family: Comfortaa, Roboto,'Helvetica Neue', Arial, sans-serif }\n  }\n  \n  html,\n  body {\n    margin: 0;\n    padding: 0;\n    width: 100%;\n    height: 100%;\n    overflow: hidden;    \n  }\n\n  body > div {\n    height: 100%;\n    overflow: auto;\n    -webkit-overflow-scrolling: touch;\n}\n\n  html {\n    font-size: 16px;\n    font-variant: none;\n    color: ${({\n  theme\n}) => theme.textColor};\n    background-color: ${({\n  theme\n}) => theme.backgroundColor};\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n    -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\n  }\n`;","map":{"version":3,"sources":["/Users/kerp/Documents/GitHub/landing-page/src/theme/index.js"],"names":["React","useEffect","ThemeProvider","StyledComponentsThemeProvider","createGlobalStyle","css","getQueryParam","checkSupportedTheme","SUPPORTED_THEMES","useDarkModeManager","MEDIA_WIDTHS","upToSmall","upToMedium","upToLarge","mediaWidthTemplates","Object","keys","reduce","accumulator","size","args","white","black","children","darkMode","toggleDarkMode","themeURL","window","location","themeToRender","toUpperCase","DARK","LIGHT","theme","textColor","greyText","backgroundColor","backgroundGradient","modalBackground","inputBackground","placeholderGray","shadowColor","concreteGray","mercuryGray","silverGray","chaliceGray","doveGray","mineshaftGray","activeGray","buttonOutlineGrey","tokenRowHover","charcoalBlack","zumthorBlue","malibuBlue","royalBlue","loadingBlue","wisteriaPurple","salmonRed","pizazzOrange","warningYellow","uniswapPink","connectedGreen","metaMaskOrange","textHover","buttonFaded","mediaWidth","flexColumnNoWrap","flexRowNoWrap","GlobalStyle"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react'\nimport { ThemeProvider as StyledComponentsThemeProvider, createGlobalStyle, css } from 'styled-components'\nimport { getQueryParam, checkSupportedTheme } from '../utils'\nimport { SUPPORTED_THEMES } from '../constants'\nimport { useDarkModeManager } from '../contexts/LocalStorage'\n\nexport * from './components'\n\nconst MEDIA_WIDTHS = {\n  upToSmall: 600,\n  upToMedium: 960,\n  upToLarge: 1280\n}\n\nconst mediaWidthTemplates = Object.keys(MEDIA_WIDTHS).reduce((accumulator, size) => {\n  accumulator[size] = (...args) => css`\n    @media (max-width: ${MEDIA_WIDTHS[size]}px) {\n      ${css(...args)}\n    }\n  `\n  return accumulator\n}, {})\n\nconst white = '#FFFFFF'\nconst black = '#000000'\n\nexport default function ThemeProvider({ children }) {\n  const [darkMode, toggleDarkMode] = useDarkModeManager()\n  const themeURL = checkSupportedTheme(getQueryParam(window.location, 'theme'))\n  const themeToRender = themeURL\n    ? themeURL.toUpperCase() === SUPPORTED_THEMES.DARK\n      ? true\n      : themeURL.toUpperCase() === SUPPORTED_THEMES.LIGHT\n      ? false\n      : darkMode\n    : darkMode\n  useEffect(() => {\n    toggleDarkMode(themeToRender)\n  }, [toggleDarkMode, themeToRender])\n  return <StyledComponentsThemeProvider theme={theme(themeToRender)}>{children}</StyledComponentsThemeProvider>\n}\n\nconst theme = darkMode => ({\n  white,\n  black,\n  textColor: darkMode ? white : '#010101',\n  greyText: darkMode ? white : '#6C7284',\n\n  // for setting css on <html>\n  backgroundColor: darkMode ? '#333639' : white,\n  backgroundGradient: 'linear-gradient(to right, rgb(20, 14, 56), rgb(25, 64, 137))',\n\n  modalBackground: darkMode ? 'rgba(0,0,0,0.6)' : 'rgba(0,0,0,0.5)',\n  inputBackground: darkMode ? '#202124' : white,\n  placeholderGray: darkMode ? '#5F5F5F' : '#E1E1E1',\n  shadowColor: darkMode ? '#000' : '#2F80ED',\n\n  // grays\n  concreteGray: darkMode ? '#292C2F' : '#FAFAFA',\n  mercuryGray: darkMode ? '#333333' : '#E1E1E1',\n  silverGray: darkMode ? '#737373' : '#C4C4C4',\n  chaliceGray: darkMode ? '#7B7B7B' : '#AEAEAE',\n  doveGray: darkMode ? '#C4C4C4' : '#737373',\n  mineshaftGray: darkMode ? '#E1E1E1' : '#2B2B2B',\n  activeGray: darkMode ? '#292C2F' : '#F7F8FA',\n  buttonOutlineGrey: darkMode ? '#FAFAFA' : '#F2F2F2',\n  tokenRowHover: darkMode ? '#404040' : '#F2F2F2',\n\n  //blacks\n  charcoalBlack: darkMode ? '#F2F2F2' : '#404040',\n  // blues\n  zumthorBlue: darkMode ? '#212529' : '#EBF4FF',\n  malibuBlue: darkMode ? '#E67AEF' : '#5CA2FF',\n  royalBlue: darkMode ? '#DC6BE5' : '#2F80ED',\n  loadingBlue: darkMode ? '#e4f0ff' : '#e4f0ff',\n\n  // purples\n  wisteriaPurple: '#DC6BE5',\n  // reds\n  salmonRed: '#FF6871',\n  // orange\n  pizazzOrange: '#FF8F05',\n  // yellows\n  warningYellow: '#FFE270',\n  // pink\n  uniswapPink: '#DC6BE5',\n  //green\n  connectedGreen: '#27AE60',\n\n  //branded\n  metaMaskOrange: '#E8831D',\n\n  //specific\n  textHover: darkMode ? theme.uniswapPink : theme.doveGray,\n\n  // connect button when loggedout\n  buttonFaded: darkMode ? '#DC6BE5' : '#737373',\n\n  // media queries\n  mediaWidth: mediaWidthTemplates,\n  // css snippets\n  flexColumnNoWrap: css`\n    display: flex;\n    flex-flow: column nowrap;\n  `,\n  flexRowNoWrap: css`\n    display: flex;\n    flex-flow: row nowrap;\n  `\n})\n\nexport const GlobalStyle = createGlobalStyle`\n  @import url('https://rsms.me/inter/inter.css');\n  html { font-family: Comfortaa,Roboto,'Helvetica Neue',Arial,sans-serif }\n  @supports (font-variation-settings: normal) {\n    html { font-family: Comfortaa, Roboto,'Helvetica Neue', Arial, sans-serif }\n  }\n  \n  html,\n  body {\n    margin: 0;\n    padding: 0;\n    width: 100%;\n    height: 100%;\n    overflow: hidden;    \n  }\n\n  body > div {\n    height: 100%;\n    overflow: auto;\n    -webkit-overflow-scrolling: touch;\n}\n\n  html {\n    font-size: 16px;\n    font-variant: none;\n    color: ${({ theme }) => theme.textColor};\n    background-color: ${({ theme }) => theme.backgroundColor};\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n    -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\n  }\n`\n"]},"metadata":{},"sourceType":"module"}