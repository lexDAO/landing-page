{"ast":null,"code":"var _jsxFileName = \"/Users/kerp/Documents/GitHub/landing-page/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport ReactGA from 'react-ga';\nimport { Web3ReactProvider, createWeb3ReactRoot } from '@web3-react/core';\nimport { ethers } from 'ethers';\nimport { NetworkContextName } from './constants';\nimport { isMobile } from 'react-device-detect';\nimport LocalStorageContextProvider, { Updater as LocalStorageContextUpdater } from './contexts/LocalStorage';\nimport ApplicationContextProvider, { Updater as ApplicationContextUpdater } from './contexts/Application';\nimport TransactionContextProvider, { Updater as TransactionContextUpdater } from './contexts/Transactions';\nimport BalancesContextProvider, { Updater as BalancesContextUpdater } from './contexts/Balances';\nimport TokensContextProvider from './contexts/Tokens';\nimport AllowancesContextProvider from './contexts/Allowances';\nimport App from './pages/App';\nimport ThemeProvider, { GlobalStyle } from './theme';\nimport './i18n';\nconst Web3ProviderNetwork = createWeb3ReactRoot(NetworkContextName);\n\nfunction getLibrary(provider) {\n  const library = new ethers.providers.Web3Provider(provider);\n  library.pollingInterval = 10000;\n  return library;\n}\n\nif (process.env.NODE_ENV === 'production') {\n  ReactGA.initialize('');\n  ReactGA.set({\n    customBrowserType: !isMobile ? 'desktop' : window.web3 || window.ethereum ? 'mobileWeb3' : 'mobileRegular'\n  });\n} else {\n  ReactGA.initialize('test', {\n    testMode: true\n  });\n}\n\nReactGA.pageview(window.location.pathname + window.location.search);\n\nfunction ContextProviders({\n  children\n}) {\n  return /*#__PURE__*/React.createElement(LocalStorageContextProvider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ApplicationContextProvider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TransactionContextProvider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TokensContextProvider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(BalancesContextProvider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(AllowancesContextProvider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 15\n    }\n  }, children))))));\n}\n\nfunction Updaters() {\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(LocalStorageContextUpdater, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(ApplicationContextUpdater, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(TransactionContextUpdater, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(BalancesContextUpdater, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }));\n}\n\nReactDOM.render( /*#__PURE__*/React.createElement(Web3ReactProvider, {\n  getLibrary: getLibrary,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(Web3ProviderNetwork, {\n  getLibrary: getLibrary,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(ContextProviders, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 7\n  }\n}, /*#__PURE__*/React.createElement(Updaters, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }\n}), /*#__PURE__*/React.createElement(ThemeProvider, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 9\n  }\n}, /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(GlobalStyle, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 13\n  }\n}), /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 13\n  }\n})))))), document.getElementById('root'));","map":{"version":3,"sources":["/Users/kerp/Documents/GitHub/landing-page/src/index.js"],"names":["React","ReactDOM","ReactGA","Web3ReactProvider","createWeb3ReactRoot","ethers","NetworkContextName","isMobile","LocalStorageContextProvider","Updater","LocalStorageContextUpdater","ApplicationContextProvider","ApplicationContextUpdater","TransactionContextProvider","TransactionContextUpdater","BalancesContextProvider","BalancesContextUpdater","TokensContextProvider","AllowancesContextProvider","App","ThemeProvider","GlobalStyle","Web3ProviderNetwork","getLibrary","provider","library","providers","Web3Provider","pollingInterval","process","env","NODE_ENV","initialize","set","customBrowserType","window","web3","ethereum","testMode","pageview","location","pathname","search","ContextProviders","children","Updaters","render","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react'\nimport ReactDOM from 'react-dom'\nimport ReactGA from 'react-ga'\nimport { Web3ReactProvider, createWeb3ReactRoot } from '@web3-react/core'\nimport { ethers } from 'ethers'\n\nimport { NetworkContextName } from './constants'\nimport { isMobile } from 'react-device-detect'\nimport LocalStorageContextProvider, { Updater as LocalStorageContextUpdater } from './contexts/LocalStorage'\nimport ApplicationContextProvider, { Updater as ApplicationContextUpdater } from './contexts/Application'\nimport TransactionContextProvider, { Updater as TransactionContextUpdater } from './contexts/Transactions'\nimport BalancesContextProvider, { Updater as BalancesContextUpdater } from './contexts/Balances'\nimport TokensContextProvider from './contexts/Tokens'\nimport AllowancesContextProvider from './contexts/Allowances'\nimport App from './pages/App'\nimport ThemeProvider, { GlobalStyle } from './theme'\nimport './i18n'\n\nconst Web3ProviderNetwork = createWeb3ReactRoot(NetworkContextName)\n\nfunction getLibrary(provider) {\n  const library = new ethers.providers.Web3Provider(provider)\n  library.pollingInterval = 10000\n  return library\n}\n\nif (process.env.NODE_ENV === 'production') {\n  ReactGA.initialize('')\n  ReactGA.set({\n    customBrowserType: !isMobile ? 'desktop' : window.web3 || window.ethereum ? 'mobileWeb3' : 'mobileRegular'\n  })\n} else {\n  ReactGA.initialize('test', { testMode: true })\n}\n\nReactGA.pageview(window.location.pathname + window.location.search)\n\nfunction ContextProviders({ children }) {\n  return (\n    <LocalStorageContextProvider>\n      <ApplicationContextProvider>\n        <TransactionContextProvider>\n          <TokensContextProvider>\n            <BalancesContextProvider>\n              <AllowancesContextProvider>{children}</AllowancesContextProvider>\n            </BalancesContextProvider>\n          </TokensContextProvider>\n        </TransactionContextProvider>\n      </ApplicationContextProvider>\n    </LocalStorageContextProvider>\n  )\n}\n\nfunction Updaters() {\n  return (\n    <>\n      <LocalStorageContextUpdater />\n      <ApplicationContextUpdater />\n      <TransactionContextUpdater />\n      <BalancesContextUpdater />\n    </>\n  )\n}\n\nReactDOM.render(\n  <Web3ReactProvider getLibrary={getLibrary}>\n    <Web3ProviderNetwork getLibrary={getLibrary}>\n      <ContextProviders>\n        <Updaters />\n        <ThemeProvider>\n          <>\n            <GlobalStyle />\n            <App />\n          </>\n        </ThemeProvider>\n      </ContextProviders>\n    </Web3ProviderNetwork>\n  </Web3ReactProvider>,\n  document.getElementById('root')\n)\n"]},"metadata":{},"sourceType":"module"}