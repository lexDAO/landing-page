{"ast":null,"code":"var _jsxFileName = \"/Users/kerp/Documents/GitHub/landing-page/src/components/AccountDetails/Transaction.js\";\nimport React from 'react';\nimport styled, { keyframes } from 'styled-components';\nimport { Check } from 'react-feather';\nimport { useWeb3React } from '../../hooks';\nimport { getEtherscanLink } from '../../utils';\nimport { Link, Spinner } from '../../theme';\nimport Copy from './Copy';\nimport Circle from \"../../assets/images/circle.svg\";\nimport { transparentize } from 'polished';\nconst TransactionStatusWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  min-width: 12px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n`;\nconst TransactionWrapper = styled.div`\n  ${({\n  theme\n}) => theme.flexRowNoWrap}\n  justify-content: space-between;\n  width: 100%;\n  margin-top: 0.75rem;\n  a {\n    /* flex: 1 1 auto; */\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n    min-width: 0;\n    max-width: 250px;\n  }\n`;\nconst TransactionStatusText = styled.span`\n  margin-left: 0.5rem;\n`;\nconst rotate = keyframes`\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n`;\nconst TransactionState = styled.div`\n  display: flex;\n  background-color: ${({\n  pending,\n  theme\n}) => pending ? transparentize(0.95, theme.royalBlue) : transparentize(0.95, theme.connectedGreen)};\n  border-radius: 1.5rem;\n  padding: 0.5rem 0.75rem;\n  font-weight: 500;\n  font-size: 0.75rem;\n  border: 1px solid;\n  border-color: ${({\n  pending,\n  theme\n}) => pending ? transparentize(0.75, theme.royalBlue) : transparentize(0.75, theme.connectedGreen)};\n\n  #pending {\n    animation: 2s ${rotate} linear infinite;\n  }\n\n  :hover {\n    border-color: ${({\n  pending,\n  theme\n}) => pending ? transparentize(0, theme.royalBlue) : transparentize(0, theme.connectedGreen)};\n  }\n`;\nconst ButtonWrapper = styled.div`\n  a {\n    color: ${({\n  pending,\n  theme\n}) => pending ? theme.royalBlue : theme.connectedGreen};\n  }\n`;\nexport default function Transaction({\n  hash,\n  pending\n}) {\n  const {\n    chainId\n  } = useWeb3React();\n  return /*#__PURE__*/React.createElement(TransactionWrapper, {\n    key: hash,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(TransactionStatusWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    href: getEtherscanLink(chainId, hash, 'transaction'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }, hash, \" \\u2197 \"), /*#__PURE__*/React.createElement(Copy, {\n    toCopy: hash,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  })), pending ? /*#__PURE__*/React.createElement(ButtonWrapper, {\n    pending: pending,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    href: getEtherscanLink(chainId, hash, 'transaction'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TransactionState, {\n    pending: pending,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Spinner, {\n    src: Circle,\n    id: \"pending\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(TransactionStatusText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 15\n    }\n  }, \"Pending\")))) : /*#__PURE__*/React.createElement(ButtonWrapper, {\n    pending: pending,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    href: getEtherscanLink(chainId, hash, 'transaction'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TransactionState, {\n    pending: pending,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Check, {\n    size: \"16\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(TransactionStatusText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 15\n    }\n  }, \"Confirmed\")))));\n}","map":{"version":3,"sources":["/Users/kerp/Documents/GitHub/landing-page/src/components/AccountDetails/Transaction.js"],"names":["React","styled","keyframes","Check","useWeb3React","getEtherscanLink","Link","Spinner","Copy","transparentize","TransactionStatusWrapper","div","TransactionWrapper","theme","flexRowNoWrap","TransactionStatusText","span","rotate","TransactionState","pending","royalBlue","connectedGreen","ButtonWrapper","Transaction","hash","chainId","Circle"],"mappings":"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","sourcesContent":["import React from 'react'\nimport styled, { keyframes } from 'styled-components'\nimport { Check } from 'react-feather'\n\nimport { useWeb3React } from '../../hooks'\nimport { getEtherscanLink } from '../../utils'\nimport { Link, Spinner } from '../../theme'\nimport Copy from './Copy'\nimport Circle from '../../assets/images/circle.svg'\n\nimport { transparentize } from 'polished'\n\nconst TransactionStatusWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  min-width: 12px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n`\n\nconst TransactionWrapper = styled.div`\n  ${({ theme }) => theme.flexRowNoWrap}\n  justify-content: space-between;\n  width: 100%;\n  margin-top: 0.75rem;\n  a {\n    /* flex: 1 1 auto; */\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n    min-width: 0;\n    max-width: 250px;\n  }\n`\n\nconst TransactionStatusText = styled.span`\n  margin-left: 0.5rem;\n`\n\nconst rotate = keyframes`\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n`\n\nconst TransactionState = styled.div`\n  display: flex;\n  background-color: ${({ pending, theme }) =>\n    pending ? transparentize(0.95, theme.royalBlue) : transparentize(0.95, theme.connectedGreen)};\n  border-radius: 1.5rem;\n  padding: 0.5rem 0.75rem;\n  font-weight: 500;\n  font-size: 0.75rem;\n  border: 1px solid;\n  border-color: ${({ pending, theme }) =>\n    pending ? transparentize(0.75, theme.royalBlue) : transparentize(0.75, theme.connectedGreen)};\n\n  #pending {\n    animation: 2s ${rotate} linear infinite;\n  }\n\n  :hover {\n    border-color: ${({ pending, theme }) =>\n      pending ? transparentize(0, theme.royalBlue) : transparentize(0, theme.connectedGreen)};\n  }\n`\nconst ButtonWrapper = styled.div`\n  a {\n    color: ${({ pending, theme }) => (pending ? theme.royalBlue : theme.connectedGreen)};\n  }\n`\n\nexport default function Transaction({ hash, pending }) {\n  const { chainId } = useWeb3React()\n\n  return (\n    <TransactionWrapper key={hash}>\n      <TransactionStatusWrapper>\n        <Link href={getEtherscanLink(chainId, hash, 'transaction')}>{hash} ↗ </Link>\n        <Copy toCopy={hash} />\n      </TransactionStatusWrapper>\n      {pending ? (\n        <ButtonWrapper pending={pending}>\n          <Link href={getEtherscanLink(chainId, hash, 'transaction')}>\n            <TransactionState pending={pending}>\n              <Spinner src={Circle} id=\"pending\" />\n              <TransactionStatusText>Pending</TransactionStatusText>\n            </TransactionState>\n          </Link>\n        </ButtonWrapper>\n      ) : (\n        <ButtonWrapper pending={pending}>\n          <Link href={getEtherscanLink(chainId, hash, 'transaction')}>\n            <TransactionState pending={pending}>\n              <Check size=\"16\" />\n              <TransactionStatusText>Confirmed</TransactionStatusText>\n            </TransactionState>\n          </Link>\n        </ButtonWrapper>\n      )}\n    </TransactionWrapper>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}