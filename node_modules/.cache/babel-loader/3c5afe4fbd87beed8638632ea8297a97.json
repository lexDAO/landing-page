{"ast":null,"code":"import _classCallCheck from\"/Users/kerp/Documents/GitHub/landing-page/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/kerp/Documents/GitHub/landing-page/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/kerp/Documents/GitHub/landing-page/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/kerp/Documents/GitHub/landing-page/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import{NetworkConnector as NetworkConnectorCore}from'@web3-react/network-connector';export var NetworkConnector=/*#__PURE__*/function(_NetworkConnectorCore){_inherits(NetworkConnector,_NetworkConnectorCore);var _super=_createSuper(NetworkConnector);function NetworkConnector(){_classCallCheck(this,NetworkConnector);return _super.apply(this,arguments);}_createClass(NetworkConnector,[{key:\"pause\",value:function pause(){if(this.active){this.providers[this.currentChainId].stop();}}},{key:\"resume\",value:function resume(){if(this.active){this.providers[this.currentChainId].start();}}}]);return NetworkConnector;}(NetworkConnectorCore);","map":{"version":3,"sources":["/Users/kerp/Documents/GitHub/landing-page/src/connectors/Network.js"],"names":["NetworkConnector","NetworkConnectorCore","active","providers","currentChainId","stop","start"],"mappings":"gnBAAA,OAASA,gBAAgB,GAAIC,CAAAA,oBAA7B,KAAyD,+BAAzD,CAEA,UAAaD,CAAAA,gBAAb,oTACU,CACN,GAAI,KAAKE,MAAT,CAAiB,CACf,KAAKC,SAAL,CAAe,KAAKC,cAApB,EAAoCC,IAApC,GACD,CACF,CALH,uCAOW,CACP,GAAI,KAAKH,MAAT,CAAiB,CACf,KAAKC,SAAL,CAAe,KAAKC,cAApB,EAAoCE,KAApC,GACD,CACF,CAXH,8BAAsCL,oBAAtC","sourcesContent":["import { NetworkConnector as NetworkConnectorCore } from '@web3-react/network-connector'\n\nexport class NetworkConnector extends NetworkConnectorCore {\n  pause() {\n    if (this.active) {\n      this.providers[this.currentChainId].stop()\n    }\n  }\n\n  resume() {\n    if (this.active) {\n      this.providers[this.currentChainId].start()\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}