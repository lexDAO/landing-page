{"ast":null,"code":"var _jsxFileName = \"/Users/kerp/Documents/GitHub/landing-page/src/components/PersonalToken/index.jsx\";\nimport React, { useState } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { useFactoryContract, useWeb3React } from \"../../hooks\";\nimport Web3Status from \"../Web3Status\";\nimport { utils } from \"ethers\";\nimport { Link } from \"../../theme\";\nimport { Bold } from \"react-feather\";\nconst tokenFormItems = [{\n  name: \"tokenName\",\n  type: \"text\",\n  placeholder: \"Personal Token Name\"\n}, {\n  name: \"symbol\",\n  type: \"text\",\n  placeholder: \"What are your Initials? (Token Symbol)\"\n}, {\n  name: \"tos\",\n  type: \"text\",\n  placeholder: \"Terms of Service Link (Optional)\"\n}, {\n  name: \"email\",\n  type: \"email\",\n  placeholder: \"Email (Optional)\"\n}];\nconst Wrapper = styled.div`\n  display: grid;\n  grid-template-areas: \"header header\"\\n\"description form\";\n  grid-template-rows: 20% auto;\n  grid-template-columns: 45% 55%;\n`;\nconst Logo = styled.div`\n  display: grid;\n  grid-template-areas: \"header header\"\\n\"description form\";\n  grid-template-rows: 20% auto;\n  grid-template-columns: 100%;\n`;\nconst Description = styled.div`\n  grid-area: description;\n  width: 80%;\n  margin: auto;\n  line-height: 1.7rem;\n  padding-left: 20%;\n\n  & > p {\n    font-size: 0.938rem;\n\n    & > a {\n      color: ${({\n  theme\n}) => theme.uniswapPink};\n      text-decoration: none;\n\n      :hover {\n        text-decoration: underline;\n      }\n    }\n  }\n`;\nconst TokenForm = styled.div`\n  grid-area: form;\n  width: 80%;\n  margin: auto;\n  margin-top:0;\n  \n  & > form {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n\n    & > input {\n      width: 80%;\n      line-height: 1.5rem;\n      margin-bottom: 3.5rem;\n      border-radius: .25rem;\n      border: 1px solid #000000;\n      color: #3F3F3F;\n      font-size: 0.875rem;\n      padding: 1rem 0.5rem;\n    }\n  }\n`;\nconst Button = styled.a`\n  display: block;\n  max-width: 80px;\n  padding: 1rem 3rem;\n  background-image: linear-gradient(40deg, #28BCFD 20%, #1D78FF 51%, #28BCFD 90%);\n  border-radius: 5px;\n  text-align: center;\n\n  :hover {\n    cursor: pointer;\n  }\n`;\n\nfunction PersonalToken({\n  history\n}) {\n  const [tokenForm, setTokenForm] = useState({\n    \"name\": \"\",\n    \"symbol\": \"\",\n    \"stamp\": \"test\",\n    \"decimals\": 6,\n    \"initialSupply\": utils.parseEther(\"240000\"),\n    \"cap\": utils.parseEther(\"2400000\")\n  });\n  const {\n    account\n  } = useWeb3React();\n  const factory = useFactoryContract();\n\n  const handleChange = event => {\n    setTokenForm({ ...tokenForm,\n      [event.target.id]: event.target.value\n    });\n  };\n\n  const handleSubmit = event => {\n    // alert('A name was submitted: ' + newBadge.name);\n    event.preventDefault();\n    onCreateToken(tokenForm);\n  };\n\n  async function onCreateToken(token) {\n    console.log(token);\n    console.log(account);\n    let result = await factory.newLexToken(token.name, //  new token name\n    token.symbol, //  new token symbol\n    token.stamp, //  new token stamp?\n    token.decimals, //  [constant] new token decimals \n    token.cap, //  [constant] new token maximum supply cap\n    token.initialSupply, //  [constant] new token initial supply\n    account, //  new token owner\n    true, //  [constant] new token governed by LexDAO\n    {\n      value: utils.parseEther(\"0.0009\") //  lexdao tribute\n\n    });\n    console.log(result);\n    return result;\n  }\n\n  return /*#__PURE__*/React.createElement(Wrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Logo, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      gridArea: 'header',\n      textAlign: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 9\n    }\n  }, \"Personal Token Factory\"), /*#__PURE__*/React.createElement(\"sub\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 9\n    }\n  }, \"LexDAO built. Legal engineer approved.\")), /*#__PURE__*/React.createElement(Description, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 9\n    }\n  }, \"Why use \\\"LexDAO Certified\\\" personal tokens?\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 9\n    }\n  }, \"For one, these are the tokens we use, and we're a bunch of lawyers. We've built in stuff like dispute resolution, a Terms of Service, and some standardized values. \"), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 9\n    }\n  }, \"Standardized Values:\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 9\n    }\n  }, \"1 Token = 1 Minute of Your Time\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 42\n    }\n  }), \"Initial Offering: 60,000 Tokens (1,000 Hrs)\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 54\n    }\n  }), \"Total Cap: 240,000 Tokens (4,000 Hrs) \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 49\n    }\n  }), \"Decimal places: 6 \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 29\n    }\n  }), \"LexDAO Fee: .0009 ETH\"), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 9\n    }\n  }, \"What about disputes?\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 9\n    }\n  }, \"Having trouble with a personal token transaction? LexDAO has your back with dispute resolution built in.\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 12\n    }\n  }, \"Need to start a dispute?\"), \"\\xA0\", /*#__PURE__*/React.createElement(Link, {\n    onClick: () => history.push('/personal-token-dispute'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 11\n    }\n  }, \"Click Here\")), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 9\n    }\n  }, \"Some legal stuff:\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    onClick: () => history.push('/why-email'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 11\n    }\n  }, \"Learn why you might want to attach your email.\")), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 9\n    }\n  }, \"If you do not provide your own your Terms of Service link, your token will be governed by\\xA0\", /*#__PURE__*/React.createElement(Link, {\n    onClick: () => history.push('/personal-token-dispute'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 11\n    }\n  }, \"LexDAO Default Personal Token TOS\")), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 9\n    }\n  }, \"By clicking \\\"Mint\\\" you agreed to the\\xA0\", /*#__PURE__*/React.createElement(Link, {\n    onClick: () => history.push('/personal-token-dispute'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 11\n    }\n  }, \"LexDAO Terms of Service\"), \".\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 9\n    }\n  }, \"Transaction fee will include a .0009 tribute to LexDAO.\")), /*#__PURE__*/React.createElement(TokenForm, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 11\n    }\n  }, \"Step 1: Connect a Web3 Wallet\"), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      maxWidth: '200px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Web3Status, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 11\n    }\n  }, \"Step 2: Complete the following form\")), /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 9\n    }\n  }, tokenFormItems.map(item => {\n    return /*#__PURE__*/React.createElement(\"input\", {\n      key: item.name,\n      id: item.name,\n      type: item.type,\n      placeholder: item.placeholder,\n      onChange: handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 15\n      }\n    });\n  })), /*#__PURE__*/React.createElement(Button, {\n    onClick: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 9\n    }\n  }, \"Mint\")));\n}\n\nexport default withRouter(PersonalToken);","map":{"version":3,"sources":["/Users/kerp/Documents/GitHub/landing-page/src/components/PersonalToken/index.jsx"],"names":["React","useState","withRouter","styled","useFactoryContract","useWeb3React","Web3Status","utils","Link","Bold","tokenFormItems","name","type","placeholder","Wrapper","div","Logo","Description","theme","uniswapPink","TokenForm","Button","a","PersonalToken","history","tokenForm","setTokenForm","parseEther","account","factory","handleChange","event","target","id","value","handleSubmit","preventDefault","onCreateToken","token","console","log","result","newLexToken","symbol","stamp","decimals","cap","initialSupply","gridArea","textAlign","push","maxWidth","map","item"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\"\nimport { withRouter } from \"react-router-dom\"\nimport styled from \"styled-components\"\nimport { useFactoryContract, useWeb3React } from \"../../hooks\"\nimport Web3Status from \"../Web3Status\"\nimport { utils } from \"ethers\"\n\nimport { Link } from \"../../theme\"\nimport { Bold } from \"react-feather\"\n\nconst tokenFormItems = [\n  {\n    name:\"tokenName\",\n    type: \"text\",\n    placeholder:\"Personal Token Name\",\n  },\n  {\n    name: \"symbol\",\n    type: \"text\",\n    placeholder: \"What are your Initials? (Token Symbol)\",\n  },\n  {\n    name: \"tos\", \n    type: \"text\",\n    placeholder: \"Terms of Service Link (Optional)\" \n  },\n  {\n    name: \"email\",\n    type: \"email\",\n    placeholder: \"Email (Optional)\"\n  }\n]\n\nconst Wrapper = styled.div`\n  display: grid;\n  grid-template-areas: \"header header\"\\n\"description form\";\n  grid-template-rows: 20% auto;\n  grid-template-columns: 45% 55%;\n`\n\nconst Logo = styled.div`\n  display: grid;\n  grid-template-areas: \"header header\"\\n\"description form\";\n  grid-template-rows: 20% auto;\n  grid-template-columns: 100%;\n`\n\nconst Description = styled.div`\n  grid-area: description;\n  width: 80%;\n  margin: auto;\n  line-height: 1.7rem;\n  padding-left: 20%;\n\n  & > p {\n    font-size: 0.938rem;\n\n    & > a {\n      color: ${({ theme }) => theme.uniswapPink};\n      text-decoration: none;\n\n      :hover {\n        text-decoration: underline;\n      }\n    }\n  }\n`\n\nconst TokenForm = styled.div`\n  grid-area: form;\n  width: 80%;\n  margin: auto;\n  margin-top:0;\n  \n  & > form {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n\n    & > input {\n      width: 80%;\n      line-height: 1.5rem;\n      margin-bottom: 3.5rem;\n      border-radius: .25rem;\n      border: 1px solid #000000;\n      color: #3F3F3F;\n      font-size: 0.875rem;\n      padding: 1rem 0.5rem;\n    }\n  }\n`\n\nconst Button = styled.a`\n  display: block;\n  max-width: 80px;\n  padding: 1rem 3rem;\n  background-image: linear-gradient(40deg, #28BCFD 20%, #1D78FF 51%, #28BCFD 90%);\n  border-radius: 5px;\n  text-align: center;\n\n  :hover {\n    cursor: pointer;\n  }\n`\n\nfunction PersonalToken({ history }) {\n  const [tokenForm, setTokenForm] = useState({\n    \"name\": \"\",\n    \"symbol\": \"\",\n    \"stamp\": \"test\",\n    \"decimals\": 6,\n    \"initialSupply\": utils.parseEther(\"240000\"),\n    \"cap\": utils.parseEther(\"2400000\")\n  })\n\n  const { account } = useWeb3React()\n\n  const factory = useFactoryContract();\n\n  const handleChange = (event) => {\n    setTokenForm({\n      ...tokenForm,\n      [event.target.id]: event.target.value\n    });\n  }\n\n  const handleSubmit = (event) => {\n    // alert('A name was submitted: ' + newBadge.name);\n    event.preventDefault();\n    onCreateToken(tokenForm)\n  }\n\n  async function onCreateToken(token) {\n    console.log(token)\n    console.log(account)\n    let result = await factory.newLexToken(\n      token.name,                                     //  new token name\n      token.symbol,                                   //  new token symbol\n      token.stamp,                                    //  new token stamp?\n      token.decimals,                                 //  [constant] new token decimals \n      token.cap,                                      //  [constant] new token maximum supply cap\n      token.initialSupply,                            //  [constant] new token initial supply\n      account,                                        //  new token owner\n      true,                                           //  [constant] new token governed by LexDAO\n      {\n        value: utils.parseEther(\"0.0009\")             //  lexdao tribute\n      }\n    )\n    \n    console.log(result);\n    return result;\n  }\n\n  return(\n    <Wrapper>\n      <Logo>\n\n      </Logo>\n      <div style={{ gridArea: 'header', textAlign: 'center' }}>\n        <h1>Personal Token Factory</h1>\n        <sub>LexDAO built. Legal engineer approved.</sub>\n      </div>\n      <Description>\n        <h3>Why use \"LexDAO Certified\" personal tokens?</h3>\n        <p>For one, these are the tokens we use, and we're a bunch of lawyers. We've built in stuff like dispute resolution, a Terms of Service, and some standardized values. </p>\n\n        <h3>Standardized Values:</h3>\n        <p>\n          1 Token = 1 Minute of Your Time<br />\n          Initial Offering: 60,000 Tokens (1,000 Hrs)<br />\n          Total Cap: 240,000 Tokens (4,000 Hrs) <br />\n          Decimal places: 6 <br />\n          LexDAO Fee: .0009 ETH\n        </p>\n\n        <h3>What about disputes?</h3>\n        <p>Having trouble with a personal token transaction? LexDAO has your back with dispute resolution built in.</p>\n        <p><strong>Need to start a dispute?</strong>&nbsp;\n          <Link onClick={() => history.push('/personal-token-dispute')}>\n            Click Here\n          </Link>\n        </p>\n\n        <h3>Some legal stuff:</h3>\n        <p>\n          <Link onClick={() => history.push('/why-email')}>\n            Learn why you might want to attach your email.\n          </Link>\n        </p>\n        <p>If you do not provide your own your Terms of Service link, your token will be governed by&nbsp;\n          <Link onClick={() => history.push('/personal-token-dispute')}>\n            LexDAO Default Personal Token TOS\n          </Link>\n        </p>\n        <p>By clicking \"Mint\" you agreed to the&nbsp;\n          <Link onClick={() => history.push('/personal-token-dispute')}>\n            LexDAO Terms of Service\n          </Link>.\n        </p>\n        <p>\n          Transaction fee will include a .0009 tribute to LexDAO.\n        </p>\n      </Description>\n      <TokenForm>\n        \n        <div>\n          <h3>Step 1: Connect a Web3 Wallet</h3>\n          <div style={{ maxWidth: '200px' }}>\n            <Web3Status />\n          </div>\n          <h3>Step 2: Complete the following form</h3>\n        </div>\n        <form>\n          {tokenFormItems.map(item => {\n            return(\n              <input\n                key={item.name}\n                id={item.name}\n                type={item.type}\n                placeholder={item.placeholder}\n                onChange={handleChange}\n              />\n            )\n          })}\n        </form>\n        <Button\n          onClick={handleSubmit}\n        >\n          Mint\n        </Button>\n      </TokenForm>\n    </Wrapper>\n  )\n}\n\nexport default withRouter(PersonalToken)\n"]},"metadata":{},"sourceType":"module"}