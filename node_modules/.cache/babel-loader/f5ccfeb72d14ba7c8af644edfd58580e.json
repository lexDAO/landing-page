{"ast":null,"code":"\"use strict\";\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar bignumber_js_1 = __importDefault(require(\"bignumber.js\"));\n\nvar ethers_1 = require(\"ethers\");\n\nvar constants_1 = require(\"../constants\");\n\nfunction ensureUInt8(number) {\n  if (!Number.isInteger(number) || number < 0 || number > constants_1._MAX_UINT8) {\n    throw Error(\"Passed number '\" + number + \"' is not a valid uint8.\");\n  }\n}\n\nfunction ensureAllUInt8(numbers) {\n  numbers.forEach(ensureUInt8);\n}\n\nexports.ensureAllUInt8 = ensureAllUInt8;\n\nfunction ensureUInt256(bigNumber) {\n  if (!bigNumber.isInteger() || bigNumber.isLessThan(constants_1._0) || bigNumber.isGreaterThan(constants_1._MAX_UINT256)) {\n    throw Error(\"Passed bigNumber '\" + bigNumber + \"' is not a valid uint256.\");\n  }\n}\n\nfunction ensureAllUInt256(bigNumbers) {\n  bigNumbers.forEach(ensureUInt256);\n}\n\nexports.ensureAllUInt256 = ensureAllUInt256;\n\nfunction ensureBoundedInteger(number, bounds) {\n  var _a = typeof bounds === 'number' ? [0, bounds] : [bounds[0], bounds[1]],\n      minimum = _a[0],\n      maximum = _a[1];\n\n  if (!Number.isInteger(number) || number < minimum || number > maximum) {\n    throw Error(\"Passed number '\" + number + \"' is not an integer between '\" + minimum + \"' and '\" + maximum + \"' (inclusive).\");\n  }\n}\n\nexports.ensureBoundedInteger = ensureBoundedInteger;\n\nfunction normalizeBigNumberish(bigNumberish) {\n  var bigNumber = bignumber_js_1.default.isBigNumber(bigNumberish) ? bigNumberish : new bignumber_js_1.default(bigNumberish.toString());\n\n  if (!bigNumber.isFinite()) {\n    throw Error(\"Passed bigNumberish '\" + bigNumberish + \"' of type '\" + typeof bigNumberish + \"' is not valid.\");\n  }\n\n  return bigNumber;\n}\n\nexports.normalizeBigNumberish = normalizeBigNumberish;\n\nfunction normalizeAddress(address) {\n  return ethers_1.ethers.utils.getAddress(address.toLowerCase());\n}\n\nexports.normalizeAddress = normalizeAddress;\n\nfunction getEthToken(chainId) {\n  return __assign({}, chainId ? {\n    chainId: chainId\n  } : {}, {\n    address: constants_1.ETH,\n    decimals: 18\n  });\n}\n\nexports.getEthToken = getEthToken;","map":{"version":3,"sources":["../../src/_utils/index.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar bignumber_js_1 = __importDefault(require(\"bignumber.js\"));\nvar ethers_1 = require(\"ethers\");\nvar constants_1 = require(\"../constants\");\nfunction ensureUInt8(number) {\n    if (!Number.isInteger(number) || number < 0 || number > constants_1._MAX_UINT8) {\n        throw Error(\"Passed number '\" + number + \"' is not a valid uint8.\");\n    }\n}\nfunction ensureAllUInt8(numbers) {\n    numbers.forEach(ensureUInt8);\n}\nexports.ensureAllUInt8 = ensureAllUInt8;\nfunction ensureUInt256(bigNumber) {\n    if (!bigNumber.isInteger() || bigNumber.isLessThan(constants_1._0) || bigNumber.isGreaterThan(constants_1._MAX_UINT256)) {\n        throw Error(\"Passed bigNumber '\" + bigNumber + \"' is not a valid uint256.\");\n    }\n}\nfunction ensureAllUInt256(bigNumbers) {\n    bigNumbers.forEach(ensureUInt256);\n}\nexports.ensureAllUInt256 = ensureAllUInt256;\nfunction ensureBoundedInteger(number, bounds) {\n    var _a = typeof bounds === 'number' ? [0, bounds] : [bounds[0], bounds[1]], minimum = _a[0], maximum = _a[1];\n    if (!Number.isInteger(number) || number < minimum || number > maximum) {\n        throw Error(\"Passed number '\" + number + \"' is not an integer between '\" + minimum + \"' and '\" + maximum + \"' (inclusive).\");\n    }\n}\nexports.ensureBoundedInteger = ensureBoundedInteger;\nfunction normalizeBigNumberish(bigNumberish) {\n    var bigNumber = bignumber_js_1.default.isBigNumber(bigNumberish)\n        ? bigNumberish\n        : new bignumber_js_1.default(bigNumberish.toString());\n    if (!bigNumber.isFinite()) {\n        throw Error(\"Passed bigNumberish '\" + bigNumberish + \"' of type '\" + typeof bigNumberish + \"' is not valid.\");\n    }\n    return bigNumber;\n}\nexports.normalizeBigNumberish = normalizeBigNumberish;\nfunction normalizeAddress(address) {\n    return ethers_1.ethers.utils.getAddress(address.toLowerCase());\n}\nexports.normalizeAddress = normalizeAddress;\nfunction getEthToken(chainId) {\n    return __assign({}, (chainId ? { chainId: chainId } : {}), { address: constants_1.ETH, decimals: 18 });\n}\nexports.getEthToken = getEthToken;\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"script"}